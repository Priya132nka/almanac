dtmc


const int eps_0_1 = 4;


module INIT

    i : bool init false;
    [initialisation] !i -> 1.0:(i'=true);

endmodule


module SYNC

    t : bool init true;
    [initialisation] !i -> 1.0:(t' = false);
    [action] !t -> 1.0:(t' = true);
    [transition] t -> 1.0:(t' = false);

endmodule


module STATE_0

    s0 : [0..2] init 2;
    [initialisation] !i -> 0.40722161531448364:(s0'=0) + 0.5927783846855164:(s0'=1);
    [transition] true & (a0=0 & a1=0) -> ((0.41400468349456787*s0 + 0.0*s1)/max(0.0, (0.41400468349456787*s0 + 0.0*s1),(0.0*s0 + 0.0*s1))):(s0'=1) + (1.0 - ((0.41400468349456787*s0 + 0.0*s1)/max(0.0, (0.41400468349456787*s0 + 0.0*s1),(0.0*s0 + 0.0*s1)))):(s0'=0);
    [transition] true & (a0=1 & a1=0) -> ((0.41400468349456787*s0 + 0.0*s1)/max(0.0, (0.41400468349456787*s0 + 0.0*s1),(0.0*s0 + 0.0*s1))):(s0'=1) + (1.0 - ((0.41400468349456787*s0 + 0.0*s1)/max(0.0, (0.41400468349456787*s0 + 0.0*s1),(0.0*s0 + 0.0*s1)))):(s0'=0);
    [transition] true & (a0=2 & a1=0) -> ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s0'=1) + (1.0 - ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s0'=0);
    [transition] true & (a0=0 & a1=1) -> ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s0'=1) + (1.0 - ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s0'=0);
    [transition] true & (a0=1 & a1=1) -> ((1.0*s0 + 0.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1))):(s0'=1) + (1.0 - ((1.0*s0 + 0.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1)))):(s0'=0);
    [transition] true & (a0=2 & a1=1) -> ((1.0*s0 + 0.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1))):(s0'=1) + (1.0 - ((1.0*s0 + 0.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1)))):(s0'=0);
    [transition] true & (a0=0 & a1=2) -> ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s0'=1) + (1.0 - ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s0'=0);
    [transition] true & (a0=1 & a1=2) -> ((1.0*s0 + 0.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1))):(s0'=1) + (1.0 - ((1.0*s0 + 0.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1)))):(s0'=0);
    [transition] true & (a0=2 & a1=2) -> ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s0'=1) + (1.0 - ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s0'=0);
    [transition] true & (a0=0 & a1=3) -> ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s0'=1) + (1.0 - ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s0'=0);
    [transition] true & (a0=1 & a1=3) -> ((1.0*s0 + 0.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1))):(s0'=1) + (1.0 - ((1.0*s0 + 0.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1)))):(s0'=0);
    [transition] true & (a0=2 & a1=3) -> ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s0'=1) + (1.0 - ((0.0*s0 + 0.18255400657653809*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s0'=0);
    [transition] (a0=eps_0_1 | a1=eps_0_1) -> 1.0:(s0'=s0);

endmodule


module STATE_1

    s1 : [0..2] init 2;
    [initialisation] !i -> 0.23088353872299194:(s1'=0) + 0.7691164612770081:(s1'=1);
    [transition] true & (a0=0 & a1=0) -> ((0.0*s0 + 0.0*s1)/max(0.0, (0.41400468349456787*s0 + 0.0*s1),(0.0*s0 + 0.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 0.0*s1)/max(0.0, (0.41400468349456787*s0 + 0.0*s1),(0.0*s0 + 0.0*s1)))):(s1'=0);
    [transition] true & (a0=1 & a1=0) -> ((0.0*s0 + 0.0*s1)/max(0.0, (0.41400468349456787*s0 + 0.0*s1),(0.0*s0 + 0.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 0.0*s1)/max(0.0, (0.41400468349456787*s0 + 0.0*s1),(0.0*s0 + 0.0*s1)))):(s1'=0);
    [transition] true & (a0=2 & a1=0) -> ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s1'=0);
    [transition] true & (a0=0 & a1=1) -> ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s1'=0);
    [transition] true & (a0=1 & a1=1) -> ((0.0*s0 + 1.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 1.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1)))):(s1'=0);
    [transition] true & (a0=2 & a1=1) -> ((0.0*s0 + 1.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 1.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1)))):(s1'=0);
    [transition] true & (a0=0 & a1=2) -> ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s1'=0);
    [transition] true & (a0=1 & a1=2) -> ((0.0*s0 + 1.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 1.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1)))):(s1'=0);
    [transition] true & (a0=2 & a1=2) -> ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s1'=0);
    [transition] true & (a0=0 & a1=3) -> ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s1'=0);
    [transition] true & (a0=1 & a1=3) -> ((0.0*s0 + 1.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 1.0*s1)/max(0.0, (1.0*s0 + 0.0*s1),(0.0*s0 + 1.0*s1)))):(s1'=0);
    [transition] true & (a0=2 & a1=3) -> ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1))):(s1'=1) + (1.0 - ((0.0*s0 + 0.0*s1)/max(0.0, (0.0*s0 + 0.18255400657653809*s1),(0.0*s0 + 0.0*s1)))):(s1'=0);
    [transition] (a0=eps_0_1 | a1=eps_0_1) -> 1.0:(s1'=s1);

endmodule

// F G ((!phi) | (!xi))
module SPEC_0

    q0 : [0..2] init 0;
    [transition] q0=0 & (a0=eps_0_1 | a1=eps_0_1) -> 1.0:(q0'=1);
    [transition] q0=0 & !xi & !phi & !(a0=eps_0_1 | a1=eps_0_1) -> 1.0:(q0'=0);
    [transition] q0=0 & !xi & phi & !(a0=eps_0_1 | a1=eps_0_1) -> 1.0:(q0'=0);
    [transition] q0=0 & xi & !phi & !(a0=eps_0_1 | a1=eps_0_1) -> 1.0:(q0'=0);
    [transition] q0=0 & xi & phi & !(a0=eps_0_1 | a1=eps_0_1) -> 1.0:(q0'=0);
    [transition] q0=1 & !xi & !phi -> 1.0:(q0'=1);
    [transition] q0=1 & !xi & phi -> 1.0:(q0'=1);
    [transition] q0=1 & xi & !phi -> 1.0:(q0'=1);
    [transition] q0=1 & xi & phi -> 1.0:(q0'=2);
    [transition] q0=2 & !xi & !phi -> 1.0:(q0'=2);
    [transition] q0=2 & !xi & phi -> 1.0:(q0'=2);
    [transition] q0=2 & xi & !phi -> 1.0:(q0'=2);
    [transition] q0=2 & xi & phi -> 1.0:(q0'=2);

endmodule

// G F psi
module SPEC_1

    q1 : [0..1] init 0;
    [transition] q1=0 & !psi -> 1.0:(q1'=0);
    [transition] q1=0 & psi -> 1.0:(q1'=0);
    [transition] q1=1 & !psi -> 1.0:(q1'=1);
    [transition] q1=1 & psi -> 1.0:(q1'=1);

endmodule


module ACTION_0

    a0 : [-1..4] init -1;
    [action] s0=0 & s1=0 & q0=0 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=0 & q0=0 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=0 & q0=1 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=0 & q0=1 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=0 & q0=2 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=0 & q0=2 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=1 & q0=0 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=1 & q0=0 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=1 & q0=1 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=1 & q0=1 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=1 & q0=2 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=0 & s1=1 & q0=2 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=0 & q0=0 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=0 & q0=0 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=0 & q0=1 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=0 & q0=1 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=0 & q0=2 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=0 & q0=2 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=1 & q0=0 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=1 & q0=0 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=1 & q0=1 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=1 & q0=1 & q1=1 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=1 & q0=2 & q1=0 -> 1.0:(a0'=eps_0_1);
    [action] s0=1 & s1=1 & q0=2 & q1=1 -> 1.0:(a0'=eps_0_1);

endmodule


module ACTION_1

    a1 : [-1..4] init -1;
    [action] s0=0 & s1=0 & q0=0 & q1=0 -> 1.0:(a1'=eps_0_1);
    [action] s0=0 & s1=0 & q0=0 & q1=1 -> 1.0:(a1'=eps_0_1);
    [action] s0=0 & s1=0 & q0=1 & q1=0 -> 1.0:(a1'=1);
    [action] s0=0 & s1=0 & q0=1 & q1=1 -> 1.0:(a1'=1);
    [action] s0=0 & s1=0 & q0=2 & q1=0 -> 1.0:(a1'=1);
    [action] s0=0 & s1=0 & q0=2 & q1=1 -> 1.0:(a1'=1);
    [action] s0=0 & s1=1 & q0=0 & q1=0 -> 1.0:(a1'=eps_0_1);
    [action] s0=0 & s1=1 & q0=0 & q1=1 -> 1.0:(a1'=eps_0_1);
    [action] s0=0 & s1=1 & q0=1 & q1=0 -> 1.0:(a1'=1);
    [action] s0=0 & s1=1 & q0=1 & q1=1 -> 1.0:(a1'=1);
    [action] s0=0 & s1=1 & q0=2 & q1=0 -> 1.0:(a1'=1);
    [action] s0=0 & s1=1 & q0=2 & q1=1 -> 1.0:(a1'=1);
    [action] s0=1 & s1=0 & q0=0 & q1=0 -> 1.0:(a1'=eps_0_1);
    [action] s0=1 & s1=0 & q0=0 & q1=1 -> 1.0:(a1'=eps_0_1);
    [action] s0=1 & s1=0 & q0=1 & q1=0 -> 1.0:(a1'=1);
    [action] s0=1 & s1=0 & q0=1 & q1=1 -> 1.0:(a1'=1);
    [action] s0=1 & s1=0 & q0=2 & q1=0 -> 1.0:(a1'=1);
    [action] s0=1 & s1=0 & q0=2 & q1=1 -> 1.0:(a1'=1);
    [action] s0=1 & s1=1 & q0=0 & q1=0 -> 1.0:(a1'=eps_0_1);
    [action] s0=1 & s1=1 & q0=0 & q1=1 -> 1.0:(a1'=eps_0_1);
    [action] s0=1 & s1=1 & q0=1 & q1=0 -> 1.0:(a1'=1);
    [action] s0=1 & s1=1 & q0=1 & q1=1 -> 1.0:(a1'=1);
    [action] s0=1 & s1=1 & q0=2 & q1=0 -> 1.0:(a1'=1);
    [action] s0=1 & s1=1 & q0=2 & q1=1 -> 1.0:(a1'=1);

endmodule


formula phi = ((s0 = 1 & s1 = 1));
label "phi" = phi;
formula psi = ((s0 = 1));
label "psi" = psi;
formula chi = ((s0 = 1 & s1 = 1));
label "chi" = chi;
formula xi = ((s0 = 1));
label "xi" = xi;