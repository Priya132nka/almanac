---------------------------------
Specs:1, States:1, Actions:1   0.13
Specs:1, States:1, Actions:2   0.54
Specs:1, States:1, Actions:3   0.48
Specs:1, States:1, Actions:4   0.44
Specs:1, States:1, Actions:5   0.17
---------------------------------
Specs:1, States:2, Actions:1   0.2
Specs:1, States:2, Actions:2   0.26
Specs:1, States:2, Actions:3   0.23
Specs:1, States:2, Actions:4   0.21
Specs:1, States:2, Actions:5   0.3
---------------------------------
Specs:1, States:3, Actions:1   0.16
Specs:1, States:3, Actions:2   0.19
Specs:1, States:3, Actions:3   0.25
Specs:1, States:3, Actions:4   0.02
Specs:1, States:3, Actions:5   0.1
---------------------------------
Specs:1, States:4, Actions:1   0.21
Specs:1, States:4, Actions:2   0.12
Specs:1, States:4, Actions:3   0.1
Specs:1, States:4, Actions:4   0.16
Specs:1, States:4, Actions:5   0.13
---------------------------------
Specs:1, States:5, Actions:1   0.14
Specs:1, States:5, Actions:2   0.3
Specs:1, States:5, Actions:3   0.2
Specs:1, States:5, Actions:4   0.22
Specs:1, States:5, Actions:5   0.22
---------------------------------
Specs:1, States:6, Actions:1   0.13
Specs:1, States:6, Actions:2   0.19
Specs:1, States:6, Actions:3   0.15
Specs:1, States:6, Actions:4   0.26
Specs:1, States:6, Actions:5   0.06
---------------------------------
Specs:1, States:7, Actions:1   0.17
Specs:1, States:7, Actions:2   0.36
Specs:1, States:7, Actions:3   0.1
Specs:1, States:7, Actions:4   0.23
Specs:1, States:7, Actions:5   0.3
---------------------------------
Specs:1, States:8, Actions:1   0.22
Specs:1, States:8, Actions:2   0.29
Specs:1, States:8, Actions:3   0.31
Specs:1, States:8, Actions:4   0.34
Specs:1, States:8, Actions:5   100
---------------------------------
Specs:1, States:9, Actions:1   0.19
Specs:1, States:9, Actions:2   0.38
Specs:1, States:9, Actions:3   100
Specs:1, States:9, Actions:4   100
Specs:1, States:9, Actions:5   100
---------------------------------
Specs:1, States:10, Actions:1   100
Specs:1, States:10, Actions:2   100
Specs:1, States:10, Actions:3   100
Specs:1, States:10, Actions:4   100
Specs:1, States:10, Actions:5   100
---------------------------------
Specs:2, States:1, Actions:1   0.14
Specs:2, States:1, Actions:2   0.15
Specs:2, States:1, Actions:3   0.15
Specs:2, States:1, Actions:4   0.12
Specs:2, States:1, Actions:5   0.23
---------------------------------
Specs:2, States:2, Actions:1   0.07
Specs:2, States:2, Actions:2   0.07
Specs:2, States:2, Actions:3   0.14
Specs:2, States:2, Actions:4   0.25
Specs:2, States:2, Actions:5   0.21
---------------------------------
Specs:2, States:3, Actions:1   0.11
Specs:2, States:3, Actions:2   0.15
Specs:2, States:3, Actions:3   0.12
Specs:2, States:3, Actions:4   0.23
Specs:2, States:3, Actions:5   0.28
---------------------------------
Specs:2, States:4, Actions:1   0.17
Specs:2, States:4, Actions:2   0.34
Specs:2, States:4, Actions:3   0.25
Specs:2, States:4, Actions:4   0.23
Specs:2, States:4, Actions:5   0.45
---------------------------------
Specs:2, States:5, Actions:1   0.18
Specs:2, States:5, Actions:2   0.2
Specs:2, States:5, Actions:3   0.23
Specs:2, States:5, Actions:4   0.22
Specs:2, States:5, Actions:5   0.01
---------------------------------
Specs:2, States:6, Actions:1   0.09
Specs:2, States:6, Actions:2   0.15
Specs:2, States:6, Actions:3   0.52
Specs:2, States:6, Actions:4   100
Specs:2, States:6, Actions:5   100
---------------------------------
Specs:2, States:7, Actions:1   0.24
Specs:2, States:7, Actions:2   0.17
Specs:2, States:7, Actions:3   0.28
Specs:2, States:7, Actions:4   100
Specs:2, States:7, Actions:5   100
---------------------------------
Specs:2, States:8, Actions:1   0.14
Specs:2, States:8, Actions:2   0.06
Specs:2, States:8, Actions:3   100
Specs:2, States:8, Actions:4   100
Specs:2, States:8, Actions:5   100
---------------------------------
Specs:2, States:9, Actions:1   0.25
Specs:2, States:9, Actions:2   100
Specs:2, States:9, Actions:3   100
Specs:2, States:9, Actions:4   100
Specs:2, States:9, Actions:5   100
---------------------------------
Specs:2, States:10, Actions:1   100
Specs:2, States:10, Actions:2   100
Specs:2, States:10, Actions:3   100
Specs:2, States:10, Actions:4   100
Specs:2, States:10, Actions:5   100
Using CPU!
Using CPU!
Using CPU!
Using CPU!
Using CPU!
into run
weights: [0.4, 0.6]
[{(): 0, ('chi',): 1, ('psi',): 0, ('chi', 'psi'): 0}, {(): 1, ('chi',): 1, ('psi',): 0, ('chi', 'psi'): 0}, {(): 2, ('chi',): 2, ('psi',): 2, ('chi', 'psi'): 2}]
[{(): [True], ('chi',): [None], ('psi',): [True], ('chi', 'psi'): [True]}, {(): [None], ('chi',): [None], ('psi',): [True], ('chi', 'psi'): [True]}, {(): [None], ('chi',): [None], ('psi',): [None], ('chi', 'psi'): [None]}]
[]
{'psi', 'chi'}
labels:{'chi'}
[{(): 0, ('phi',): 0}, {(): 1, ('phi',): 1}]
[{(): [None], ('phi',): [True]}, {(): [None], ('phi',): [None]}]
[]
{'phi'}
labels:{'phi'}
act size of 0 : 2
act size of 1 : 2
into training
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 0.4

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 0.8

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 1.2000000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 1.8000000000000003

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 2.4000000000000004

done: False
patient pred:tensor([[0.1127],
        [0.0997],
        [0.1094]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.0898],
        [1.0985],
        [1.0898]])
values:tensor([[0.0997],
        [0.1127],
        [0.1094],
        [0.0997],
        [0.1033]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[-0.2830],
        [-0.2918],
        [-0.2829],
        [-0.2945]], grad_fn=<AddmmBackward0>)
patient target:tensor([[0.7349],
        [0.7349],
        [0.7349],
        [0.7349]])
values:tensor([[-0.2918],
        [-0.2830],
        [-0.2829],
        [-0.2918],
        [-0.2945]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2171, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1626, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2171, grad_fn=<MulBackward0>), tensor(0.2673, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1626, grad_fn=<MulBackward0>), tensor(0.1675, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2171, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1626, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2171, grad_fn=<MulBackward0>), tensor(0.2673, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1626, grad_fn=<MulBackward0>), tensor(0.1675, grad_fn=<MulBackward0>)]
Natural gradient 0 converged!
Natural gradient 1 converged!
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 2.8000000000000003

done: False
patient pred:tensor([[0.2741]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2351]])
values:tensor([[0.2741]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3021, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.2944, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3021, grad_fn=<MulBackward0>), tensor(0.0004, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.2944, grad_fn=<MulBackward0>), tensor(0.0014, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2809, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.2723, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2809, grad_fn=<MulBackward0>), tensor(0.0021, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.2723, grad_fn=<MulBackward0>), tensor(0.0039, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 3.4000000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 4.0

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 4.6

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 4.6

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 4.6

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 4.6

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 5.199999999999999

done: False
patient pred:tensor([[0.4560]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.3927]])
values:tensor([[0.4560],
        [0.4334],
        [0.4438],
        [0.4438],
        [0.4560],
        [0.4323]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2386],
        [0.2377],
        [0.2377],
        [0.2377],
        [0.2401],
        [0.2288]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2139],
        [1.2139],
        [1.2139],
        [1.2139],
        [1.2139],
        [1.2139]])
values:tensor([[0.2386],
        [0.2401],
        [0.2377],
        [0.2377],
        [0.2386],
        [0.2288]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0517, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0323, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0517, grad_fn=<MulBackward0>), tensor(0.3180, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0323, grad_fn=<MulBackward0>), tensor(0.2480, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0515, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0312, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0515, grad_fn=<MulBackward0>), tensor(0.3444, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0312, grad_fn=<MulBackward0>), tensor(0.2685, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 5.6

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 6.0

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 6.6

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 7.199999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 7.799999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 8.399999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 8.399999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 8.399999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 8.999999999999998

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 8.999999999999998

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 8.999999999999998

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 9.599999999999998

done: False
patient pred:tensor([[0.3391],
        [0.3391],
        [0.3152]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2836],
        [1.2836],
        [1.2935]])
values:tensor([[0.3391],
        [0.3111],
        [0.3206],
        [0.3206],
        [0.3391],
        [0.3118],
        [0.3152],
        [0.3111],
        [0.3261]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.3092],
        [0.3130],
        [0.3130],
        [0.3130],
        [0.3136],
        [0.3032],
        [0.3092],
        [0.3014],
        [0.2972],
        [0.3130],
        [0.3130],
        [0.3130],
        [0.3130],
        [0.3136],
        [0.3032],
        [0.3130],
        [0.3136],
        [0.3032]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817],
        [1.2817]])
values:tensor([[0.3092],
        [0.3136],
        [0.3130],
        [0.3130],
        [0.3092],
        [0.3032],
        [0.3014],
        [0.3136],
        [0.2972]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0960, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0516, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0960, grad_fn=<MulBackward0>), tensor(0.3411, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0516, grad_fn=<MulBackward0>), tensor(0.1525, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0811, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0454, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0811, grad_fn=<MulBackward0>), tensor(0.3443, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0454, grad_fn=<MulBackward0>), tensor(0.1526, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 9.999999999999998

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 10.399999999999999

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 10.799999999999999

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 11.2

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 11.6

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 12.0

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 12.4

done: False
patient pred:tensor([[0.1988],
        [0.1988],
        [0.1726],
        [0.1988],
        [0.1726],
        [0.1852],
        [0.1726],
        [0.1852],
        [0.1852],
        [0.1852]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1553],
        [1.1553],
        [1.1667],
        [1.1553],
        [1.1667],
        [1.1553],
        [1.1667],
        [1.1667],
        [1.1667],
        [1.1667]])
values:tensor([[0.1988],
        [0.1610],
        [0.1777],
        [0.1777],
        [0.1988],
        [0.1624],
        [0.1726],
        [0.1610],
        [0.1852],
        [0.1726],
        [0.1852]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2337],
        [0.2400],
        [0.2400],
        [0.2400],
        [0.2395],
        [0.2298],
        [0.2337],
        [0.2242],
        [0.2233],
        [0.2400],
        [0.2400],
        [0.2400],
        [0.2400],
        [0.2395],
        [0.2298],
        [0.2400],
        [0.2395],
        [0.2298]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160],
        [1.2160]])
values:tensor([[0.2337],
        [0.2395],
        [0.2400],
        [0.2400],
        [0.2337],
        [0.2298],
        [0.2242],
        [0.2395],
        [0.2233],
        [0.2242],
        [0.2233]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.1910, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0880, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1910, grad_fn=<MulBackward0>), tensor(0.2670, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0880, grad_fn=<MulBackward0>), tensor(0.1476, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1992, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0911, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1992, grad_fn=<MulBackward0>), tensor(0.2700, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0911, grad_fn=<MulBackward0>), tensor(0.1493, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 12.8

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 13.4

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 14.0

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 14.0

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 14.0

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 14.0

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 14.0

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 14.0

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 14.0

done: False
patient pred:tensor([[0.1749],
        [0.1749],
        [0.1483],
        [0.1749],
        [0.1483],
        [0.1625],
        [0.1483],
        [0.1625],
        [0.1625],
        [0.1625],
        [0.1749]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1335],
        [1.1335],
        [1.1463],
        [1.1335],
        [1.1463],
        [1.1335],
        [1.1463],
        [1.1463],
        [1.1463],
        [1.1463],
        [1.1335]])
values:tensor([[0.1749],
        [0.1345],
        [0.1519],
        [0.1519],
        [0.1749],
        [0.1367],
        [0.1483],
        [0.1345],
        [0.1625],
        [0.1483],
        [0.1625]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.1955],
        [0.2070],
        [0.2070],
        [0.2070],
        [0.2042],
        [0.1958],
        [0.1955],
        [0.1817],
        [0.1820],
        [0.2070],
        [0.2070],
        [0.2070],
        [0.2070],
        [0.2042],
        [0.1958],
        [0.2070],
        [0.2042],
        [0.1958],
        [0.1955],
        [0.1817],
        [0.2070]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863],
        [1.1863]])
values:tensor([[0.1955],
        [0.2042],
        [0.2070],
        [0.2070],
        [0.1955],
        [0.1958],
        [0.1817],
        [0.2042],
        [0.1820],
        [0.1817],
        [0.1820]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.1571, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0891, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1571, grad_fn=<MulBackward0>), tensor(0.2448, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0891, grad_fn=<MulBackward0>), tensor(0.1055, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1623, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0919, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1623, grad_fn=<MulBackward0>), tensor(0.2429, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0919, grad_fn=<MulBackward0>), tensor(0.1035, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 14.6

done: False
patient pred:tensor([[0.1865],
        [0.1865],
        [0.1575],
        [0.1865],
        [0.1575],
        [0.1723],
        [0.1575],
        [0.1723],
        [0.1723],
        [0.1723],
        [0.1865]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1418],
        [1.1418],
        [1.1551],
        [1.1418],
        [1.1551],
        [1.1418],
        [1.1551],
        [1.1551],
        [1.1551],
        [1.1551],
        [1.1418]])
values:tensor([[0.1865],
        [0.1406],
        [0.1618],
        [0.1618],
        [0.1865],
        [0.1434],
        [0.1575],
        [0.1406],
        [0.1723],
        [0.1575],
        [0.1723]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2082],
        [0.2246],
        [0.2246],
        [0.2246],
        [0.2198],
        [0.2125],
        [0.2082],
        [0.1908],
        [0.1902],
        [0.2246],
        [0.2246],
        [0.2246],
        [0.2246],
        [0.2198],
        [0.2125],
        [0.2246],
        [0.2198],
        [0.2125],
        [0.2082],
        [0.1908],
        [0.2246],
        [0.2082]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022],
        [1.2022]])
values:tensor([[0.2082],
        [0.2198],
        [0.2246],
        [0.2246],
        [0.2082],
        [0.2125],
        [0.1908],
        [0.2198],
        [0.1902],
        [0.1908],
        [0.1902]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.1516, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0689, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1516, grad_fn=<MulBackward0>), tensor(0.2595, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0689, grad_fn=<MulBackward0>), tensor(0.1382, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1549, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0702, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1549, grad_fn=<MulBackward0>), tensor(0.2577, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0702, grad_fn=<MulBackward0>), tensor(0.1373, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.0

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.6

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.6

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.6

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.6

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.6

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.6

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.6

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.6

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 15.6

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 16.2

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 16.2

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 16.8

done: False
patient pred:tensor([[0.1846],
        [0.1846],
        [0.1548],
        [0.1846],
        [0.1548],
        [0.1705],
        [0.1548],
        [0.1705],
        [0.1705],
        [0.1705],
        [0.1846],
        [0.1846]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1393],
        [1.1393],
        [1.1535],
        [1.1393],
        [1.1535],
        [1.1393],
        [1.1535],
        [1.1535],
        [1.1535],
        [1.1535],
        [1.1393],
        [1.1393]])
values:tensor([[0.1846],
        [0.1349],
        [0.1584],
        [0.1584],
        [0.1846],
        [0.1385],
        [0.1548],
        [0.1349],
        [0.1705],
        [0.1548],
        [0.1705],
        [0.1385]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.1968],
        [0.2173],
        [0.2173],
        [0.2173],
        [0.2105],
        [0.2042],
        [0.1968],
        [0.1756],
        [0.1763],
        [0.2173],
        [0.2173],
        [0.2173],
        [0.2173],
        [0.2105],
        [0.2042],
        [0.2173],
        [0.2105],
        [0.2042],
        [0.1968],
        [0.1756],
        [0.2173],
        [0.1968],
        [0.1968],
        [0.1756],
        [0.2173],
        [0.2105],
        [0.2042],
        [0.2173],
        [0.2105]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956],
        [1.1956]])
values:tensor([[0.1968],
        [0.2105],
        [0.2173],
        [0.2173],
        [0.1968],
        [0.2042],
        [0.1756],
        [0.2105],
        [0.1763],
        [0.1756],
        [0.1763],
        [0.2042]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.1332, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0661, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1332, grad_fn=<MulBackward0>), tensor(0.2632, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0661, grad_fn=<MulBackward0>), tensor(0.1524, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1352, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0671, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1352, grad_fn=<MulBackward0>), tensor(0.2593, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0671, grad_fn=<MulBackward0>), tensor(0.1509, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 17.2

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 17.599999999999998

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 17.999999999999996

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 18.399999999999995

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 18.799999999999994

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 19.199999999999992

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 19.59999999999999

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.43046721000000016, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 19.99999999999999

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.38742048900000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 20.399999999999988

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.34867844010000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 20.799999999999986

done: False
patient pred:tensor([[0.1690],
        [0.1690],
        [0.1348],
        [0.1690],
        [0.1348],
        [0.1532],
        [0.1348],
        [0.1532],
        [0.1532],
        [0.1532],
        [0.1690],
        [0.1690],
        [0.1690],
        [0.1348],
        [0.1532],
        [0.1532],
        [0.1348],
        [0.1532],
        [0.1532],
        [0.1348],
        [0.1532],
        [0.1532]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1213],
        [1.1213],
        [1.1378],
        [1.1213],
        [1.1378],
        [1.1213],
        [1.1378],
        [1.1378],
        [1.1378],
        [1.1378],
        [1.1213],
        [1.1213],
        [1.1213],
        [1.1378],
        [1.1378],
        [1.1213],
        [1.1378],
        [1.1378],
        [1.1213],
        [1.1378],
        [1.1378],
        [1.1378]])
values:tensor([[0.1690],
        [0.1132],
        [0.1403],
        [0.1403],
        [0.1690],
        [0.1172],
        [0.1348],
        [0.1132],
        [0.1532],
        [0.1348],
        [0.1532],
        [0.1172]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2194],
        [0.2452],
        [0.2452],
        [0.2452],
        [0.2365],
        [0.2307],
        [0.2194],
        [0.1945],
        [0.1953],
        [0.2452],
        [0.2452],
        [0.2452],
        [0.2452],
        [0.2365],
        [0.2307],
        [0.2452],
        [0.2365],
        [0.2307],
        [0.2194],
        [0.1945],
        [0.2452],
        [0.2194],
        [0.2194],
        [0.1945],
        [0.2452],
        [0.2365],
        [0.2307],
        [0.2452],
        [0.2365]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207],
        [1.2207]])
values:tensor([[0.2194],
        [0.2365],
        [0.2452],
        [0.2452],
        [0.2194],
        [0.2307],
        [0.1945],
        [0.2365],
        [0.1953],
        [0.1945],
        [0.1953],
        [0.2307]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.1920, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0777, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1920, grad_fn=<MulBackward0>), tensor(0.2272, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0777, grad_fn=<MulBackward0>), tensor(0.0958, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1936, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0784, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1936, grad_fn=<MulBackward0>), tensor(0.2259, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0784, grad_fn=<MulBackward0>), tensor(0.0952, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 21.199999999999985

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 21.599999999999984

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 21.999999999999982

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 22.39999999999998

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 22.79999999999998

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 23.199999999999978

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 23.599999999999977

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.43046721000000016, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 23.999999999999975

done: False
patient pred:tensor([[0.1835],
        [0.1835],
        [0.1495],
        [0.1835],
        [0.1495],
        [0.1694],
        [0.1495],
        [0.1694],
        [0.1694],
        [0.1694],
        [0.1835],
        [0.1835],
        [0.1835],
        [0.1495],
        [0.1694],
        [0.1694],
        [0.1495],
        [0.1694],
        [0.1694],
        [0.1495],
        [0.1694],
        [0.1694],
        [0.1835],
        [0.1495],
        [0.1694],
        [0.1495],
        [0.1694],
        [0.1694],
        [0.1694],
        [0.1694]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1346],
        [1.1346],
        [1.1525],
        [1.1346],
        [1.1525],
        [1.1346],
        [1.1525],
        [1.1525],
        [1.1525],
        [1.1525],
        [1.1346],
        [1.1346],
        [1.1346],
        [1.1525],
        [1.1525],
        [1.1346],
        [1.1525],
        [1.1525],
        [1.1346],
        [1.1525],
        [1.1525],
        [1.1525],
        [1.1346],
        [1.1525],
        [1.1346],
        [1.1525],
        [1.1525],
        [1.1525],
        [1.1525],
        [1.1346]])
values:tensor([[0.1835],
        [0.1245],
        [0.1528],
        [0.1528],
        [0.1835],
        [0.1293],
        [0.1495],
        [0.1245],
        [0.1694],
        [0.1495],
        [0.1694],
        [0.1293]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.1999],
        [0.2303],
        [0.2303],
        [0.2303],
        [0.2200],
        [0.2143],
        [0.1999],
        [0.1714],
        [0.1720],
        [0.2303],
        [0.2303],
        [0.2303],
        [0.2303],
        [0.2200],
        [0.2143],
        [0.2303],
        [0.2200],
        [0.2143],
        [0.1999],
        [0.1714],
        [0.2303],
        [0.1999],
        [0.1999],
        [0.1714],
        [0.2303],
        [0.2200],
        [0.2143],
        [0.2303],
        [0.2200]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073],
        [1.2073]])
values:tensor([[0.1999],
        [0.2200],
        [0.2303],
        [0.2303],
        [0.1999],
        [0.2143],
        [0.1714],
        [0.2200],
        [0.1720],
        [0.1714],
        [0.1720],
        [0.2143]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2227, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1171, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2227, grad_fn=<MulBackward0>), tensor(0.2014, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1171, grad_fn=<MulBackward0>), tensor(0.1086, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2237, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1176, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2237, grad_fn=<MulBackward0>), tensor(0.2010, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1176, grad_fn=<MulBackward0>), tensor(0.1085, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 24.399999999999974

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 24.999999999999975

done: False
patient pred:tensor([[0.1759],
        [0.1759],
        [0.1422],
        [0.1759],
        [0.1422],
        [0.1634],
        [0.1422],
        [0.1634],
        [0.1634],
        [0.1634],
        [0.1759],
        [0.1759],
        [0.1759],
        [0.1422],
        [0.1634],
        [0.1634],
        [0.1422],
        [0.1634],
        [0.1634],
        [0.1422],
        [0.1634],
        [0.1634],
        [0.1759],
        [0.1422],
        [0.1634],
        [0.1422],
        [0.1634],
        [0.1634],
        [0.1634],
        [0.1634],
        [0.1759]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1280],
        [1.1280],
        [1.1470],
        [1.1280],
        [1.1470],
        [1.1280],
        [1.1470],
        [1.1470],
        [1.1470],
        [1.1470],
        [1.1280],
        [1.1280],
        [1.1280],
        [1.1470],
        [1.1470],
        [1.1280],
        [1.1470],
        [1.1470],
        [1.1280],
        [1.1470],
        [1.1470],
        [1.1470],
        [1.1280],
        [1.1470],
        [1.1280],
        [1.1470],
        [1.1470],
        [1.1470],
        [1.1470],
        [1.1280],
        [1.1280]])
values:tensor([[0.1759],
        [0.1144],
        [0.1431],
        [0.1431],
        [0.1759],
        [0.1202],
        [0.1422],
        [0.1144],
        [0.1634],
        [0.1422],
        [0.1634],
        [0.1202]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2135],
        [0.2497],
        [0.2497],
        [0.2497],
        [0.2370],
        [0.2318],
        [0.2135],
        [0.1810],
        [0.1814],
        [0.2497],
        [0.2497],
        [0.2497],
        [0.2497],
        [0.2370],
        [0.2318],
        [0.2497],
        [0.2370],
        [0.2318],
        [0.2135],
        [0.1810],
        [0.2497],
        [0.2135],
        [0.2135],
        [0.1810],
        [0.2497],
        [0.2370],
        [0.2318],
        [0.2497],
        [0.2370],
        [0.2135],
        [0.1810]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247],
        [1.2247]])
values:tensor([[0.2135],
        [0.2370],
        [0.2497],
        [0.2497],
        [0.2135],
        [0.2318],
        [0.1810],
        [0.2370],
        [0.1814],
        [0.1810],
        [0.1814],
        [0.2318]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2210, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0918, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2210, grad_fn=<MulBackward0>), tensor(0.2081, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0918, grad_fn=<MulBackward0>), tensor(0.0863, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2212, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0918, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2212, grad_fn=<MulBackward0>), tensor(0.2090, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0918, grad_fn=<MulBackward0>), tensor(0.0867, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 25.599999999999977

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 26.199999999999978

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 26.199999999999978

done: False
patient pred:tensor([[0.1817],
        [0.1817],
        [0.1453],
        [0.1817],
        [0.1453],
        [0.1698],
        [0.1453],
        [0.1698],
        [0.1698],
        [0.1698],
        [0.1817],
        [0.1817],
        [0.1817],
        [0.1453],
        [0.1698],
        [0.1698],
        [0.1453],
        [0.1698],
        [0.1698],
        [0.1453],
        [0.1698],
        [0.1698],
        [0.1817],
        [0.1453],
        [0.1698],
        [0.1453],
        [0.1698],
        [0.1698],
        [0.1698],
        [0.1698],
        [0.1817]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1308],
        [1.1308],
        [1.1528],
        [1.1308],
        [1.1528],
        [1.1308],
        [1.1528],
        [1.1528],
        [1.1528],
        [1.1528],
        [1.1308],
        [1.1308],
        [1.1308],
        [1.1528],
        [1.1528],
        [1.1308],
        [1.1528],
        [1.1528],
        [1.1308],
        [1.1528],
        [1.1528],
        [1.1528],
        [1.1308],
        [1.1528],
        [1.1308],
        [1.1528],
        [1.1528],
        [1.1528],
        [1.1528],
        [1.1308],
        [1.1308]])
values:tensor([[0.1817],
        [0.1140],
        [0.1466],
        [0.1466],
        [0.1817],
        [0.1207],
        [0.1453],
        [0.1140],
        [0.1698],
        [0.1453],
        [0.1698],
        [0.1207]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.1977],
        [0.2380],
        [0.2380],
        [0.2380],
        [0.2232],
        [0.2184],
        [0.1977],
        [0.1622],
        [0.1641],
        [0.2380],
        [0.2380],
        [0.2380],
        [0.2380],
        [0.2232],
        [0.2184],
        [0.2380],
        [0.2232],
        [0.2184],
        [0.1977],
        [0.1622],
        [0.2380],
        [0.1977],
        [0.1977],
        [0.1622],
        [0.2380],
        [0.2232],
        [0.2184],
        [0.2380],
        [0.2232],
        [0.1977],
        [0.1622],
        [0.1977],
        [0.2380],
        [0.2232],
        [0.2184]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142],
        [1.2142]])
values:tensor([[0.1977],
        [0.2232],
        [0.2380],
        [0.2380],
        [0.1977],
        [0.2184],
        [0.1622],
        [0.2232],
        [0.1641],
        [0.1622],
        [0.1641],
        [0.2184]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2014, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0957, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2014, grad_fn=<MulBackward0>), tensor(0.2031, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0957, grad_fn=<MulBackward0>), tensor(0.1022, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2017, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0958, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2017, grad_fn=<MulBackward0>), tensor(0.2041, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0958, grad_fn=<MulBackward0>), tensor(0.1027, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 26.79999999999998

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 27.39999999999998

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 27.999999999999982

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 27.999999999999982

done: False
patient pred:tensor([[0.1822],
        [0.1822],
        [0.1432],
        [0.1822],
        [0.1432],
        [0.1701],
        [0.1432],
        [0.1701],
        [0.1701],
        [0.1701],
        [0.1822],
        [0.1822],
        [0.1822],
        [0.1432],
        [0.1701],
        [0.1701],
        [0.1432],
        [0.1701],
        [0.1701],
        [0.1432],
        [0.1701],
        [0.1701],
        [0.1822],
        [0.1432],
        [0.1701],
        [0.1432],
        [0.1701],
        [0.1701],
        [0.1701],
        [0.1701],
        [0.1822]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1289],
        [1.1289],
        [1.1531],
        [1.1289],
        [1.1531],
        [1.1289],
        [1.1531],
        [1.1531],
        [1.1531],
        [1.1531],
        [1.1289],
        [1.1289],
        [1.1289],
        [1.1531],
        [1.1531],
        [1.1289],
        [1.1531],
        [1.1531],
        [1.1289],
        [1.1531],
        [1.1531],
        [1.1531],
        [1.1289],
        [1.1531],
        [1.1289],
        [1.1531],
        [1.1531],
        [1.1531],
        [1.1531],
        [1.1289],
        [1.1289]])
values:tensor([[0.1822],
        [0.1083],
        [0.1442],
        [0.1442],
        [0.1822],
        [0.1158],
        [0.1432],
        [0.1083],
        [0.1701],
        [0.1432],
        [0.1701],
        [0.1158]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2208],
        [0.2666],
        [0.2666],
        [0.2666],
        [0.2501],
        [0.2456],
        [0.2208],
        [0.1819],
        [0.1822],
        [0.2666],
        [0.2666],
        [0.2666],
        [0.2666],
        [0.2501],
        [0.2456],
        [0.2666],
        [0.2501],
        [0.2456],
        [0.2208],
        [0.1819],
        [0.2666],
        [0.2208],
        [0.2208],
        [0.1819],
        [0.2666],
        [0.2501],
        [0.2456],
        [0.2666],
        [0.2501],
        [0.2208],
        [0.1819],
        [0.2208],
        [0.2666],
        [0.2501],
        [0.2456],
        [0.2208],
        [0.2666],
        [0.2666]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399],
        [1.2399]])
values:tensor([[0.2208],
        [0.2501],
        [0.2666],
        [0.2666],
        [0.2208],
        [0.2456],
        [0.1819],
        [0.2501],
        [0.1822],
        [0.1819],
        [0.1822],
        [0.2456]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.1906, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1160, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1906, grad_fn=<MulBackward0>), tensor(0.2214, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1160, grad_fn=<MulBackward0>), tensor(0.0877, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1914, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1164, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1914, grad_fn=<MulBackward0>), tensor(0.2226, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.1164, grad_fn=<MulBackward0>), tensor(0.0882, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 28.599999999999984

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 28.599999999999984

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 28.599999999999984

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 28.599999999999984

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 28.599999999999984

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 28.599999999999984

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 28.599999999999984

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 28.599999999999984

Score (1/10): 0.2859999999999998 (recent)   0.2859999999999998 (average)
game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 28.599999999999984

done: False
patient pred:tensor([[0.1862],
        [0.1862],
        [0.1460],
        [0.1862],
        [0.1460],
        [0.1758],
        [0.1460],
        [0.1758],
        [0.1758],
        [0.1758],
        [0.1862],
        [0.1862],
        [0.1862],
        [0.1460],
        [0.1758],
        [0.1758],
        [0.1460],
        [0.1758],
        [0.1758],
        [0.1460],
        [0.1758],
        [0.1758],
        [0.1862],
        [0.1460],
        [0.1758],
        [0.1460],
        [0.1758],
        [0.1758],
        [0.1758],
        [0.1758],
        [0.1862]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1314],
        [1.1314],
        [1.1582],
        [1.1314],
        [1.1582],
        [1.1314],
        [1.1582],
        [1.1582],
        [1.1582],
        [1.1582],
        [1.1314],
        [1.1314],
        [1.1314],
        [1.1582],
        [1.1582],
        [1.1314],
        [1.1582],
        [1.1582],
        [1.1314],
        [1.1582],
        [1.1582],
        [1.1582],
        [1.1314],
        [1.1582],
        [1.1314],
        [1.1582],
        [1.1582],
        [1.1582],
        [1.1582],
        [1.1314],
        [1.1314]])
values:tensor([[0.1862],
        [0.1071],
        [0.1447],
        [0.1447],
        [0.1862],
        [0.1156],
        [0.1460],
        [0.1071],
        [0.1758],
        [0.1460],
        [0.1758],
        [0.1156]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.1885],
        [0.2390],
        [0.2390],
        [0.2390],
        [0.2200],
        [0.2154],
        [0.1885],
        [0.1466],
        [0.1477],
        [0.2390],
        [0.2390],
        [0.2390],
        [0.2390],
        [0.2200],
        [0.2154],
        [0.2390],
        [0.2200],
        [0.2154],
        [0.1885],
        [0.1466],
        [0.2390],
        [0.1885],
        [0.1885],
        [0.1466],
        [0.2390],
        [0.2200],
        [0.2154],
        [0.2390],
        [0.2200],
        [0.1885],
        [0.1466],
        [0.1885],
        [0.2390],
        [0.2200],
        [0.2154],
        [0.1885],
        [0.2390],
        [0.2390],
        [0.1885]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151],
        [1.2151]])
values:tensor([[0.1885],
        [0.2200],
        [0.2390],
        [0.2390],
        [0.1885],
        [0.2154],
        [0.1466],
        [0.2200],
        [0.1477],
        [0.1466],
        [0.1477],
        [0.2154]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.1750, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0804, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1750, grad_fn=<MulBackward0>), tensor(0.2104, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0804, grad_fn=<MulBackward0>), tensor(0.1049, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1757, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0807, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.1757, grad_fn=<MulBackward0>), tensor(0.2113, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0807, grad_fn=<MulBackward0>), tensor(0.1053, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.199999999999985

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 29.799999999999986

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 30.399999999999988

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 30.99999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.59999999999999

done: False
patient pred:tensor([[0.1869],
        [0.1869],
        [0.1449],
        [0.1869],
        [0.1449],
        [0.1781],
        [0.1449],
        [0.1781],
        [0.1781],
        [0.1781],
        [0.1869],
        [0.1869],
        [0.1869],
        [0.1449],
        [0.1781],
        [0.1781],
        [0.1449],
        [0.1781],
        [0.1781],
        [0.1449],
        [0.1781],
        [0.1781],
        [0.1869],
        [0.1449],
        [0.1781],
        [0.1449],
        [0.1781],
        [0.1781],
        [0.1781],
        [0.1781],
        [0.1869]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1304],
        [1.1304],
        [1.1603],
        [1.1304],
        [1.1603],
        [1.1304],
        [1.1603],
        [1.1603],
        [1.1603],
        [1.1603],
        [1.1304],
        [1.1304],
        [1.1304],
        [1.1603],
        [1.1603],
        [1.1304],
        [1.1603],
        [1.1603],
        [1.1304],
        [1.1603],
        [1.1603],
        [1.1603],
        [1.1304],
        [1.1603],
        [1.1304],
        [1.1603],
        [1.1603],
        [1.1603],
        [1.1603],
        [1.1304],
        [1.1304]])
values:tensor([[0.1869],
        [0.1025],
        [0.1411],
        [0.1411],
        [0.1869],
        [0.1119],
        [0.1449],
        [0.1025],
        [0.1781],
        [0.1449],
        [0.1781],
        [0.1119]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2164],
        [0.2731],
        [0.2731],
        [0.2731],
        [0.2517],
        [0.2472],
        [0.2164],
        [0.1708],
        [0.1703],
        [0.2731],
        [0.2731],
        [0.2731],
        [0.2731],
        [0.2517],
        [0.2472],
        [0.2731],
        [0.2517],
        [0.2472],
        [0.2164],
        [0.1708],
        [0.2731],
        [0.2164],
        [0.2164],
        [0.1708],
        [0.2731],
        [0.2517],
        [0.2472],
        [0.2731],
        [0.2517],
        [0.2164],
        [0.1708],
        [0.2164],
        [0.2731],
        [0.2517],
        [0.2472],
        [0.2164],
        [0.2731],
        [0.2731],
        [0.2164],
        [0.2164],
        [0.2731],
        [0.2731],
        [0.2517],
        [0.2472],
        [0.2731],
        [0.2731]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458],
        [1.2458]])
values:tensor([[0.2164],
        [0.2517],
        [0.2731],
        [0.2731],
        [0.2164],
        [0.2472],
        [0.1708],
        [0.2517],
        [0.1703],
        [0.1708],
        [0.1703],
        [0.2472]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2433, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0683, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2433, grad_fn=<MulBackward0>), tensor(0.2796, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0683, grad_fn=<MulBackward0>), tensor(0.0674, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2439, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0684, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2439, grad_fn=<MulBackward0>), tensor(0.2791, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0684, grad_fn=<MulBackward0>), tensor(0.0671, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 31.99999999999999

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 32.39999999999999

done: False
patient pred:tensor([[0.1901],
        [0.1901],
        [0.1466],
        [0.1901],
        [0.1466],
        [0.1829],
        [0.1466],
        [0.1829],
        [0.1829],
        [0.1829],
        [0.1901],
        [0.1901],
        [0.1901],
        [0.1466],
        [0.1829],
        [0.1829],
        [0.1466],
        [0.1829],
        [0.1829],
        [0.1466],
        [0.1829],
        [0.1829],
        [0.1901],
        [0.1466],
        [0.1829],
        [0.1466],
        [0.1829],
        [0.1829],
        [0.1829],
        [0.1829],
        [0.1901],
        [0.1901],
        [0.1466]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1320],
        [1.1320],
        [1.1646],
        [1.1320],
        [1.1646],
        [1.1320],
        [1.1646],
        [1.1646],
        [1.1646],
        [1.1646],
        [1.1320],
        [1.1320],
        [1.1320],
        [1.1646],
        [1.1646],
        [1.1320],
        [1.1646],
        [1.1646],
        [1.1320],
        [1.1646],
        [1.1646],
        [1.1646],
        [1.1320],
        [1.1646],
        [1.1320],
        [1.1646],
        [1.1646],
        [1.1646],
        [1.1646],
        [1.1320],
        [1.1320],
        [1.1320],
        [1.1320]])
values:tensor([[0.1901],
        [0.1000],
        [0.1399],
        [0.1399],
        [0.1901],
        [0.1103],
        [0.1466],
        [0.1000],
        [0.1829],
        [0.1466],
        [0.1829],
        [0.1103]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2269],
        [0.2926],
        [0.2926],
        [0.2926],
        [0.2670],
        [0.2633],
        [0.2269],
        [0.1754],
        [0.1742],
        [0.2926],
        [0.2926],
        [0.2926],
        [0.2926],
        [0.2670],
        [0.2633],
        [0.2926],
        [0.2670],
        [0.2633],
        [0.2269],
        [0.1754],
        [0.2926],
        [0.2269],
        [0.2269],
        [0.1754],
        [0.2926],
        [0.2670],
        [0.2633],
        [0.2926],
        [0.2670],
        [0.2269],
        [0.1754],
        [0.2269],
        [0.2926],
        [0.2670],
        [0.2633],
        [0.2269],
        [0.2926],
        [0.2926],
        [0.2269],
        [0.2269],
        [0.2926],
        [0.2926],
        [0.2670],
        [0.2633],
        [0.2926],
        [0.2926]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633],
        [1.2633]])
values:tensor([[0.2269],
        [0.2670],
        [0.2926],
        [0.2926],
        [0.2269],
        [0.2633],
        [0.1754],
        [0.2670],
        [0.1742],
        [0.1754],
        [0.1742],
        [0.2633]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2515, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0554, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2515, grad_fn=<MulBackward0>), tensor(0.2760, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0554, grad_fn=<MulBackward0>), tensor(0.0835, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2512, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0553, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2512, grad_fn=<MulBackward0>), tensor(0.2766, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0553, grad_fn=<MulBackward0>), tensor(0.0836, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 32.99999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 32.99999999999999

done: False
patient pred:tensor([[0.1923],
        [0.1923],
        [0.1444],
        [0.1923],
        [0.1444],
        [0.1833],
        [0.1444],
        [0.1833],
        [0.1833],
        [0.1833],
        [0.1923],
        [0.1923],
        [0.1923],
        [0.1444],
        [0.1833],
        [0.1833],
        [0.1444],
        [0.1833],
        [0.1833],
        [0.1444],
        [0.1833],
        [0.1833],
        [0.1923],
        [0.1444],
        [0.1833],
        [0.1444],
        [0.1833],
        [0.1833],
        [0.1833],
        [0.1833],
        [0.1923],
        [0.1923],
        [0.1444]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1299],
        [1.1299],
        [1.1650],
        [1.1299],
        [1.1650],
        [1.1299],
        [1.1650],
        [1.1650],
        [1.1650],
        [1.1650],
        [1.1299],
        [1.1299],
        [1.1299],
        [1.1650],
        [1.1650],
        [1.1299],
        [1.1650],
        [1.1650],
        [1.1299],
        [1.1650],
        [1.1650],
        [1.1650],
        [1.1299],
        [1.1650],
        [1.1299],
        [1.1650],
        [1.1650],
        [1.1650],
        [1.1650],
        [1.1299],
        [1.1299],
        [1.1299],
        [1.1299]])
values:tensor([[0.1923],
        [0.0936],
        [0.1344],
        [0.1344],
        [0.1923],
        [0.1042],
        [0.1444],
        [0.0936],
        [0.1833],
        [0.1444],
        [0.1833],
        [0.1042]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2145],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.2589],
        [0.2553],
        [0.2145],
        [0.1577],
        [0.1559],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.2589],
        [0.2553],
        [0.2901],
        [0.2589],
        [0.2553],
        [0.2145],
        [0.1577],
        [0.2901],
        [0.2145],
        [0.2145],
        [0.1577],
        [0.2901],
        [0.2589],
        [0.2553],
        [0.2901],
        [0.2589],
        [0.2145],
        [0.1577],
        [0.2145],
        [0.2901],
        [0.2589],
        [0.2553],
        [0.2145],
        [0.2901],
        [0.2901],
        [0.2145],
        [0.2145],
        [0.2901],
        [0.2901],
        [0.2589],
        [0.2553],
        [0.2901],
        [0.2901],
        [0.2145]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611]])
values:tensor([[0.2145],
        [0.2589],
        [0.2901],
        [0.2901],
        [0.2145],
        [0.2553],
        [0.1577],
        [0.2589],
        [0.1559],
        [0.1577],
        [0.1559],
        [0.2553]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2446, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0692, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2446, grad_fn=<MulBackward0>), tensor(0.2813, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0692, grad_fn=<MulBackward0>), tensor(0.0676, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2443, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0691, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2443, grad_fn=<MulBackward0>), tensor(0.2824, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0691, grad_fn=<MulBackward0>), tensor(0.0678, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 33.39999999999999

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 33.79999999999999

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 34.19999999999999

done: False
patient pred:tensor([[0.1992],
        [0.1992],
        [0.1493],
        [0.1992],
        [0.1493],
        [0.1920],
        [0.1493],
        [0.1920],
        [0.1920],
        [0.1920],
        [0.1992],
        [0.1992],
        [0.1992],
        [0.1493],
        [0.1920],
        [0.1920],
        [0.1493],
        [0.1920],
        [0.1920],
        [0.1493],
        [0.1920],
        [0.1920],
        [0.1992],
        [0.1493],
        [0.1920],
        [0.1493],
        [0.1920],
        [0.1920],
        [0.1920],
        [0.1920],
        [0.1992],
        [0.1992],
        [0.1493],
        [0.1992],
        [0.1493],
        [0.1920]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1344],
        [1.1344],
        [1.1728],
        [1.1344],
        [1.1728],
        [1.1344],
        [1.1728],
        [1.1728],
        [1.1728],
        [1.1728],
        [1.1344],
        [1.1344],
        [1.1344],
        [1.1728],
        [1.1728],
        [1.1344],
        [1.1728],
        [1.1728],
        [1.1344],
        [1.1728],
        [1.1728],
        [1.1728],
        [1.1344],
        [1.1728],
        [1.1344],
        [1.1728],
        [1.1728],
        [1.1728],
        [1.1728],
        [1.1344],
        [1.1344],
        [1.1344],
        [1.1344],
        [1.1344],
        [1.1728],
        [1.1344]])
values:tensor([[0.1992],
        [0.0939],
        [0.1359],
        [0.1359],
        [0.1992],
        [0.1056],
        [0.1493],
        [0.0939],
        [0.1920],
        [0.1493],
        [0.1920],
        [0.1056]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2320],
        [0.3170],
        [0.3170],
        [0.3170],
        [0.2817],
        [0.2786],
        [0.2320],
        [0.1682],
        [0.1662],
        [0.3170],
        [0.3170],
        [0.3170],
        [0.3170],
        [0.2817],
        [0.2786],
        [0.3170],
        [0.2817],
        [0.2786],
        [0.2320],
        [0.1682],
        [0.3170],
        [0.2320],
        [0.2320],
        [0.1682],
        [0.3170],
        [0.2817],
        [0.2786],
        [0.3170],
        [0.2817],
        [0.2320],
        [0.1682],
        [0.2320],
        [0.3170],
        [0.2817],
        [0.2786],
        [0.2320],
        [0.3170],
        [0.3170],
        [0.2320],
        [0.2320],
        [0.3170],
        [0.3170],
        [0.2817],
        [0.2786],
        [0.3170],
        [0.3170],
        [0.2320]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853],
        [1.2853]])
values:tensor([[0.2320],
        [0.2817],
        [0.3170],
        [0.3170],
        [0.2320],
        [0.2786],
        [0.1682],
        [0.2817],
        [0.1662],
        [0.1682],
        [0.1662],
        [0.2786]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2566, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0576, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2566, grad_fn=<MulBackward0>), tensor(0.2763, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0576, grad_fn=<MulBackward0>), tensor(0.0829, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2558, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0574, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2558, grad_fn=<MulBackward0>), tensor(0.2777, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0574, grad_fn=<MulBackward0>), tensor(0.0832, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 34.59999999999999

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 34.999999999999986

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 35.399999999999984

done: False
patient pred:tensor([[0.1991],
        [0.1991],
        [0.1471],
        [0.1991],
        [0.1471],
        [0.1935],
        [0.1471],
        [0.1935],
        [0.1935],
        [0.1935],
        [0.1991],
        [0.1991],
        [0.1991],
        [0.1471],
        [0.1935],
        [0.1935],
        [0.1471],
        [0.1935],
        [0.1935],
        [0.1471],
        [0.1935],
        [0.1935],
        [0.1991],
        [0.1471],
        [0.1935],
        [0.1471],
        [0.1935],
        [0.1935],
        [0.1935],
        [0.1935],
        [0.1991],
        [0.1991],
        [0.1471],
        [0.1991],
        [0.1471],
        [0.1935],
        [0.1991],
        [0.1471],
        [0.1935]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1324],
        [1.1324],
        [1.1741],
        [1.1324],
        [1.1741],
        [1.1324],
        [1.1741],
        [1.1741],
        [1.1741],
        [1.1741],
        [1.1324],
        [1.1324],
        [1.1324],
        [1.1741],
        [1.1741],
        [1.1324],
        [1.1741],
        [1.1741],
        [1.1324],
        [1.1741],
        [1.1741],
        [1.1741],
        [1.1324],
        [1.1741],
        [1.1324],
        [1.1741],
        [1.1741],
        [1.1741],
        [1.1741],
        [1.1324],
        [1.1324],
        [1.1324],
        [1.1324],
        [1.1324],
        [1.1741],
        [1.1324],
        [1.1324],
        [1.1741],
        [1.1741]])
values:tensor([[0.1991],
        [0.0867],
        [0.1296],
        [0.1296],
        [0.1991],
        [0.0991],
        [0.1471],
        [0.0867],
        [0.1935],
        [0.1471],
        [0.1935],
        [0.0991]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2076],
        [0.3022],
        [0.3022],
        [0.3022],
        [0.2607],
        [0.2578],
        [0.2076],
        [0.1379],
        [0.1356],
        [0.3022],
        [0.3022],
        [0.3022],
        [0.3022],
        [0.2607],
        [0.2578],
        [0.3022],
        [0.2607],
        [0.2578],
        [0.2076],
        [0.1379],
        [0.3022],
        [0.2076],
        [0.2076],
        [0.1379],
        [0.3022],
        [0.2607],
        [0.2578],
        [0.3022],
        [0.2607],
        [0.2076],
        [0.1379],
        [0.2076],
        [0.3022],
        [0.2607],
        [0.2578],
        [0.2076],
        [0.3022],
        [0.3022],
        [0.2076],
        [0.2076],
        [0.3022],
        [0.3022],
        [0.2607],
        [0.2578],
        [0.3022],
        [0.3022],
        [0.2076]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719],
        [1.2719]])
values:tensor([[0.2076],
        [0.2607],
        [0.3022],
        [0.3022],
        [0.2076],
        [0.2578],
        [0.1379],
        [0.2607],
        [0.1356],
        [0.1379],
        [0.1356],
        [0.2578]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2676, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0769, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2676, grad_fn=<MulBackward0>), tensor(0.2684, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0769, grad_fn=<MulBackward0>), tensor(0.0652, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2666, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0766, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2666, grad_fn=<MulBackward0>), tensor(0.2700, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0766, grad_fn=<MulBackward0>), tensor(0.0657, grad_fn=<MulBackward0>)]
done: False
patient pred:tensor([[0.2053],
        [0.2053],
        [0.1514],
        [0.2053],
        [0.1514],
        [0.2015],
        [0.1514],
        [0.2015],
        [0.2015],
        [0.2015],
        [0.2053],
        [0.2053],
        [0.2053],
        [0.1514],
        [0.2015],
        [0.2015],
        [0.1514],
        [0.2015],
        [0.2015],
        [0.1514],
        [0.2015],
        [0.2015],
        [0.2053],
        [0.1514],
        [0.2015],
        [0.1514],
        [0.2015],
        [0.2015],
        [0.2015],
        [0.2015],
        [0.2053],
        [0.2053],
        [0.1514],
        [0.2053],
        [0.1514],
        [0.2015],
        [0.2053],
        [0.1514],
        [0.2015]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1363],
        [1.1363],
        [1.1814],
        [1.1363],
        [1.1814],
        [1.1363],
        [1.1814],
        [1.1814],
        [1.1814],
        [1.1814],
        [1.1363],
        [1.1363],
        [1.1363],
        [1.1814],
        [1.1814],
        [1.1363],
        [1.1814],
        [1.1814],
        [1.1363],
        [1.1814],
        [1.1814],
        [1.1814],
        [1.1363],
        [1.1814],
        [1.1363],
        [1.1814],
        [1.1814],
        [1.1814],
        [1.1814],
        [1.1363],
        [1.1363],
        [1.1363],
        [1.1363],
        [1.1363],
        [1.1814],
        [1.1363],
        [1.1363],
        [1.1814],
        [1.1814]])
values:tensor([[0.2053],
        [0.0854],
        [0.1295],
        [0.1295],
        [0.2053],
        [0.0987],
        [0.1514],
        [0.0854],
        [0.2015],
        [0.1514],
        [0.2015],
        [0.0987]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2396],
        [0.3428],
        [0.3428],
        [0.3428],
        [0.2988],
        [0.2959],
        [0.2396],
        [0.1616],
        [0.1581],
        [0.3428],
        [0.3428],
        [0.3428],
        [0.3428],
        [0.2988],
        [0.2959],
        [0.3428],
        [0.2988],
        [0.2959],
        [0.2396],
        [0.1616],
        [0.3428],
        [0.2396],
        [0.2396],
        [0.1616],
        [0.3428],
        [0.2988],
        [0.2959],
        [0.3428],
        [0.2988],
        [0.2396],
        [0.1616],
        [0.2396],
        [0.3428],
        [0.2988],
        [0.2959],
        [0.2396],
        [0.3428],
        [0.3428],
        [0.2396],
        [0.2396],
        [0.3428],
        [0.3428],
        [0.2988],
        [0.2959],
        [0.3428],
        [0.3428],
        [0.2396]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085],
        [1.3085]])
values:tensor([[0.2396],
        [0.2988],
        [0.3428],
        [0.3428],
        [0.2396],
        [0.2959],
        [0.1616],
        [0.2988],
        [0.1581],
        [0.1616],
        [0.1581],
        [0.2959]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2675, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0597, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2675, grad_fn=<MulBackward0>), tensor(0.2738, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0597, grad_fn=<MulBackward0>), tensor(0.0801, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2661, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0594, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2661, grad_fn=<MulBackward0>), tensor(0.2759, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0594, grad_fn=<MulBackward0>), tensor(0.0807, grad_fn=<MulBackward0>)]
done: False
patient pred:tensor([[0.2067],
        [0.2067],
        [0.1507],
        [0.2067],
        [0.1507],
        [0.2050],
        [0.1507],
        [0.2050],
        [0.2050],
        [0.2050],
        [0.2067],
        [0.2067],
        [0.2067],
        [0.1507],
        [0.2050],
        [0.2050],
        [0.1507],
        [0.2050],
        [0.2050],
        [0.1507],
        [0.2050],
        [0.2050],
        [0.2067],
        [0.1507],
        [0.2050],
        [0.1507],
        [0.2050],
        [0.2050],
        [0.2050],
        [0.2050],
        [0.2067],
        [0.2067],
        [0.1507],
        [0.2067],
        [0.1507],
        [0.2050],
        [0.2067],
        [0.1507],
        [0.2050]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1356],
        [1.1356],
        [1.1845],
        [1.1356],
        [1.1845],
        [1.1356],
        [1.1845],
        [1.1845],
        [1.1845],
        [1.1845],
        [1.1356],
        [1.1356],
        [1.1356],
        [1.1845],
        [1.1845],
        [1.1356],
        [1.1845],
        [1.1845],
        [1.1356],
        [1.1845],
        [1.1845],
        [1.1845],
        [1.1356],
        [1.1845],
        [1.1356],
        [1.1845],
        [1.1845],
        [1.1845],
        [1.1845],
        [1.1356],
        [1.1356],
        [1.1356],
        [1.1356],
        [1.1356],
        [1.1845],
        [1.1356],
        [1.1356],
        [1.1845],
        [1.1845]])
values:tensor([[0.2067],
        [0.0787],
        [0.1241],
        [0.1241],
        [0.2067],
        [0.0927],
        [0.1507],
        [0.0787],
        [0.2050],
        [0.1507],
        [0.2050],
        [0.0927]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.1964],
        [0.3102],
        [0.3102],
        [0.3102],
        [0.2576],
        [0.2544],
        [0.1964],
        [0.1134],
        [0.1114],
        [0.3102],
        [0.3102],
        [0.3102],
        [0.3102],
        [0.2576],
        [0.2544],
        [0.3102],
        [0.2576],
        [0.2544],
        [0.1964],
        [0.1134],
        [0.3102],
        [0.1964],
        [0.1964],
        [0.1134],
        [0.3102],
        [0.2576],
        [0.2544],
        [0.3102],
        [0.2576],
        [0.1964],
        [0.1134],
        [0.1964],
        [0.3102],
        [0.2576],
        [0.2544],
        [0.1964],
        [0.3102],
        [0.3102],
        [0.1964],
        [0.1964],
        [0.3102],
        [0.3102],
        [0.2576],
        [0.2544],
        [0.3102],
        [0.3102],
        [0.1964]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791],
        [1.2791]])
values:tensor([[0.1964],
        [0.2576],
        [0.3102],
        [0.3102],
        [0.1964],
        [0.2544],
        [0.1134],
        [0.2576],
        [0.1114],
        [0.1134],
        [0.1114],
        [0.2544]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2674, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0741, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2674, grad_fn=<MulBackward0>), tensor(0.2737, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0741, grad_fn=<MulBackward0>), tensor(0.0644, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2657, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0737, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2657, grad_fn=<MulBackward0>), tensor(0.2762, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0737, grad_fn=<MulBackward0>), tensor(0.0650, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 35.999999999999986

done: False
patient pred:tensor([[0.2112],
        [0.2112],
        [0.1534],
        [0.2112],
        [0.1534],
        [0.2125],
        [0.1534],
        [0.2125],
        [0.2125],
        [0.2125],
        [0.2112],
        [0.2112],
        [0.2112],
        [0.1534],
        [0.2125],
        [0.2125],
        [0.1534],
        [0.2125],
        [0.2125],
        [0.1534],
        [0.2125],
        [0.2125],
        [0.2112],
        [0.1534],
        [0.2125],
        [0.1534],
        [0.2125],
        [0.2125],
        [0.2125],
        [0.2125],
        [0.2112],
        [0.2112],
        [0.1534],
        [0.2112],
        [0.1534],
        [0.2125],
        [0.2112],
        [0.1534],
        [0.2125]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1381],
        [1.1381],
        [1.1912],
        [1.1381],
        [1.1912],
        [1.1381],
        [1.1912],
        [1.1912],
        [1.1912],
        [1.1912],
        [1.1381],
        [1.1381],
        [1.1381],
        [1.1912],
        [1.1912],
        [1.1381],
        [1.1912],
        [1.1912],
        [1.1381],
        [1.1912],
        [1.1912],
        [1.1912],
        [1.1381],
        [1.1912],
        [1.1381],
        [1.1912],
        [1.1912],
        [1.1912],
        [1.1912],
        [1.1381],
        [1.1381],
        [1.1381],
        [1.1381],
        [1.1381],
        [1.1912],
        [1.1381],
        [1.1381],
        [1.1912],
        [1.1912]])
values:tensor([[0.2112],
        [0.0757],
        [0.1208],
        [0.1208],
        [0.2112],
        [0.0905],
        [0.1534],
        [0.0757],
        [0.2125],
        [0.1534],
        [0.2125],
        [0.0905]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2539],
        [0.3776],
        [0.3776],
        [0.3776],
        [0.3223],
        [0.3188],
        [0.2539],
        [0.1610],
        [0.1546],
        [0.3776],
        [0.3776],
        [0.3776],
        [0.3776],
        [0.3223],
        [0.3188],
        [0.3776],
        [0.3223],
        [0.3188],
        [0.2539],
        [0.1610],
        [0.3776],
        [0.2539],
        [0.2539],
        [0.1610],
        [0.3776],
        [0.3223],
        [0.3188],
        [0.3776],
        [0.3223],
        [0.2539],
        [0.1610],
        [0.2539],
        [0.3776],
        [0.3223],
        [0.3188],
        [0.2539],
        [0.3776],
        [0.3776],
        [0.2539],
        [0.2539],
        [0.3776],
        [0.3776],
        [0.3223],
        [0.3188],
        [0.3776],
        [0.3776],
        [0.2539],
        [0.2539]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399],
        [1.3399]])
values:tensor([[0.2539],
        [0.3223],
        [0.3776],
        [0.3776],
        [0.2539],
        [0.3188],
        [0.1610],
        [0.3223],
        [0.1546],
        [0.1610],
        [0.1546],
        [0.3188]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2642, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0580, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2642, grad_fn=<MulBackward0>), tensor(0.2874, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0580, grad_fn=<MulBackward0>), tensor(0.0809, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2624, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0576, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2624, grad_fn=<MulBackward0>), tensor(0.2906, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0576, grad_fn=<MulBackward0>), tensor(0.0817, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 36.399999999999984

done: False
patient pred:tensor([[0.2149],
        [0.2149],
        [0.1552],
        [0.2149],
        [0.1552],
        [0.2184],
        [0.1552],
        [0.2184],
        [0.2184],
        [0.2184],
        [0.2149],
        [0.2149],
        [0.2149],
        [0.1552],
        [0.2184],
        [0.2184],
        [0.1552],
        [0.2184],
        [0.2184],
        [0.1552],
        [0.2184],
        [0.2184],
        [0.2149],
        [0.1552],
        [0.2184],
        [0.1552],
        [0.2184],
        [0.2184],
        [0.2184],
        [0.2184],
        [0.2149],
        [0.2149],
        [0.1552],
        [0.2149],
        [0.1552],
        [0.2184],
        [0.2149],
        [0.1552],
        [0.2184],
        [0.2149]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1397],
        [1.1397],
        [1.1966],
        [1.1397],
        [1.1966],
        [1.1397],
        [1.1966],
        [1.1966],
        [1.1966],
        [1.1966],
        [1.1397],
        [1.1397],
        [1.1397],
        [1.1966],
        [1.1966],
        [1.1397],
        [1.1966],
        [1.1966],
        [1.1397],
        [1.1966],
        [1.1966],
        [1.1966],
        [1.1397],
        [1.1966],
        [1.1397],
        [1.1966],
        [1.1966],
        [1.1966],
        [1.1966],
        [1.1397],
        [1.1397],
        [1.1397],
        [1.1397],
        [1.1397],
        [1.1966],
        [1.1397],
        [1.1397],
        [1.1966],
        [1.1966],
        [1.1397]])
values:tensor([[0.2149],
        [0.0701],
        [0.1162],
        [0.1162],
        [0.2149],
        [0.0856],
        [0.1552],
        [0.0701],
        [0.2184],
        [0.1552],
        [0.2184],
        [0.0856]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.1775],
        [0.3089],
        [0.3089],
        [0.3089],
        [0.2445],
        [0.2404],
        [0.1775],
        [0.0815],
        [0.0817],
        [0.3089],
        [0.3089],
        [0.3089],
        [0.3089],
        [0.2445],
        [0.2404],
        [0.3089],
        [0.2445],
        [0.2404],
        [0.1775],
        [0.0815],
        [0.3089],
        [0.1775],
        [0.1775],
        [0.0815],
        [0.3089],
        [0.2445],
        [0.2404],
        [0.3089],
        [0.2445],
        [0.1775],
        [0.0815],
        [0.1775],
        [0.3089],
        [0.2445],
        [0.2404],
        [0.1775],
        [0.3089],
        [0.3089],
        [0.1775],
        [0.1775],
        [0.3089],
        [0.3089],
        [0.2445],
        [0.2404],
        [0.3089],
        [0.3089],
        [0.1775],
        [0.1775]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780],
        [1.2780]])
values:tensor([[0.1775],
        [0.2445],
        [0.3089],
        [0.3089],
        [0.1775],
        [0.2404],
        [0.0815],
        [0.2445],
        [0.0817],
        [0.0815],
        [0.0817],
        [0.2404]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2672, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0732, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2672, grad_fn=<MulBackward0>), tensor(0.2822, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0732, grad_fn=<MulBackward0>), tensor(0.0653, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2654, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0728, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2654, grad_fn=<MulBackward0>), tensor(0.2854, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0728, grad_fn=<MulBackward0>), tensor(0.0661, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 36.79999999999998

done: False
patient pred:tensor([[0.2207],
        [0.2207],
        [0.1585],
        [0.2207],
        [0.1585],
        [0.2263],
        [0.1585],
        [0.2263],
        [0.2263],
        [0.2263],
        [0.2207],
        [0.2207],
        [0.2207],
        [0.1585],
        [0.2263],
        [0.2263],
        [0.1585],
        [0.2263],
        [0.2263],
        [0.1585],
        [0.2263],
        [0.2263],
        [0.2207],
        [0.1585],
        [0.2263],
        [0.1585],
        [0.2263],
        [0.2263],
        [0.2263],
        [0.2263],
        [0.2207],
        [0.2207],
        [0.1585],
        [0.2207],
        [0.1585],
        [0.2263],
        [0.2207],
        [0.1585],
        [0.2263],
        [0.2207],
        [0.2207]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1426],
        [1.1426],
        [1.2037],
        [1.1426],
        [1.2037],
        [1.1426],
        [1.2037],
        [1.2037],
        [1.2037],
        [1.2037],
        [1.1426],
        [1.1426],
        [1.1426],
        [1.2037],
        [1.2037],
        [1.1426],
        [1.2037],
        [1.2037],
        [1.1426],
        [1.2037],
        [1.2037],
        [1.2037],
        [1.1426],
        [1.2037],
        [1.1426],
        [1.2037],
        [1.2037],
        [1.2037],
        [1.2037],
        [1.1426],
        [1.1426],
        [1.1426],
        [1.1426],
        [1.1426],
        [1.2037],
        [1.1426],
        [1.1426],
        [1.2037],
        [1.2037],
        [1.1426],
        [1.1426]])
values:tensor([[0.2207],
        [0.0651],
        [0.1135],
        [0.1135],
        [0.2207],
        [0.0825],
        [0.1585],
        [0.0651],
        [0.2263],
        [0.1585],
        [0.2263],
        [0.0825]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2779],
        [0.4186],
        [0.4186],
        [0.4186],
        [0.3534],
        [0.3483],
        [0.2779],
        [0.1692],
        [0.1592],
        [0.4186],
        [0.4186],
        [0.4186],
        [0.4186],
        [0.3534],
        [0.3483],
        [0.4186],
        [0.3534],
        [0.3483],
        [0.2779],
        [0.1692],
        [0.4186],
        [0.2779],
        [0.2779],
        [0.1692],
        [0.4186],
        [0.3534],
        [0.3483],
        [0.4186],
        [0.3534],
        [0.2779],
        [0.1692],
        [0.2779],
        [0.4186],
        [0.3534],
        [0.3483],
        [0.2779],
        [0.4186],
        [0.4186],
        [0.2779],
        [0.2779],
        [0.4186],
        [0.4186],
        [0.3534],
        [0.3483],
        [0.4186],
        [0.4186],
        [0.2779],
        [0.2779]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768],
        [1.3768]])
values:tensor([[0.2779],
        [0.3534],
        [0.4186],
        [0.4186],
        [0.2779],
        [0.3483],
        [0.1692],
        [0.3534],
        [0.1592],
        [0.1692],
        [0.1592],
        [0.3483]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2698, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0590, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2698, grad_fn=<MulBackward0>), tensor(0.2874, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0590, grad_fn=<MulBackward0>), tensor(0.0788, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2684, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0587, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2684, grad_fn=<MulBackward0>), tensor(0.2903, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0587, grad_fn=<MulBackward0>), tensor(0.0796, grad_fn=<MulBackward0>)]
Natural gradient 0 converged!
Natural gradient 1 converged!
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 37.399999999999984

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 37.999999999999986

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 37.999999999999986

done: False
patient pred:tensor([[0.1501],
        [0.2956]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2661],
        [1.2661]])
values:tensor([[0.2956],
        [0.1501]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0035, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0039, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0035, grad_fn=<MulBackward0>), tensor(0.3743, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0039, grad_fn=<MulBackward0>), tensor(0.3151, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0022, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0028, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0022, grad_fn=<MulBackward0>), tensor(0.3891, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0028, grad_fn=<MulBackward0>), tensor(0.3280, grad_fn=<MulBackward0>)]
done: False
patient pred:tensor([[0.4324],
        [0.5791]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.5212],
        [1.5212]])
values:tensor([[0.5791],
        [0.4324]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0264, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0217, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0264, grad_fn=<MulBackward0>), tensor(0.2645, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0217, grad_fn=<MulBackward0>), tensor(0.2204, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0026, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0014, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0026, grad_fn=<MulBackward0>), tensor(0.3761, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0014, grad_fn=<MulBackward0>), tensor(0.3240, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 38.399999999999984

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 38.999999999999986

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 39.59999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 40.19999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 40.19999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 40.19999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 40.19999999999999

done: False
patient pred:tensor([[0.2217]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1418]])
values:tensor([[0.1046],
        [0.2217],
        [0.1576],
        [0.1046],
        [0.0567]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.6109],
        [0.7656],
        [0.6109],
        [0.4503],
        [0.7656],
        [0.7656]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.6891],
        [1.6891],
        [1.6891],
        [1.6891],
        [1.6891],
        [1.6891]])
values:tensor([[0.7656],
        [0.6109],
        [0.4503],
        [0.7656],
        [0.6745]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0546, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0334, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0546, grad_fn=<MulBackward0>), tensor(0.2789, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0334, grad_fn=<MulBackward0>), tensor(0.1831, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0388, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0290, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0388, grad_fn=<MulBackward0>), tensor(0.3362, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0290, grad_fn=<MulBackward0>), tensor(0.2267, grad_fn=<MulBackward0>)]
done: False
patient pred:tensor([[0.4008]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2935]])
values:tensor([[0.2815],
        [0.4008],
        [0.3261],
        [0.2815],
        [0.2060]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.3296],
        [0.4372],
        [0.3296],
        [0.1978],
        [0.4372],
        [0.4372]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.3934],
        [1.3934],
        [1.3934],
        [1.3934],
        [1.3934],
        [1.3934]])
values:tensor([[0.4372],
        [0.3296],
        [0.1978],
        [0.4372],
        [0.3614]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0522, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0319, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0522, grad_fn=<MulBackward0>), tensor(0.2776, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0319, grad_fn=<MulBackward0>), tensor(0.1964, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0372, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0320, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0372, grad_fn=<MulBackward0>), tensor(0.3316, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0320, grad_fn=<MulBackward0>), tensor(0.2414, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 40.79999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 40.79999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.39999999999999

done: False
patient pred:tensor([[0.4374]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.3010]])
values:tensor([[0.2823],
        [0.4374],
        [0.3344],
        [0.2823],
        [0.1942],
        [0.1942],
        [0.2239],
        [0.2239]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.3678],
        [0.4675],
        [0.3678],
        [0.2337],
        [0.4675],
        [0.4675],
        [0.3678],
        [0.4675],
        [0.3856]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4207],
        [1.4207],
        [1.4207],
        [1.4207],
        [1.4207],
        [1.4207],
        [1.4207],
        [1.4207],
        [1.4207]])
values:tensor([[0.4675],
        [0.3678],
        [0.2337],
        [0.4675],
        [0.3856],
        [0.3856],
        [0.3928],
        [0.3928]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0525, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0171, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0525, grad_fn=<MulBackward0>), tensor(0.2317, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0171, grad_fn=<MulBackward0>), tensor(0.0750, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0246, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0090, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0246, grad_fn=<MulBackward0>), tensor(0.2777, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0090, grad_fn=<MulBackward0>), tensor(0.0894, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 41.99999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 42.599999999999994

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 42.599999999999994

done: False
patient pred:tensor([[0.3151]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1652]])
values:tensor([[0.1100],
        [0.3151],
        [0.1836],
        [0.1100],
        [0.0307],
        [0.0307],
        [0.0492],
        [0.0492],
        [0.3151]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.1789],
        [0.2421],
        [0.1789],
        [0.0681],
        [0.2421],
        [0.2421],
        [0.1789],
        [0.2421],
        [0.1681],
        [0.1789],
        [0.2421]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2179],
        [1.2179],
        [1.2179],
        [1.2179],
        [1.2179],
        [1.2179],
        [1.2179],
        [1.2179],
        [1.2179],
        [1.2179],
        [1.2179]])
values:tensor([[0.2421],
        [0.1789],
        [0.0681],
        [0.2421],
        [0.1681],
        [0.1681],
        [0.1698],
        [0.1698],
        [0.1789]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0394, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0134, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0394, grad_fn=<MulBackward0>), tensor(0.2899, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0134, grad_fn=<MulBackward0>), tensor(0.1209, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0223, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0099, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0223, grad_fn=<MulBackward0>), tensor(0.3008, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0099, grad_fn=<MulBackward0>), tensor(0.1260, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 43.199999999999996

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 43.199999999999996

done: False
patient pred:tensor([[0.4209]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2290]])
values:tensor([[0.1798],
        [0.4209],
        [0.2545],
        [0.1798],
        [0.0720],
        [0.0720],
        [0.0948],
        [0.0948],
        [0.4209]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2331],
        [0.2946],
        [0.2331],
        [0.1128],
        [0.2946],
        [0.2946],
        [0.2331],
        [0.2946],
        [0.2129],
        [0.2331],
        [0.2946],
        [0.2331]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652]])
values:tensor([[0.2946],
        [0.2331],
        [0.1128],
        [0.2946],
        [0.2129],
        [0.2129],
        [0.2133],
        [0.2133],
        [0.2331]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0302, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0106, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0302, grad_fn=<MulBackward0>), tensor(0.3012, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0106, grad_fn=<MulBackward0>), tensor(0.1108, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0239, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0083, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0239, grad_fn=<MulBackward0>), tensor(0.3032, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0083, grad_fn=<MulBackward0>), tensor(0.1106, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 43.599999999999994

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.199999999999996

done: False
patient pred:tensor([[0.3906],
        [0.3906]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1707],
        [1.1707]])
values:tensor([[ 0.1007],
        [ 0.3906],
        [ 0.1897],
        [ 0.1007],
        [-0.0158],
        [-0.0158],
        [ 0.0074],
        [ 0.0074],
        [ 0.3906]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2186],
        [0.2717],
        [0.2186],
        [0.0981],
        [0.2717],
        [0.2717],
        [0.2186],
        [0.2717],
        [0.1852],
        [0.2186],
        [0.2717],
        [0.2186],
        [0.2186],
        [0.0981]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445],
        [1.2445]])
values:tensor([[0.2717],
        [0.2186],
        [0.0981],
        [0.2717],
        [0.1852],
        [0.1852],
        [0.1839],
        [0.1839],
        [0.2186]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0289, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0114, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0289, grad_fn=<MulBackward0>), tensor(0.2531, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0114, grad_fn=<MulBackward0>), tensor(0.0889, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0274, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0119, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0274, grad_fn=<MulBackward0>), tensor(0.2560, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0119, grad_fn=<MulBackward0>), tensor(0.0901, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 44.599999999999994

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 45.199999999999996

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 45.199999999999996

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 45.8

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 46.4

done: False
patient pred:tensor([[0.4649],
        [0.4649],
        [0.4649]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2235],
        [1.2235],
        [1.2235]])
values:tensor([[0.1561],
        [0.4649],
        [0.2483],
        [0.1561],
        [0.0134],
        [0.0134],
        [0.0383],
        [0.0383],
        [0.4649]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2331],
        [0.2795],
        [0.2331],
        [0.1134],
        [0.2795],
        [0.2795],
        [0.2331],
        [0.2795],
        [0.1878],
        [0.2331],
        [0.2795],
        [0.2331],
        [0.2331],
        [0.1134],
        [0.2331],
        [0.1134],
        [0.2795],
        [0.1878],
        [0.2795]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515],
        [1.2515]])
values:tensor([[0.2795],
        [0.2331],
        [0.1134],
        [0.2795],
        [0.1878],
        [0.1878],
        [0.1853],
        [0.1853],
        [0.2331]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0315, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0136, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0315, grad_fn=<MulBackward0>), tensor(0.2807, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0136, grad_fn=<MulBackward0>), tensor(0.1225, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0316, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0137, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0316, grad_fn=<MulBackward0>), tensor(0.2835, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0137, grad_fn=<MulBackward0>), tensor(0.1252, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 46.8

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 47.4

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 48.0

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 48.0

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 48.0

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 48.6

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 49.2

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 49.800000000000004

Score (2/10): 0.21200000000000008 (recent)   0.24900000000000003 (average)
game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 50.400000000000006

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 50.400000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 50.400000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 50.400000000000006

done: False
patient pred:tensor([[0.3948],
        [0.3948],
        [0.3948],
        [0.3948]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1284],
        [1.1284],
        [1.1284],
        [1.1284]])
values:tensor([[ 0.0324],
        [ 0.3948],
        [ 0.1427],
        [ 0.0324],
        [-0.0837],
        [-0.0837],
        [-0.0602],
        [-0.0602],
        [ 0.3948]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2431],
        [0.2858],
        [0.2431],
        [0.1264],
        [0.2858],
        [0.2858],
        [0.2431],
        [0.2858],
        [0.1889],
        [0.2431],
        [0.2858],
        [0.2431],
        [0.2431],
        [0.1264],
        [0.2431],
        [0.1264],
        [0.2858],
        [0.1889],
        [0.2858],
        [0.2431],
        [0.1264],
        [0.2858],
        [0.2858],
        [0.1889],
        [0.2858],
        [0.2858],
        [0.2858]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572],
        [1.2572]])
values:tensor([[0.2858],
        [0.2431],
        [0.1264],
        [0.2858],
        [0.1889],
        [0.1889],
        [0.1857],
        [0.1857],
        [0.2431]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0353, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0170, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0353, grad_fn=<MulBackward0>), tensor(0.3045, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0170, grad_fn=<MulBackward0>), tensor(0.1119, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0319, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0164, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0319, grad_fn=<MulBackward0>), tensor(0.3091, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0164, grad_fn=<MulBackward0>), tensor(0.1138, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 50.800000000000004

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 51.2

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 51.800000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 52.400000000000006

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 53.00000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 53.60000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 54.20000000000001

done: False
patient pred:tensor([[0.5364],
        [0.5364],
        [0.5364],
        [0.5364],
        [0.5364],
        [0.2919]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627]])
values:tensor([[0.1888],
        [0.5364],
        [0.2919],
        [0.1888],
        [0.0313],
        [0.0313],
        [0.0581],
        [0.0581],
        [0.5364],
        [0.2919]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2603],
        [0.3047],
        [0.2603],
        [0.1422],
        [0.3047],
        [0.3047],
        [0.2603],
        [0.3047],
        [0.1998],
        [0.2603],
        [0.3047],
        [0.2603],
        [0.2603],
        [0.1422],
        [0.2603],
        [0.1422],
        [0.3047],
        [0.1998],
        [0.3047],
        [0.2603],
        [0.1422],
        [0.3047],
        [0.3047],
        [0.1998],
        [0.3047],
        [0.3047],
        [0.3047],
        [0.2603],
        [0.1422],
        [0.3047],
        [0.3047],
        [0.3047],
        [0.3047]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743],
        [1.2743]])
values:tensor([[0.3047],
        [0.2603],
        [0.1422],
        [0.3047],
        [0.1998],
        [0.1998],
        [0.1946],
        [0.1946],
        [0.2603],
        [0.1422]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0475, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0222, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0475, grad_fn=<MulBackward0>), tensor(0.3234, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0222, grad_fn=<MulBackward0>), tensor(0.1489, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0403, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0188, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0403, grad_fn=<MulBackward0>), tensor(0.3336, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0188, grad_fn=<MulBackward0>), tensor(0.1543, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 54.60000000000001

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 55.00000000000001

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 55.400000000000006

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 55.800000000000004

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 56.2

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 56.800000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 57.400000000000006

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 57.400000000000006

done: False
patient pred:tensor([[0.3541],
        [0.3541],
        [0.3541],
        [0.3541],
        [0.3541],
        [0.0650],
        [0.3541],
        [0.0650],
        [0.0650],
        [0.2463],
        [0.0650]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.0585],
        [1.0585],
        [1.0585],
        [1.0585],
        [1.0585],
        [1.0585],
        [1.0585],
        [1.0585],
        [1.2217],
        [1.0585],
        [1.2217]])
values:tensor([[-0.0600],
        [ 0.3541],
        [ 0.0650],
        [-0.0600],
        [-0.1607],
        [-0.1607],
        [-0.1363],
        [-0.1363],
        [ 0.3541],
        [ 0.0650],
        [ 0.2463]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2413],
        [0.2876],
        [0.2413],
        [0.1238],
        [0.2876],
        [0.2876],
        [0.2413],
        [0.2876],
        [0.1714],
        [0.2413],
        [0.2876],
        [0.2413],
        [0.2413],
        [0.1238],
        [0.2413],
        [0.1238],
        [0.2876],
        [0.1714],
        [0.2876],
        [0.2413],
        [0.1238],
        [0.2876],
        [0.2876],
        [0.1714],
        [0.2876],
        [0.2876],
        [0.2876],
        [0.2413],
        [0.1238],
        [0.2876],
        [0.2876],
        [0.2876],
        [0.2876],
        [0.2413],
        [0.1238],
        [0.1282],
        [0.2876]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588]])
values:tensor([[0.2876],
        [0.2413],
        [0.1238],
        [0.2876],
        [0.1714],
        [0.1714],
        [0.1671],
        [0.1671],
        [0.2413],
        [0.1238],
        [0.1282]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0860, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0423, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0860, grad_fn=<MulBackward0>), tensor(0.3191, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0423, grad_fn=<MulBackward0>), tensor(0.1157, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0749, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0381, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0749, grad_fn=<MulBackward0>), tensor(0.3243, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0381, grad_fn=<MulBackward0>), tensor(0.1179, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 57.800000000000004

done: False
patient pred:tensor([[0.5656],
        [0.5656],
        [0.5656],
        [0.5656],
        [0.5656],
        [0.3518],
        [0.5656],
        [0.3518],
        [0.3518],
        [0.4888],
        [0.3518],
        [0.5656]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.3166],
        [1.3166],
        [1.3166],
        [1.3166],
        [1.3166],
        [1.3166],
        [1.3166],
        [1.3166],
        [1.4399],
        [1.3166],
        [1.4399],
        [1.3166]])
values:tensor([[0.2332],
        [0.5656],
        [0.3518],
        [0.2332],
        [0.1100],
        [0.1100],
        [0.1269],
        [0.1269],
        [0.5656],
        [0.3518],
        [0.4888]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2520],
        [0.3029],
        [0.2520],
        [0.1300],
        [0.3029],
        [0.3029],
        [0.2520],
        [0.3029],
        [0.1744],
        [0.2520],
        [0.3029],
        [0.2520],
        [0.2520],
        [0.1300],
        [0.2520],
        [0.1300],
        [0.3029],
        [0.1744],
        [0.3029],
        [0.2520],
        [0.1300],
        [0.3029],
        [0.3029],
        [0.1744],
        [0.3029],
        [0.3029],
        [0.3029],
        [0.2520],
        [0.1300],
        [0.3029],
        [0.3029],
        [0.3029],
        [0.3029],
        [0.2520],
        [0.1300],
        [0.1335],
        [0.3029]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726],
        [1.2726]])
values:tensor([[0.3029],
        [0.2520],
        [0.1300],
        [0.3029],
        [0.1744],
        [0.1744],
        [0.1679],
        [0.1679],
        [0.2520],
        [0.1300],
        [0.1335]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.0922, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0385, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0922, grad_fn=<MulBackward0>), tensor(0.3175, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0385, grad_fn=<MulBackward0>), tensor(0.1409, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0818, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0335, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.0818, grad_fn=<MulBackward0>), tensor(0.3215, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0335, grad_fn=<MulBackward0>), tensor(0.1431, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 58.400000000000006

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 58.400000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 58.400000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.00000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 59.60000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 60.20000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 60.20000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 60.20000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 60.20000000000001

done: False
patient pred:tensor([[ 0.2323],
        [ 0.2323],
        [ 0.2323],
        [ 0.2323],
        [ 0.2323],
        [-0.0115],
        [ 0.2323],
        [-0.0115],
        [-0.0115],
        [ 0.1339],
        [-0.0115],
        [ 0.2323]], grad_fn=<AddmmBackward0>)
patient target:tensor([[0.9896],
        [0.9896],
        [0.9896],
        [0.9896],
        [0.9896],
        [0.9896],
        [0.9896],
        [0.9896],
        [1.1205],
        [0.9896],
        [1.1205],
        [0.9896]])
values:tensor([[-0.1539],
        [ 0.2323],
        [-0.0115],
        [-0.1539],
        [-0.2134],
        [-0.2134],
        [-0.1971],
        [-0.1971],
        [ 0.2323],
        [-0.0115],
        [ 0.1339]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.2514],
        [0.3067],
        [0.2514],
        [0.1268],
        [0.3067],
        [0.3067],
        [0.2514],
        [0.3067],
        [0.1658],
        [0.2514],
        [0.3067],
        [0.2514],
        [0.2514],
        [0.1268],
        [0.2514],
        [0.1268],
        [0.3067],
        [0.1658],
        [0.3067],
        [0.2514],
        [0.1268],
        [0.3067],
        [0.3067],
        [0.1658],
        [0.3067],
        [0.3067],
        [0.3067],
        [0.2514],
        [0.1268],
        [0.3067],
        [0.3067],
        [0.3067],
        [0.3067],
        [0.2514],
        [0.1268],
        [0.1296],
        [0.3067],
        [0.2514],
        [0.3067],
        [0.1658],
        [0.3067],
        [0.1658],
        [0.1586],
        [0.3067]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760],
        [1.2760]])
values:tensor([[0.3067],
        [0.2514],
        [0.1268],
        [0.3067],
        [0.1658],
        [0.1658],
        [0.1586],
        [0.1586],
        [0.2514],
        [0.1268],
        [0.1296]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2910, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0218, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2910, grad_fn=<MulBackward0>), tensor(0.9301, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0218, grad_fn=<MulBackward0>), tensor(0.0629, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2625, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0199, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2625, grad_fn=<MulBackward0>), tensor(0.9353, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0199, grad_fn=<MulBackward0>), tensor(0.0637, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 60.60000000000001

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 61.20000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 61.20000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 61.20000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 61.20000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 61.80000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 62.40000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 63.000000000000014

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 63.000000000000014

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 63.000000000000014

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 63.000000000000014

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 63.000000000000014

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 63.000000000000014

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 63.600000000000016

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.20000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.47829690000000014]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 64.80000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.43046721000000016]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 65.4

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 66.0

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 66.0

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 66.0

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.34867844010000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 66.6

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.34867844010000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 66.6

done: False
patient pred:tensor([[0.5987],
        [0.5987],
        [0.5987],
        [0.5987],
        [0.5987],
        [0.4714],
        [0.5987],
        [0.4714],
        [0.4714],
        [0.5541],
        [0.4714],
        [0.5987],
        [0.5987]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4242],
        [1.4242],
        [1.4242],
        [1.4242],
        [1.4242],
        [1.4242],
        [1.4242],
        [1.4242],
        [1.4987],
        [1.4242],
        [1.4987],
        [1.4242],
        [1.4242]])
values:tensor([[0.3492],
        [0.5987],
        [0.4714],
        [0.3492],
        [0.2365],
        [0.2365],
        [0.2474],
        [0.2474],
        [0.5987],
        [0.4714],
        [0.5541]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.1402],
        [1.2883],
        [1.1402],
        [0.9375],
        [1.2883],
        [1.2883],
        [1.1402],
        [1.2883],
        [1.1366],
        [1.1402],
        [1.2883],
        [1.1402],
        [1.1402],
        [0.9375],
        [1.1402],
        [0.9375],
        [1.2883],
        [1.1366],
        [1.2883],
        [1.1402],
        [0.9375],
        [1.2883],
        [1.2883],
        [1.1366],
        [1.2883],
        [1.2883],
        [1.2883],
        [1.1402],
        [0.9375],
        [1.2883],
        [1.2883],
        [1.2883],
        [1.2883],
        [1.1402],
        [0.9375],
        [0.8982],
        [1.2883],
        [1.1402],
        [1.2883],
        [1.1366],
        [1.2883],
        [1.1366],
        [1.1106],
        [1.2883],
        [1.1402],
        [0.9375],
        [1.2883],
        [1.1366],
        [1.1106],
        [1.2883],
        [1.2883],
        [1.2883],
        [1.1366],
        [1.1106],
        [1.2883],
        [1.2883],
        [1.1366],
        [1.1106],
        [1.2883],
        [1.2883],
        [1.2883],
        [1.1366],
        [1.1106]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595],
        [2.1595]])
values:tensor([[1.2883],
        [1.1402],
        [0.9375],
        [1.2883],
        [1.1366],
        [1.1366],
        [1.1106],
        [1.1106],
        [1.1402],
        [0.9375],
        [0.8982]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2324, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0144, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2324, grad_fn=<MulBackward0>), tensor(0.9292, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0144, grad_fn=<MulBackward0>), tensor(0.0755, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2283, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0140, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2283, grad_fn=<MulBackward0>), tensor(0.9235, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0140, grad_fn=<MulBackward0>), tensor(0.0750, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 67.19999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 67.79999999999998

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 68.39999999999998

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 68.39999999999998

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 68.39999999999998

done: False
patient pred:tensor([[ 0.1663],
        [ 0.1663],
        [ 0.1663],
        [ 0.1663],
        [ 0.1663],
        [-0.0507],
        [ 0.1663],
        [-0.0507],
        [-0.0507],
        [ 0.0699],
        [-0.0507],
        [ 0.1663],
        [ 0.1663]], grad_fn=<AddmmBackward0>)
patient target:tensor([[0.9544],
        [0.9544],
        [0.9544],
        [0.9544],
        [0.9544],
        [0.9544],
        [0.9544],
        [0.9544],
        [1.0629],
        [0.9544],
        [1.0629],
        [0.9544],
        [0.9544]])
values:tensor([[-0.1894],
        [ 0.1663],
        [-0.0507],
        [-0.1894],
        [-0.2320],
        [-0.2320],
        [-0.2215],
        [-0.2215],
        [ 0.1663],
        [-0.0507],
        [ 0.0699]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.1276],
        [0.1874],
        [0.1276],
        [0.0923],
        [0.1874],
        [0.1874],
        [0.1276],
        [0.1874],
        [0.1265],
        [0.1276],
        [0.1874],
        [0.1276],
        [0.1276],
        [0.0923],
        [0.1276],
        [0.0923],
        [0.1874],
        [0.1265],
        [0.1874],
        [0.1276],
        [0.0923],
        [0.1874],
        [0.1874],
        [0.1265],
        [0.1874],
        [0.1874],
        [0.1874],
        [0.1276],
        [0.0923],
        [0.1874],
        [0.1874],
        [0.1874],
        [0.1874],
        [0.1276],
        [0.0923],
        [0.0929],
        [0.1874],
        [0.1276],
        [0.1874],
        [0.1265],
        [0.1874],
        [0.1265],
        [0.1285],
        [0.1874],
        [0.1276],
        [0.0923],
        [0.1874],
        [0.1265],
        [0.1285],
        [0.1874],
        [0.1874],
        [0.1874],
        [0.1265],
        [0.1285],
        [0.1874],
        [0.1874],
        [0.1265],
        [0.1285],
        [0.1874],
        [0.1874],
        [0.1874],
        [0.1265],
        [0.1285],
        [0.1276],
        [0.1874],
        [0.1874]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687],
        [1.1687]])
values:tensor([[0.1874],
        [0.1276],
        [0.0923],
        [0.1874],
        [0.1265],
        [0.1265],
        [0.1285],
        [0.1285],
        [0.1276],
        [0.0923],
        [0.0929]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2249, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0164, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2249, grad_fn=<MulBackward0>), tensor(0.8522, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0164, grad_fn=<MulBackward0>), tensor(0.0642, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2132, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0155, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2132, grad_fn=<MulBackward0>), tensor(0.8524, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0155, grad_fn=<MulBackward0>), tensor(0.0644, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 68.79999999999998

Score (3/10): 0.19000000000000003 (recent)   0.22933333333333328 (average)
game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 69.19999999999999

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 69.6

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 70.0

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 70.4

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 71.0

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 71.0

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 71.0

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 71.6

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 72.19999999999999

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 72.19999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 72.19999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 72.19999999999999

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 72.19999999999999

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 72.79999999999998

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.39999999999998

done: False
patient pred:tensor([[0.5449],
        [0.5449],
        [0.5449],
        [0.5449],
        [0.5449],
        [0.4660],
        [0.5449],
        [0.4660],
        [0.4660],
        [0.5053],
        [0.4660],
        [0.5449],
        [0.5449],
        [0.5449],
        [0.4660],
        [0.5053],
        [0.4660],
        [0.5053]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4194],
        [1.4194],
        [1.4194],
        [1.4194],
        [1.4194],
        [1.4194],
        [1.4194],
        [1.4194],
        [1.4548],
        [1.4194],
        [1.4548],
        [1.4194],
        [1.4194],
        [1.4194],
        [1.4548],
        [1.4194],
        [1.4548],
        [1.4194]])
values:tensor([[0.3387],
        [0.5449],
        [0.4660],
        [0.3387],
        [0.2536],
        [0.2536],
        [0.2605],
        [0.2605],
        [0.5449],
        [0.4660],
        [0.5053]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.7417],
        [0.8294],
        [0.7417],
        [0.7037],
        [0.8294],
        [0.8294],
        [0.7417],
        [0.8294],
        [0.7334],
        [0.7417],
        [0.8294],
        [0.7417],
        [0.7417],
        [0.7037],
        [0.7417],
        [0.7037],
        [0.8294],
        [0.7334],
        [0.8294],
        [0.7417],
        [0.7037],
        [0.8294],
        [0.8294],
        [0.7334],
        [0.8294],
        [0.8294],
        [0.8294],
        [0.7417],
        [0.7037],
        [0.8294],
        [0.8294],
        [0.8294],
        [0.8294],
        [0.7417],
        [0.7037],
        [0.6993],
        [0.8294],
        [0.7417],
        [0.8294],
        [0.7334],
        [0.8294],
        [0.7334],
        [0.7294],
        [0.8294],
        [0.7417],
        [0.7037],
        [0.8294],
        [0.7334],
        [0.7294],
        [0.8294],
        [0.8294],
        [0.8294],
        [0.7334],
        [0.7294],
        [0.8294],
        [0.8294],
        [0.7334],
        [0.7294],
        [0.8294],
        [0.8294],
        [0.8294],
        [0.7334],
        [0.7294],
        [0.7417],
        [0.8294],
        [0.8294],
        [0.7417],
        [0.7037],
        [0.6993],
        [0.8294],
        [0.7334],
        [0.8294],
        [0.8294],
        [0.7334],
        [0.7294],
        [0.8294]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464],
        [1.7464]])
values:tensor([[0.8294],
        [0.7417],
        [0.7037],
        [0.8294],
        [0.7334],
        [0.7334],
        [0.7294],
        [0.7294],
        [0.7417],
        [0.7037],
        [0.6993]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.2466, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0161, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2466, grad_fn=<MulBackward0>), tensor(0.8253, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0161, grad_fn=<MulBackward0>), tensor(0.0726, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2458, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0159, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.2458, grad_fn=<MulBackward0>), tensor(0.8196, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0159, grad_fn=<MulBackward0>), tensor(0.0722, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 73.79999999999998

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 74.19999999999999

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 74.6

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 75.0

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 75.4

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 75.80000000000001

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 76.20000000000002

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.43046721000000016, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 76.60000000000002

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.38742048900000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 77.00000000000003

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.34867844010000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 77.40000000000003

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.31381059609000017, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 77.80000000000004

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.28242953648100017, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 78.20000000000005

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.25418658283290013, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 78.60000000000005

done: False
patient pred:tensor([[0.2171],
        [0.2171],
        [0.2171],
        [0.2171],
        [0.2171],
        [0.0471],
        [0.2171],
        [0.0471],
        [0.0471],
        [0.1371],
        [0.0471],
        [0.2171],
        [0.2171],
        [0.2171],
        [0.0471],
        [0.1371],
        [0.0471],
        [0.1371],
        [0.2171],
        [0.0471],
        [0.0471],
        [0.1371],
        [0.0471],
        [0.1371],
        [0.0471],
        [0.1371],
        [0.1371],
        [0.1371],
        [0.1371],
        [0.1371],
        [0.0471]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.0424],
        [1.0424],
        [1.0424],
        [1.0424],
        [1.0424],
        [1.0424],
        [1.0424],
        [1.0424],
        [1.1234],
        [1.0424],
        [1.1234],
        [1.0424],
        [1.0424],
        [1.0424],
        [1.1234],
        [1.0424],
        [1.1234],
        [1.0424],
        [1.0424],
        [1.0424],
        [1.1234],
        [1.0424],
        [1.1234],
        [1.0424],
        [1.1234],
        [1.1234],
        [1.1234],
        [1.1234],
        [1.1234],
        [1.0424],
        [1.1234]])
values:tensor([[-0.0992],
        [ 0.2171],
        [ 0.0471],
        [-0.0992],
        [-0.1403],
        [-0.1403],
        [-0.1336],
        [-0.1336],
        [ 0.2171],
        [ 0.0471],
        [ 0.1371],
        [ 0.1371]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.5120],
        [0.6294],
        [0.5120],
        [0.4692],
        [0.6294],
        [0.6294],
        [0.5120],
        [0.6294],
        [0.5226],
        [0.5120],
        [0.6294],
        [0.5120],
        [0.5120],
        [0.4692],
        [0.5120],
        [0.4692],
        [0.6294],
        [0.5226],
        [0.6294],
        [0.5120],
        [0.4692],
        [0.6294],
        [0.6294],
        [0.5226],
        [0.6294],
        [0.6294],
        [0.6294],
        [0.5120],
        [0.4692],
        [0.6294],
        [0.6294],
        [0.6294],
        [0.6294],
        [0.5120],
        [0.4692],
        [0.4696],
        [0.6294],
        [0.5120],
        [0.6294],
        [0.5226],
        [0.6294],
        [0.5226],
        [0.5197],
        [0.6294],
        [0.5120],
        [0.4692],
        [0.6294],
        [0.5226],
        [0.5197],
        [0.6294],
        [0.6294],
        [0.6294],
        [0.5226],
        [0.5197],
        [0.6294],
        [0.6294],
        [0.5226],
        [0.5197],
        [0.6294],
        [0.6294],
        [0.6294],
        [0.5226],
        [0.5197],
        [0.5120],
        [0.6294],
        [0.6294],
        [0.5120],
        [0.4692],
        [0.4696],
        [0.6294],
        [0.5226],
        [0.6294],
        [0.6294],
        [0.5226],
        [0.5197],
        [0.6294]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664],
        [1.5664]])
values:tensor([[0.6294],
        [0.5120],
        [0.4692],
        [0.6294],
        [0.5226],
        [0.5226],
        [0.5197],
        [0.5197],
        [0.5120],
        [0.4692],
        [0.4696],
        [0.4696]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3829, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0307, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3829, grad_fn=<MulBackward0>), tensor(0.7759, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0307, grad_fn=<MulBackward0>), tensor(0.0547, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3816, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0305, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3816, grad_fn=<MulBackward0>), tensor(0.7746, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0305, grad_fn=<MulBackward0>), tensor(0.0547, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 79.00000000000006

done: False
patient pred:tensor([[0.4163],
        [0.4163],
        [0.4163],
        [0.4163],
        [0.4163],
        [0.3426],
        [0.4163],
        [0.3426],
        [0.3426],
        [0.3843],
        [0.3426],
        [0.4163],
        [0.4163],
        [0.4163],
        [0.3426],
        [0.3843],
        [0.3426],
        [0.3843],
        [0.4163],
        [0.3426],
        [0.3426],
        [0.3843],
        [0.3426],
        [0.3843],
        [0.3426],
        [0.3843],
        [0.3843],
        [0.3843],
        [0.3843],
        [0.3843],
        [0.3426],
        [0.4163]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.3083],
        [1.3083],
        [1.3083],
        [1.3083],
        [1.3083],
        [1.3083],
        [1.3083],
        [1.3083],
        [1.3459],
        [1.3083],
        [1.3459],
        [1.3083],
        [1.3083],
        [1.3083],
        [1.3459],
        [1.3083],
        [1.3459],
        [1.3083],
        [1.3083],
        [1.3083],
        [1.3459],
        [1.3083],
        [1.3459],
        [1.3083],
        [1.3459],
        [1.3459],
        [1.3459],
        [1.3459],
        [1.3459],
        [1.3083],
        [1.3459],
        [1.3083]])
values:tensor([[0.1842],
        [0.4163],
        [0.3426],
        [0.1842],
        [0.1309],
        [0.1309],
        [0.1373],
        [0.1373],
        [0.4163],
        [0.3426],
        [0.3843],
        [0.3843]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.5207],
        [0.6976],
        [0.5207],
        [0.4585],
        [0.6976],
        [0.6976],
        [0.5207],
        [0.6976],
        [0.5512],
        [0.5207],
        [0.6976],
        [0.5207],
        [0.5207],
        [0.4585],
        [0.5207],
        [0.4585],
        [0.6976],
        [0.5512],
        [0.6976],
        [0.5207],
        [0.4585],
        [0.6976],
        [0.6976],
        [0.5512],
        [0.6976],
        [0.6976],
        [0.6976],
        [0.5207],
        [0.4585],
        [0.6976],
        [0.6976],
        [0.6976],
        [0.6976],
        [0.5207],
        [0.4585],
        [0.4556],
        [0.6976],
        [0.5207],
        [0.6976],
        [0.5512],
        [0.6976],
        [0.5512],
        [0.5396],
        [0.6976],
        [0.5207],
        [0.4585],
        [0.6976],
        [0.5512],
        [0.5396],
        [0.6976],
        [0.6976],
        [0.6976],
        [0.5512],
        [0.5396],
        [0.6976],
        [0.6976],
        [0.5512],
        [0.5396],
        [0.6976],
        [0.6976],
        [0.6976],
        [0.5512],
        [0.5396],
        [0.5207],
        [0.6976],
        [0.6976],
        [0.5207],
        [0.4585],
        [0.4556],
        [0.6976],
        [0.5512],
        [0.6976],
        [0.6976],
        [0.5512],
        [0.5396],
        [0.6976]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278],
        [1.6278]])
values:tensor([[0.6976],
        [0.5207],
        [0.4585],
        [0.6976],
        [0.5512],
        [0.5512],
        [0.5396],
        [0.5396],
        [0.5207],
        [0.4585],
        [0.4556],
        [0.4556]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3910, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0255, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3910, grad_fn=<MulBackward0>), tensor(0.8237, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0255, grad_fn=<MulBackward0>), tensor(0.0677, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3955, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0257, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3955, grad_fn=<MulBackward0>), tensor(0.8169, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0257, grad_fn=<MulBackward0>), tensor(0.0672, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 79.40000000000006

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.00000000000006

done: False
patient pred:tensor([[0.2361],
        [0.2361],
        [0.2361],
        [0.2361],
        [0.2361],
        [0.1169],
        [0.2361],
        [0.1169],
        [0.1169],
        [0.1931],
        [0.1169],
        [0.2361],
        [0.2361],
        [0.2361],
        [0.1169],
        [0.1931],
        [0.1169],
        [0.1931],
        [0.2361],
        [0.1169],
        [0.1169],
        [0.1931],
        [0.1169],
        [0.1931],
        [0.1169],
        [0.1931],
        [0.1931],
        [0.1931],
        [0.1931],
        [0.1931],
        [0.1169],
        [0.2361],
        [0.2361]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1052],
        [1.1052],
        [1.1052],
        [1.1052],
        [1.1052],
        [1.1052],
        [1.1052],
        [1.1052],
        [1.1738],
        [1.1052],
        [1.1738],
        [1.1052],
        [1.1052],
        [1.1052],
        [1.1738],
        [1.1052],
        [1.1738],
        [1.1052],
        [1.1052],
        [1.1052],
        [1.1738],
        [1.1052],
        [1.1738],
        [1.1052],
        [1.1738],
        [1.1738],
        [1.1738],
        [1.1738],
        [1.1738],
        [1.1052],
        [1.1738],
        [1.1052],
        [1.1052]])
values:tensor([[-0.0519],
        [ 0.2361],
        [ 0.1169],
        [-0.0519],
        [-0.0908],
        [-0.0908],
        [-0.0843],
        [-0.0843],
        [ 0.2361],
        [ 0.1169],
        [ 0.1931],
        [ 0.1931]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.5427],
        [0.7989],
        [0.5427],
        [0.4416],
        [0.7989],
        [0.7989],
        [0.5427],
        [0.7989],
        [0.6283],
        [0.5427],
        [0.7989],
        [0.5427],
        [0.5427],
        [0.4416],
        [0.5427],
        [0.4416],
        [0.7989],
        [0.6283],
        [0.7989],
        [0.5427],
        [0.4416],
        [0.7989],
        [0.7989],
        [0.6283],
        [0.7989],
        [0.7989],
        [0.7989],
        [0.5427],
        [0.4416],
        [0.7989],
        [0.7989],
        [0.7989],
        [0.7989],
        [0.5427],
        [0.4416],
        [0.4328],
        [0.7989],
        [0.5427],
        [0.7989],
        [0.6283],
        [0.7989],
        [0.6283],
        [0.6070],
        [0.7989],
        [0.5427],
        [0.4416],
        [0.7989],
        [0.6283],
        [0.6070],
        [0.7989],
        [0.7989],
        [0.7989],
        [0.6283],
        [0.6070],
        [0.7989],
        [0.7989],
        [0.6283],
        [0.6070],
        [0.7989],
        [0.7989],
        [0.7989],
        [0.6283],
        [0.6070],
        [0.5427],
        [0.7989],
        [0.7989],
        [0.5427],
        [0.4416],
        [0.4328],
        [0.7989],
        [0.6283],
        [0.7989],
        [0.7989],
        [0.6283],
        [0.6070],
        [0.7989],
        [0.5427],
        [0.4416]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190],
        [1.7190]])
values:tensor([[0.7989],
        [0.5427],
        [0.4416],
        [0.7989],
        [0.6283],
        [0.6283],
        [0.6070],
        [0.6070],
        [0.5427],
        [0.4416],
        [0.4328],
        [0.4328]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3550, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0296, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3550, grad_fn=<MulBackward0>), tensor(0.8275, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0296, grad_fn=<MulBackward0>), tensor(0.0514, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3556, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0295, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3556, grad_fn=<MulBackward0>), tensor(0.8242, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0295, grad_fn=<MulBackward0>), tensor(0.0514, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.40000000000006

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 80.80000000000007

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 81.20000000000007

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 81.60000000000008

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 82.00000000000009

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 82.40000000000009

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 82.8000000000001

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.47829690000000014, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 83.40000000000009

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 83.40000000000009

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 83.40000000000009

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 83.40000000000009

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 83.40000000000009

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 83.40000000000009

done: False
patient pred:tensor([[0.3644],
        [0.3644],
        [0.3644],
        [0.3644],
        [0.3644],
        [0.3004],
        [0.3644],
        [0.3004],
        [0.3004],
        [0.3351],
        [0.3004],
        [0.3644],
        [0.3644],
        [0.3644],
        [0.3004],
        [0.3351],
        [0.3004],
        [0.3351],
        [0.3644],
        [0.3004],
        [0.3004],
        [0.3351],
        [0.3004],
        [0.3351],
        [0.3004],
        [0.3351],
        [0.3351],
        [0.3351],
        [0.3351],
        [0.3351],
        [0.3004],
        [0.3644],
        [0.3644],
        [0.3644],
        [0.3004],
        [0.3351],
        [0.3351],
        [0.3351],
        [0.3351],
        [0.3004]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2703],
        [1.2703],
        [1.2703],
        [1.2703],
        [1.2703],
        [1.2703],
        [1.2703],
        [1.2703],
        [1.3016],
        [1.2703],
        [1.3016],
        [1.2703],
        [1.2703],
        [1.2703],
        [1.3016],
        [1.2703],
        [1.3016],
        [1.2703],
        [1.2703],
        [1.2703],
        [1.3016],
        [1.2703],
        [1.3016],
        [1.2703],
        [1.3016],
        [1.3016],
        [1.3016],
        [1.3016],
        [1.3016],
        [1.2703],
        [1.3016],
        [1.2703],
        [1.2703],
        [1.2703],
        [1.3016],
        [1.3016],
        [1.3016],
        [1.3016],
        [1.2703],
        [1.3016]])
values:tensor([[0.1194],
        [0.3644],
        [0.3004],
        [0.1194],
        [0.0742],
        [0.0742],
        [0.0807],
        [0.0807],
        [0.3644],
        [0.3004],
        [0.3351],
        [0.3351]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4908],
        [0.8729],
        [0.4908],
        [0.3533],
        [0.8729],
        [0.8729],
        [0.4908],
        [0.8729],
        [0.6721],
        [0.4908],
        [0.8729],
        [0.4908],
        [0.4908],
        [0.3533],
        [0.4908],
        [0.3533],
        [0.8729],
        [0.6721],
        [0.8729],
        [0.4908],
        [0.3533],
        [0.8729],
        [0.8729],
        [0.6721],
        [0.8729],
        [0.8729],
        [0.8729],
        [0.4908],
        [0.3533],
        [0.8729],
        [0.8729],
        [0.8729],
        [0.8729],
        [0.4908],
        [0.3533],
        [0.3389],
        [0.8729],
        [0.4908],
        [0.8729],
        [0.6721],
        [0.8729],
        [0.6721],
        [0.6364],
        [0.8729],
        [0.4908],
        [0.3533],
        [0.8729],
        [0.6721],
        [0.6364],
        [0.8729],
        [0.8729],
        [0.8729],
        [0.6721],
        [0.6364],
        [0.8729],
        [0.8729],
        [0.6721],
        [0.6364],
        [0.8729],
        [0.8729],
        [0.8729],
        [0.6721],
        [0.6364],
        [0.4908],
        [0.8729],
        [0.8729],
        [0.4908],
        [0.3533],
        [0.3389],
        [0.8729],
        [0.6721],
        [0.8729],
        [0.8729],
        [0.6721],
        [0.6364],
        [0.8729],
        [0.4908],
        [0.3533],
        [0.4908],
        [0.3533],
        [0.3389]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856],
        [1.7856]])
values:tensor([[0.8729],
        [0.4908],
        [0.3533],
        [0.8729],
        [0.6721],
        [0.6721],
        [0.6364],
        [0.6364],
        [0.4908],
        [0.3533],
        [0.3389],
        [0.3389]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3906, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0280, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3906, grad_fn=<MulBackward0>), tensor(0.8656, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0280, grad_fn=<MulBackward0>), tensor(0.0607, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3991, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0284, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3991, grad_fn=<MulBackward0>), tensor(0.8578, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0284, grad_fn=<MulBackward0>), tensor(0.0605, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 83.8000000000001

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 84.2000000000001

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 84.60000000000011

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 85.00000000000011

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 85.40000000000012

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 86.00000000000011

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 86.60000000000011

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 86.60000000000011

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 86.60000000000011

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 86.60000000000011

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 86.60000000000011

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 86.60000000000011

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 86.60000000000011

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 86.60000000000011

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 87.2000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 87.2000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 87.2000000000001

done: False
patient pred:tensor([[0.2650],
        [0.2650],
        [0.2650],
        [0.2650],
        [0.2650],
        [0.1765],
        [0.2650],
        [0.1765],
        [0.1765],
        [0.2337],
        [0.1765],
        [0.2650],
        [0.2650],
        [0.2650],
        [0.1765],
        [0.2337],
        [0.1765],
        [0.2337],
        [0.2650],
        [0.1765],
        [0.1765],
        [0.2337],
        [0.1765],
        [0.2337],
        [0.1765],
        [0.2337],
        [0.2337],
        [0.2337],
        [0.2337],
        [0.2337],
        [0.1765],
        [0.2650],
        [0.2650],
        [0.2650],
        [0.1765],
        [0.2337],
        [0.2337],
        [0.2337],
        [0.2337],
        [0.1765],
        [0.2650],
        [0.1765],
        [0.2337],
        [0.2337],
        [0.1765]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1588],
        [1.1588],
        [1.1588],
        [1.1588],
        [1.1588],
        [1.1588],
        [1.1588],
        [1.1588],
        [1.2104],
        [1.1588],
        [1.2104],
        [1.1588],
        [1.1588],
        [1.1588],
        [1.2104],
        [1.1588],
        [1.2104],
        [1.1588],
        [1.1588],
        [1.1588],
        [1.2104],
        [1.1588],
        [1.2104],
        [1.1588],
        [1.2104],
        [1.2104],
        [1.2104],
        [1.2104],
        [1.2104],
        [1.1588],
        [1.2104],
        [1.1588],
        [1.1588],
        [1.1588],
        [1.2104],
        [1.2104],
        [1.2104],
        [1.2104],
        [1.1588],
        [1.2104],
        [1.1588],
        [1.2104],
        [1.2104],
        [1.1588],
        [1.2104]])
values:tensor([[-0.0155],
        [ 0.2650],
        [ 0.1765],
        [-0.0155],
        [-0.0535],
        [-0.0535],
        [-0.0472],
        [-0.0472],
        [ 0.2650],
        [ 0.1765],
        [ 0.2337],
        [ 0.2337]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4799],
        [1.0000],
        [0.4799],
        [0.3007],
        [1.0000],
        [1.0000],
        [0.4799],
        [1.0000],
        [0.7791],
        [0.4799],
        [1.0000],
        [0.4799],
        [0.4799],
        [0.3007],
        [0.4799],
        [0.3007],
        [1.0000],
        [0.7791],
        [1.0000],
        [0.4799],
        [0.3007],
        [1.0000],
        [1.0000],
        [0.7791],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.4799],
        [0.3007],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.4799],
        [0.3007],
        [0.2789],
        [1.0000],
        [0.4799],
        [1.0000],
        [0.7791],
        [1.0000],
        [0.7791],
        [0.7345],
        [1.0000],
        [0.4799],
        [0.3007],
        [1.0000],
        [0.7791],
        [0.7345],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.7791],
        [0.7345],
        [1.0000],
        [1.0000],
        [0.7791],
        [0.7345],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.7791],
        [0.7345],
        [0.4799],
        [1.0000],
        [1.0000],
        [0.4799],
        [0.3007],
        [0.2789],
        [1.0000],
        [0.7791],
        [1.0000],
        [1.0000],
        [0.7791],
        [0.7345],
        [1.0000],
        [0.4799],
        [0.3007],
        [0.4799],
        [0.3007],
        [0.2789],
        [0.4799],
        [0.3007],
        [0.2789],
        [1.0000],
        [1.0000],
        [0.7791],
        [0.7345]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000],
        [1.9000]])
values:tensor([[1.0000],
        [0.4799],
        [0.3007],
        [1.0000],
        [0.7791],
        [0.7791],
        [0.7345],
        [0.7345],
        [0.4799],
        [0.3007],
        [0.2789],
        [0.2789]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3873, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0349, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3873, grad_fn=<MulBackward0>), tensor(0.8920, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0349, grad_fn=<MulBackward0>), tensor(0.0769, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3933, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0354, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3933, grad_fn=<MulBackward0>), tensor(0.8883, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0354, grad_fn=<MulBackward0>), tensor(0.0772, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 87.8000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 87.8000000000001

done: False
patient pred:tensor([[0.3384],
        [0.3384],
        [0.3384],
        [0.3384],
        [0.3384],
        [0.2793],
        [0.3384],
        [0.2793],
        [0.2793],
        [0.3120],
        [0.2793],
        [0.3384],
        [0.3384],
        [0.3384],
        [0.2793],
        [0.3120],
        [0.2793],
        [0.3120],
        [0.3384],
        [0.2793],
        [0.2793],
        [0.3120],
        [0.2793],
        [0.3120],
        [0.2793],
        [0.3120],
        [0.3120],
        [0.3120],
        [0.3120],
        [0.3120],
        [0.2793],
        [0.3384],
        [0.3384],
        [0.3384],
        [0.2793],
        [0.3120],
        [0.3120],
        [0.3120],
        [0.3120],
        [0.2793],
        [0.3384],
        [0.2793],
        [0.3120],
        [0.3120],
        [0.2793]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2514],
        [1.2514],
        [1.2514],
        [1.2514],
        [1.2514],
        [1.2514],
        [1.2514],
        [1.2514],
        [1.2808],
        [1.2514],
        [1.2808],
        [1.2514],
        [1.2514],
        [1.2514],
        [1.2808],
        [1.2514],
        [1.2808],
        [1.2514],
        [1.2514],
        [1.2514],
        [1.2808],
        [1.2514],
        [1.2808],
        [1.2514],
        [1.2808],
        [1.2808],
        [1.2808],
        [1.2808],
        [1.2808],
        [1.2514],
        [1.2808],
        [1.2514],
        [1.2514],
        [1.2514],
        [1.2808],
        [1.2808],
        [1.2808],
        [1.2808],
        [1.2514],
        [1.2808],
        [1.2514],
        [1.2808],
        [1.2808],
        [1.2514],
        [1.2808]])
values:tensor([[0.0765],
        [0.3384],
        [0.2793],
        [0.0765],
        [0.0362],
        [0.0362],
        [0.0424],
        [0.0424],
        [0.3384],
        [0.2793],
        [0.3120],
        [0.3120]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.3246],
        [0.9598],
        [0.3246],
        [0.1811],
        [0.9598],
        [0.9598],
        [0.3246],
        [0.9598],
        [0.7147],
        [0.3246],
        [0.9598],
        [0.3246],
        [0.3246],
        [0.1811],
        [0.3246],
        [0.1811],
        [0.9598],
        [0.7147],
        [0.9598],
        [0.3246],
        [0.1811],
        [0.9598],
        [0.9598],
        [0.7147],
        [0.9598],
        [0.9598],
        [0.9598],
        [0.3246],
        [0.1811],
        [0.9598],
        [0.9598],
        [0.9598],
        [0.9598],
        [0.3246],
        [0.1811],
        [0.1582],
        [0.9598],
        [0.3246],
        [0.9598],
        [0.7147],
        [0.9598],
        [0.7147],
        [0.6547],
        [0.9598],
        [0.3246],
        [0.1811],
        [0.9598],
        [0.7147],
        [0.6547],
        [0.9598],
        [0.9598],
        [0.9598],
        [0.7147],
        [0.6547],
        [0.9598],
        [0.9598],
        [0.7147],
        [0.6547],
        [0.9598],
        [0.9598],
        [0.9598],
        [0.7147],
        [0.6547],
        [0.3246],
        [0.9598],
        [0.9598],
        [0.3246],
        [0.1811],
        [0.1582],
        [0.9598],
        [0.7147],
        [0.9598],
        [0.9598],
        [0.7147],
        [0.6547],
        [0.9598],
        [0.3246],
        [0.1811],
        [0.3246],
        [0.1811],
        [0.1582],
        [0.3246],
        [0.1811],
        [0.1582],
        [0.9598],
        [0.9598],
        [0.7147],
        [0.6547],
        [0.3246]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639],
        [1.8639]])
values:tensor([[0.9598],
        [0.3246],
        [0.1811],
        [0.9598],
        [0.7147],
        [0.7147],
        [0.6547],
        [0.6547],
        [0.3246],
        [0.1811],
        [0.1582],
        [0.1582]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3864, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0291, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3864, grad_fn=<MulBackward0>), tensor(0.9333, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0291, grad_fn=<MulBackward0>), tensor(0.0591, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3927, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0294, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3927, grad_fn=<MulBackward0>), tensor(0.9289, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0294, grad_fn=<MulBackward0>), tensor(0.0591, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 88.2000000000001

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 88.8000000000001

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 88.8000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 88.8000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 88.8000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 88.8000000000001

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 88.8000000000001

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

Score (4/10): 0.20600000000000013 (recent)   0.22350000000000023 (average)
game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 89.40000000000009

done: False
patient pred:tensor([[0.2864],
        [0.2864],
        [0.2864],
        [0.2864],
        [0.2864],
        [0.2170],
        [0.2864],
        [0.2170],
        [0.2170],
        [0.2594],
        [0.2170],
        [0.2864],
        [0.2864],
        [0.2864],
        [0.2170],
        [0.2594],
        [0.2170],
        [0.2594],
        [0.2864],
        [0.2170],
        [0.2170],
        [0.2594],
        [0.2170],
        [0.2594],
        [0.2170],
        [0.2594],
        [0.2594],
        [0.2594],
        [0.2594],
        [0.2594],
        [0.2170],
        [0.2864],
        [0.2864],
        [0.2864],
        [0.2170],
        [0.2594],
        [0.2594],
        [0.2594],
        [0.2594],
        [0.2170],
        [0.2864],
        [0.2170],
        [0.2594],
        [0.2594],
        [0.2170],
        [0.2864]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.1953],
        [1.1953],
        [1.1953],
        [1.1953],
        [1.1953],
        [1.1953],
        [1.1953],
        [1.1953],
        [1.2335],
        [1.1953],
        [1.2335],
        [1.1953],
        [1.1953],
        [1.1953],
        [1.2335],
        [1.1953],
        [1.2335],
        [1.1953],
        [1.1953],
        [1.1953],
        [1.2335],
        [1.1953],
        [1.2335],
        [1.1953],
        [1.2335],
        [1.2335],
        [1.2335],
        [1.2335],
        [1.2335],
        [1.1953],
        [1.2335],
        [1.1953],
        [1.1953],
        [1.1953],
        [1.2335],
        [1.2335],
        [1.2335],
        [1.2335],
        [1.1953],
        [1.2335],
        [1.1953],
        [1.2335],
        [1.2335],
        [1.1953],
        [1.2335],
        [1.1953]])
values:tensor([[ 0.0029],
        [ 0.2864],
        [ 0.2170],
        [ 0.0029],
        [-0.0345],
        [-0.0345],
        [-0.0284],
        [-0.0284],
        [ 0.2864],
        [ 0.2170],
        [ 0.2594],
        [ 0.2594]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.5283],
        [1.2301],
        [0.5283],
        [0.2986],
        [1.2301],
        [1.2301],
        [0.5283],
        [1.2301],
        [1.0248],
        [0.5283],
        [1.2301],
        [0.5283],
        [0.5283],
        [0.2986],
        [0.5283],
        [0.2986],
        [1.2301],
        [1.0248],
        [1.2301],
        [0.5283],
        [0.2986],
        [1.2301],
        [1.2301],
        [1.0248],
        [1.2301],
        [1.2301],
        [1.2301],
        [0.5283],
        [0.2986],
        [1.2301],
        [1.2301],
        [1.2301],
        [1.2301],
        [0.5283],
        [0.2986],
        [0.2594],
        [1.2301],
        [0.5283],
        [1.2301],
        [1.0248],
        [1.2301],
        [1.0248],
        [0.9750],
        [1.2301],
        [0.5283],
        [0.2986],
        [1.2301],
        [1.0248],
        [0.9750],
        [1.2301],
        [1.2301],
        [1.2301],
        [1.0248],
        [0.9750],
        [1.2301],
        [1.2301],
        [1.0248],
        [0.9750],
        [1.2301],
        [1.2301],
        [1.2301],
        [1.0248],
        [0.9750],
        [0.5283],
        [1.2301],
        [1.2301],
        [0.5283],
        [0.2986],
        [0.2594],
        [1.2301],
        [1.0248],
        [1.2301],
        [1.2301],
        [1.0248],
        [0.9750],
        [1.2301],
        [0.5283],
        [0.2986],
        [0.5283],
        [0.2986],
        [0.2594],
        [0.5283],
        [0.2986],
        [0.2594],
        [1.2301],
        [1.2301],
        [1.0248],
        [0.9750],
        [0.5283],
        [0.5283],
        [0.2986],
        [1.2301],
        [1.0248],
        [0.9750]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071],
        [2.1071]])
values:tensor([[1.2301],
        [0.5283],
        [0.2986],
        [1.2301],
        [1.0248],
        [1.0248],
        [0.9750],
        [0.9750],
        [0.5283],
        [0.2986],
        [0.2594],
        [0.2594]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3535, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0326, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3535, grad_fn=<MulBackward0>), tensor(0.8117, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0326, grad_fn=<MulBackward0>), tensor(0.0730, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3596, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0331, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3596, grad_fn=<MulBackward0>), tensor(0.8075, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0331, grad_fn=<MulBackward0>), tensor(0.0732, grad_fn=<MulBackward0>)]
done: False
patient pred:tensor([[0.3259],
        [0.3259],
        [0.3259],
        [0.3259],
        [0.3259],
        [0.2720],
        [0.3259],
        [0.2720],
        [0.2720],
        [0.3013],
        [0.2720],
        [0.3259],
        [0.3259],
        [0.3259],
        [0.2720],
        [0.3013],
        [0.2720],
        [0.3013],
        [0.3259],
        [0.2720],
        [0.2720],
        [0.3013],
        [0.2720],
        [0.3013],
        [0.2720],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.2720],
        [0.3259],
        [0.3259],
        [0.3259],
        [0.2720],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.2720],
        [0.3259],
        [0.2720],
        [0.3013],
        [0.3013],
        [0.2720],
        [0.3259]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2448],
        [1.2448],
        [1.2448],
        [1.2448],
        [1.2448],
        [1.2448],
        [1.2448],
        [1.2448],
        [1.2712],
        [1.2448],
        [1.2712],
        [1.2448],
        [1.2448],
        [1.2448],
        [1.2712],
        [1.2448],
        [1.2712],
        [1.2448],
        [1.2448],
        [1.2448],
        [1.2712],
        [1.2448],
        [1.2712],
        [1.2448],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2448],
        [1.2712],
        [1.2448],
        [1.2448],
        [1.2448],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2448],
        [1.2712],
        [1.2448],
        [1.2712],
        [1.2712],
        [1.2448],
        [1.2712],
        [1.2448]])
values:tensor([[0.0500],
        [0.3259],
        [0.2720],
        [0.0500],
        [0.0117],
        [0.0117],
        [0.0177],
        [0.0177],
        [0.3259],
        [0.2720],
        [0.3013],
        [0.3013]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[-0.0053],
        [ 0.5165],
        [-0.0053],
        [-0.0642],
        [ 0.5165],
        [ 0.5165],
        [-0.0053],
        [ 0.5165],
        [ 0.2749],
        [-0.0053],
        [ 0.5165],
        [-0.0053],
        [-0.0053],
        [-0.0642],
        [-0.0053],
        [-0.0642],
        [ 0.5165],
        [ 0.2749],
        [ 0.5165],
        [-0.0053],
        [-0.0642],
        [ 0.5165],
        [ 0.5165],
        [ 0.2749],
        [ 0.5165],
        [ 0.5165],
        [ 0.5165],
        [-0.0053],
        [-0.0642],
        [ 0.5165],
        [ 0.5165],
        [ 0.5165],
        [ 0.5165],
        [-0.0053],
        [-0.0642],
        [-0.0863],
        [ 0.5165],
        [-0.0053],
        [ 0.5165],
        [ 0.2749],
        [ 0.5165],
        [ 0.2749],
        [ 0.2077],
        [ 0.5165],
        [-0.0053],
        [-0.0642],
        [ 0.5165],
        [ 0.2749],
        [ 0.2077],
        [ 0.5165],
        [ 0.5165],
        [ 0.5165],
        [ 0.2749],
        [ 0.2077],
        [ 0.5165],
        [ 0.5165],
        [ 0.2749],
        [ 0.2077],
        [ 0.5165],
        [ 0.5165],
        [ 0.5165],
        [ 0.2749],
        [ 0.2077],
        [-0.0053],
        [ 0.5165],
        [ 0.5165],
        [-0.0053],
        [-0.0642],
        [-0.0863],
        [ 0.5165],
        [ 0.2749],
        [ 0.5165],
        [ 0.5165],
        [ 0.2749],
        [ 0.2077],
        [ 0.5165],
        [-0.0053],
        [-0.0642],
        [-0.0053],
        [-0.0642],
        [-0.0863],
        [-0.0053],
        [-0.0642],
        [-0.0863],
        [ 0.5165],
        [ 0.5165],
        [ 0.2749],
        [ 0.2077],
        [-0.0053],
        [-0.0053],
        [-0.0642],
        [ 0.5165],
        [ 0.2749],
        [ 0.2077]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648],
        [1.4648]])
values:tensor([[ 0.5165],
        [-0.0053],
        [-0.0642],
        [ 0.5165],
        [ 0.2749],
        [ 0.2749],
        [ 0.2077],
        [ 0.2077],
        [-0.0053],
        [-0.0642],
        [-0.0863],
        [-0.0863]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3562, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0423, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3562, grad_fn=<MulBackward0>), tensor(0.6954, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0423, grad_fn=<MulBackward0>), tensor(0.0553, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3627, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0429, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3627, grad_fn=<MulBackward0>), tensor(0.6905, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0429, grad_fn=<MulBackward0>), tensor(0.0553, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 90.00000000000009

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 90.60000000000008

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 90.60000000000008

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 90.60000000000008

done: False
patient pred:tensor([[0.2989],
        [0.2989],
        [0.2989],
        [0.2989],
        [0.2989],
        [0.2411],
        [0.2989],
        [0.2411],
        [0.2411],
        [0.2748],
        [0.2411],
        [0.2989],
        [0.2989],
        [0.2989],
        [0.2411],
        [0.2748],
        [0.2411],
        [0.2748],
        [0.2989],
        [0.2411],
        [0.2411],
        [0.2748],
        [0.2411],
        [0.2748],
        [0.2411],
        [0.2748],
        [0.2748],
        [0.2748],
        [0.2748],
        [0.2748],
        [0.2411],
        [0.2989],
        [0.2989],
        [0.2989],
        [0.2411],
        [0.2748],
        [0.2748],
        [0.2748],
        [0.2748],
        [0.2411],
        [0.2989],
        [0.2411],
        [0.2748],
        [0.2748],
        [0.2411],
        [0.2989]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2170],
        [1.2170],
        [1.2170],
        [1.2170],
        [1.2170],
        [1.2170],
        [1.2170],
        [1.2170],
        [1.2474],
        [1.2170],
        [1.2474],
        [1.2170],
        [1.2170],
        [1.2170],
        [1.2474],
        [1.2170],
        [1.2474],
        [1.2170],
        [1.2170],
        [1.2170],
        [1.2474],
        [1.2170],
        [1.2474],
        [1.2170],
        [1.2474],
        [1.2474],
        [1.2474],
        [1.2474],
        [1.2474],
        [1.2170],
        [1.2474],
        [1.2170],
        [1.2170],
        [1.2170],
        [1.2474],
        [1.2474],
        [1.2474],
        [1.2474],
        [1.2170],
        [1.2474],
        [1.2170],
        [1.2474],
        [1.2474],
        [1.2170],
        [1.2474],
        [1.2170]])
values:tensor([[ 0.0091],
        [ 0.2989],
        [ 0.2411],
        [ 0.0091],
        [-0.0271],
        [-0.0271],
        [-0.0211],
        [-0.0211],
        [ 0.2989],
        [ 0.2411],
        [ 0.2748],
        [ 0.2748]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.0897],
        [1.6330],
        [1.0897],
        [0.9312],
        [1.6330],
        [1.6330],
        [1.0897],
        [1.6330],
        [1.4877],
        [1.0897],
        [1.6330],
        [1.0897],
        [1.0897],
        [0.9312],
        [1.0897],
        [0.9312],
        [1.6330],
        [1.4877],
        [1.6330],
        [1.0897],
        [0.9312],
        [1.6330],
        [1.6330],
        [1.4877],
        [1.6330],
        [1.6330],
        [1.6330],
        [1.0897],
        [0.9312],
        [1.6330],
        [1.6330],
        [1.6330],
        [1.6330],
        [1.0897],
        [0.9312],
        [0.8257],
        [1.6330],
        [1.0897],
        [1.6330],
        [1.4877],
        [1.6330],
        [1.4877],
        [1.4449],
        [1.6330],
        [1.0897],
        [0.9312],
        [1.6330],
        [1.4877],
        [1.4449],
        [1.6330],
        [1.6330],
        [1.6330],
        [1.4877],
        [1.4449],
        [1.6330],
        [1.6330],
        [1.4877],
        [1.4449],
        [1.6330],
        [1.6330],
        [1.6330],
        [1.4877],
        [1.4449],
        [1.0897],
        [1.6330],
        [1.6330],
        [1.0897],
        [0.9312],
        [0.8257],
        [1.6330],
        [1.4877],
        [1.6330],
        [1.6330],
        [1.4877],
        [1.4449],
        [1.6330],
        [1.0897],
        [0.9312],
        [1.0897],
        [0.9312],
        [0.8257],
        [1.0897],
        [0.9312],
        [0.8257],
        [1.6330],
        [1.6330],
        [1.4877],
        [1.4449],
        [1.0897],
        [1.0897],
        [0.9312],
        [1.6330],
        [1.4877],
        [1.4449],
        [1.0897],
        [1.6330]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697],
        [2.4697]])
values:tensor([[1.6330],
        [1.0897],
        [0.9312],
        [1.6330],
        [1.4877],
        [1.4877],
        [1.4449],
        [1.4449],
        [1.0897],
        [0.9312],
        [0.8257],
        [0.8257]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3459, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0317, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3459, grad_fn=<MulBackward0>), tensor(0.6118, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0317, grad_fn=<MulBackward0>), tensor(0.0734, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3516, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0322, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3516, grad_fn=<MulBackward0>), tensor(0.6109, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0322, grad_fn=<MulBackward0>), tensor(0.0735, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 91.00000000000009

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 91.60000000000008

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.20000000000007

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.80000000000007

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.80000000000007

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.80000000000007

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.80000000000007

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.80000000000007

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.80000000000007

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.80000000000007

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.80000000000007

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 92.80000000000007

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 93.40000000000006

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 93.40000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 93.40000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 93.40000000000006

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 93.40000000000006

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 93.40000000000006

done: False
patient pred:tensor([[0.3209],
        [0.3209],
        [0.3209],
        [0.3209],
        [0.3209],
        [0.2713],
        [0.3209],
        [0.2713],
        [0.2713],
        [0.2978],
        [0.2713],
        [0.3209],
        [0.3209],
        [0.3209],
        [0.2713],
        [0.2978],
        [0.2713],
        [0.2978],
        [0.3209],
        [0.2713],
        [0.2713],
        [0.2978],
        [0.2713],
        [0.2978],
        [0.2713],
        [0.2978],
        [0.2978],
        [0.2978],
        [0.2978],
        [0.2978],
        [0.2713],
        [0.3209],
        [0.3209],
        [0.3209],
        [0.2713],
        [0.2978],
        [0.2978],
        [0.2978],
        [0.2978],
        [0.2713],
        [0.3209],
        [0.2713],
        [0.2978],
        [0.2978],
        [0.2713],
        [0.3209],
        [0.3209]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2442],
        [1.2442],
        [1.2442],
        [1.2442],
        [1.2442],
        [1.2442],
        [1.2442],
        [1.2442],
        [1.2680],
        [1.2442],
        [1.2680],
        [1.2442],
        [1.2442],
        [1.2442],
        [1.2680],
        [1.2442],
        [1.2680],
        [1.2442],
        [1.2442],
        [1.2442],
        [1.2680],
        [1.2442],
        [1.2680],
        [1.2442],
        [1.2680],
        [1.2680],
        [1.2680],
        [1.2680],
        [1.2680],
        [1.2442],
        [1.2680],
        [1.2442],
        [1.2442],
        [1.2442],
        [1.2680],
        [1.2680],
        [1.2680],
        [1.2680],
        [1.2442],
        [1.2680],
        [1.2442],
        [1.2680],
        [1.2680],
        [1.2442],
        [1.2680],
        [1.2442],
        [1.2442]])
values:tensor([[ 0.0355],
        [ 0.3209],
        [ 0.2713],
        [ 0.0355],
        [-0.0018],
        [-0.0018],
        [ 0.0041],
        [ 0.0041],
        [ 0.3209],
        [ 0.2713],
        [ 0.2978],
        [ 0.2978]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[-0.2751],
        [-0.1876],
        [-0.2751],
        [-0.3134],
        [-0.1876],
        [-0.1876],
        [-0.2751],
        [-0.1876],
        [-0.2229],
        [-0.2751],
        [-0.1876],
        [-0.2751],
        [-0.2751],
        [-0.3134],
        [-0.2751],
        [-0.3134],
        [-0.1876],
        [-0.2229],
        [-0.1876],
        [-0.2751],
        [-0.3134],
        [-0.1876],
        [-0.1876],
        [-0.2229],
        [-0.1876],
        [-0.1876],
        [-0.1876],
        [-0.2751],
        [-0.3134],
        [-0.1876],
        [-0.1876],
        [-0.1876],
        [-0.1876],
        [-0.2751],
        [-0.3134],
        [-0.3230],
        [-0.1876],
        [-0.2751],
        [-0.1876],
        [-0.2229],
        [-0.1876],
        [-0.2229],
        [-0.2352],
        [-0.1876],
        [-0.2751],
        [-0.3134],
        [-0.1876],
        [-0.2229],
        [-0.2352],
        [-0.1876],
        [-0.1876],
        [-0.1876],
        [-0.2229],
        [-0.2352],
        [-0.1876],
        [-0.1876],
        [-0.2229],
        [-0.2352],
        [-0.1876],
        [-0.1876],
        [-0.1876],
        [-0.2229],
        [-0.2352],
        [-0.2751],
        [-0.1876],
        [-0.1876],
        [-0.2751],
        [-0.3134],
        [-0.3230],
        [-0.1876],
        [-0.2229],
        [-0.1876],
        [-0.1876],
        [-0.2229],
        [-0.2352],
        [-0.1876],
        [-0.2751],
        [-0.3134],
        [-0.2751],
        [-0.3134],
        [-0.3230],
        [-0.2751],
        [-0.3134],
        [-0.3230],
        [-0.1876],
        [-0.1876],
        [-0.2229],
        [-0.2352],
        [-0.2751],
        [-0.2751],
        [-0.3134],
        [-0.1876],
        [-0.2229],
        [-0.2352],
        [-0.2751],
        [-0.1876],
        [-0.2751],
        [-0.3134],
        [-0.1876],
        [-0.1876],
        [-0.1876],
        [-0.2229],
        [-0.2352]], grad_fn=<AddmmBackward0>)
patient target:tensor([[0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312],
        [0.8312]])
values:tensor([[-0.1876],
        [-0.2751],
        [-0.3134],
        [-0.1876],
        [-0.2229],
        [-0.2229],
        [-0.2352],
        [-0.2352],
        [-0.2751],
        [-0.3134],
        [-0.3230],
        [-0.3230]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3212, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0391, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3212, grad_fn=<MulBackward0>), tensor(0.4483, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0391, grad_fn=<MulBackward0>), tensor(0.0559, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3250, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0395, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3250, grad_fn=<MulBackward0>), tensor(0.4490, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0395, grad_fn=<MulBackward0>), tensor(0.0559, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 93.80000000000007

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 94.20000000000007

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 94.60000000000008

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 95.00000000000009

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 95.40000000000009

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 95.8000000000001

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 96.2000000000001

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.43046721000000016, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 96.60000000000011

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.38742048900000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 97.00000000000011

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.34867844010000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 97.40000000000012

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.31381059609000017, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 97.80000000000013

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.28242953648100017, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 98.20000000000013

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.25418658283290013, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 98.60000000000014

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.22876792454961012, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 99.00000000000014

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.2058911320946491, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 99.40000000000015

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.1853020188851842, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 99.80000000000015

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.16677181699666577, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 100.20000000000016

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.1500946352969992, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 100.60000000000016

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.13508517176729928, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 101.00000000000017

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.12157665459056936, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 101.40000000000018

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.10941898913151243, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 101.80000000000018

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.0984770902183612, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 102.20000000000019

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.08862938119652508, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 102.6000000000002

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.07976644307687257, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 103.0000000000002

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.07178979876918531, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 103.4000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.07178979876918531, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 104.0000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.07178979876918531, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 104.0000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.07178979876918531, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 104.0000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.07178979876918531, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 104.0000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.07178979876918531, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 104.6000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.07178979876918531, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 105.20000000000019

done: False
patient pred:tensor([[0.3054],
        [0.3054],
        [0.3054],
        [0.3054],
        [0.3054],
        [0.2531],
        [0.3054],
        [0.2531],
        [0.2531],
        [0.2827],
        [0.2531],
        [0.3054],
        [0.3054],
        [0.3054],
        [0.2531],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.3054],
        [0.2531],
        [0.2531],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.2827],
        [0.2827],
        [0.2827],
        [0.2827],
        [0.2531],
        [0.3054],
        [0.3054],
        [0.3054],
        [0.2531],
        [0.2827],
        [0.2827],
        [0.2827],
        [0.2827],
        [0.2531],
        [0.3054],
        [0.2531],
        [0.2827],
        [0.2827],
        [0.2531],
        [0.3054],
        [0.3054],
        [0.3054],
        [0.2531],
        [0.2827],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.2827],
        [0.2827],
        [0.2531],
        [0.2827],
        [0.2827],
        [0.2827],
        [0.2827]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2277],
        [1.2277],
        [1.2277],
        [1.2277],
        [1.2277],
        [1.2277],
        [1.2277],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2277],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2277],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2544],
        [1.2544],
        [1.2544],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2277],
        [1.2277],
        [1.2544],
        [1.2544],
        [1.2544],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2277],
        [1.2277],
        [1.2544],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2544],
        [1.2544],
        [1.2277],
        [1.2544],
        [1.2544],
        [1.2544],
        [1.2544],
        [1.2277]])
values:tensor([[ 0.0090],
        [ 0.3054],
        [ 0.2531],
        [ 0.0090],
        [-0.0253],
        [-0.0253],
        [-0.0196],
        [-0.0196],
        [ 0.3054],
        [ 0.2531],
        [ 0.2827],
        [ 0.2827]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.6992],
        [0.6982],
        [0.6992],
        [0.7008],
        [0.6982],
        [0.6982],
        [0.6992],
        [0.6982],
        [0.6988],
        [0.6992],
        [0.6982],
        [0.6992],
        [0.6992],
        [0.7008],
        [0.6992],
        [0.7008],
        [0.6982],
        [0.6988],
        [0.6982],
        [0.6992],
        [0.7008],
        [0.6982],
        [0.6982],
        [0.6988],
        [0.6982],
        [0.6982],
        [0.6982],
        [0.6992],
        [0.7008],
        [0.6982],
        [0.6982],
        [0.6982],
        [0.6982],
        [0.6992],
        [0.7008],
        [0.7006],
        [0.6982],
        [0.6992],
        [0.6982],
        [0.6988],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6982],
        [0.6992],
        [0.7008],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6982],
        [0.6982],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6982],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6982],
        [0.6982],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6992],
        [0.6982],
        [0.6982],
        [0.6992],
        [0.7008],
        [0.7006],
        [0.6982],
        [0.6988],
        [0.6982],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6982],
        [0.6992],
        [0.7008],
        [0.6992],
        [0.7008],
        [0.7006],
        [0.6992],
        [0.7008],
        [0.7006],
        [0.6982],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6992],
        [0.6992],
        [0.7008],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6992],
        [0.6982],
        [0.6992],
        [0.7008],
        [0.6982],
        [0.6982],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6992],
        [0.7008],
        [0.7006],
        [0.6982],
        [0.6988],
        [0.6980],
        [0.6982]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283],
        [1.6283]])
values:tensor([[0.6982],
        [0.6992],
        [0.7008],
        [0.6982],
        [0.6988],
        [0.6988],
        [0.6980],
        [0.6980],
        [0.6992],
        [0.7008],
        [0.7006],
        [0.7006]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.4042, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0390, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.4042, grad_fn=<MulBackward0>), tensor(0.4752, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0390, grad_fn=<MulBackward0>), tensor(0.0649, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.4076, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0393, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.4076, grad_fn=<MulBackward0>), tensor(0.4767, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0393, grad_fn=<MulBackward0>), tensor(0.0651, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 105.80000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 106.40000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 106.40000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 106.40000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 106.40000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 106.40000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 106.40000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 106.40000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 107.00000000000017

done: False
patient pred:tensor([[0.3195],
        [0.3195],
        [0.3195],
        [0.3195],
        [0.3195],
        [0.2726],
        [0.3195],
        [0.2726],
        [0.2726],
        [0.2987],
        [0.2726],
        [0.3195],
        [0.3195],
        [0.3195],
        [0.2726],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.3195],
        [0.2726],
        [0.2726],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.2987],
        [0.2987],
        [0.2987],
        [0.2987],
        [0.2726],
        [0.3195],
        [0.3195],
        [0.3195],
        [0.2726],
        [0.2987],
        [0.2987],
        [0.2987],
        [0.2987],
        [0.2726],
        [0.3195],
        [0.2726],
        [0.2987],
        [0.2987],
        [0.2726],
        [0.3195],
        [0.3195],
        [0.3195],
        [0.2726],
        [0.2987],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.2987],
        [0.2987],
        [0.2726],
        [0.2987],
        [0.2987],
        [0.2987],
        [0.2987]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2453],
        [1.2453],
        [1.2453],
        [1.2453],
        [1.2453],
        [1.2453],
        [1.2453],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2453],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2453],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2453],
        [1.2453],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2453],
        [1.2453],
        [1.2688],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2453],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2453]])
values:tensor([[ 0.0249],
        [ 0.3195],
        [ 0.2726],
        [ 0.0249],
        [-0.0093],
        [-0.0093],
        [-0.0034],
        [-0.0034],
        [ 0.3195],
        [ 0.2726],
        [ 0.2987],
        [ 0.2987]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4777],
        [0.4775],
        [0.4777],
        [0.4788],
        [0.4775],
        [0.4775],
        [0.4777],
        [0.4775],
        [0.4778],
        [0.4777],
        [0.4775],
        [0.4777],
        [0.4777],
        [0.4788],
        [0.4777],
        [0.4788],
        [0.4775],
        [0.4778],
        [0.4775],
        [0.4777],
        [0.4788],
        [0.4775],
        [0.4775],
        [0.4778],
        [0.4775],
        [0.4775],
        [0.4775],
        [0.4777],
        [0.4788],
        [0.4775],
        [0.4775],
        [0.4775],
        [0.4775],
        [0.4777],
        [0.4788],
        [0.4774],
        [0.4775],
        [0.4777],
        [0.4775],
        [0.4778],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4775],
        [0.4777],
        [0.4788],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4775],
        [0.4775],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4775],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4775],
        [0.4775],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4777],
        [0.4775],
        [0.4775],
        [0.4777],
        [0.4788],
        [0.4774],
        [0.4775],
        [0.4778],
        [0.4775],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4775],
        [0.4777],
        [0.4788],
        [0.4777],
        [0.4788],
        [0.4774],
        [0.4777],
        [0.4788],
        [0.4774],
        [0.4775],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4777],
        [0.4777],
        [0.4788],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4777],
        [0.4775],
        [0.4777],
        [0.4788],
        [0.4775],
        [0.4775],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4777],
        [0.4788],
        [0.4774],
        [0.4775],
        [0.4778],
        [0.4774],
        [0.4775],
        [0.4777],
        [0.4775],
        [0.4775],
        [0.4778],
        [0.4774]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298],
        [1.4298]])
values:tensor([[0.4775],
        [0.4777],
        [0.4788],
        [0.4775],
        [0.4778],
        [0.4778],
        [0.4774],
        [0.4774],
        [0.4777],
        [0.4788],
        [0.4774],
        [0.4774]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3883, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0490, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3883, grad_fn=<MulBackward0>), tensor(0.4678, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0490, grad_fn=<MulBackward0>), tensor(0.0511, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3913, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0492, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3913, grad_fn=<MulBackward0>), tensor(0.4701, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0492, grad_fn=<MulBackward0>), tensor(0.0514, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 107.40000000000018

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 107.80000000000018

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.20000000000019

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.80000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.80000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.80000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.80000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 108.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 109.40000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 109.40000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 110.00000000000017

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 110.00000000000017

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 110.60000000000016

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 111.20000000000016

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 111.80000000000015

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 111.80000000000015

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 111.80000000000015

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 111.80000000000015

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 111.80000000000015

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 111.80000000000015

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 111.80000000000015

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 111.80000000000015

done: False
patient pred:tensor([[0.3095],
        [0.3095],
        [0.3095],
        [0.3095],
        [0.3095],
        [0.2620],
        [0.3095],
        [0.2620],
        [0.2620],
        [0.2900],
        [0.2620],
        [0.3095],
        [0.3095],
        [0.3095],
        [0.2620],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.3095],
        [0.2620],
        [0.2620],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.2900],
        [0.2900],
        [0.2900],
        [0.2900],
        [0.2620],
        [0.3095],
        [0.3095],
        [0.3095],
        [0.2620],
        [0.2900],
        [0.2900],
        [0.2900],
        [0.2900],
        [0.2620],
        [0.3095],
        [0.2620],
        [0.2900],
        [0.2900],
        [0.2620],
        [0.3095],
        [0.3095],
        [0.3095],
        [0.2620],
        [0.2900],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.2900],
        [0.2900],
        [0.2620],
        [0.2900],
        [0.2900],
        [0.2900],
        [0.2900],
        [0.3095],
        [0.2620],
        [0.2900]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2358],
        [1.2358],
        [1.2358],
        [1.2358],
        [1.2358],
        [1.2358],
        [1.2358],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2358],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2358],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2610],
        [1.2610],
        [1.2610],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2358],
        [1.2358],
        [1.2610],
        [1.2610],
        [1.2610],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2358],
        [1.2358],
        [1.2610],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2610],
        [1.2610],
        [1.2358],
        [1.2610],
        [1.2610],
        [1.2610],
        [1.2610],
        [1.2358],
        [1.2358],
        [1.2610],
        [1.2358]])
values:tensor([[ 0.0090],
        [ 0.3095],
        [ 0.2620],
        [ 0.0090],
        [-0.0232],
        [-0.0232],
        [-0.0174],
        [-0.0174],
        [ 0.3095],
        [ 0.2620],
        [ 0.2900],
        [ 0.2900]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.5203],
        [0.5204],
        [0.5203],
        [0.5207],
        [0.5204],
        [0.5204],
        [0.5203],
        [0.5204],
        [0.5206],
        [0.5203],
        [0.5204],
        [0.5203],
        [0.5203],
        [0.5207],
        [0.5203],
        [0.5207],
        [0.5204],
        [0.5206],
        [0.5204],
        [0.5203],
        [0.5207],
        [0.5204],
        [0.5204],
        [0.5206],
        [0.5204],
        [0.5204],
        [0.5204],
        [0.5203],
        [0.5207],
        [0.5204],
        [0.5204],
        [0.5204],
        [0.5204],
        [0.5203],
        [0.5207],
        [0.5191],
        [0.5204],
        [0.5203],
        [0.5204],
        [0.5206],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5204],
        [0.5203],
        [0.5207],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5204],
        [0.5204],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5204],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5204],
        [0.5204],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5203],
        [0.5204],
        [0.5204],
        [0.5203],
        [0.5207],
        [0.5191],
        [0.5204],
        [0.5206],
        [0.5204],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5204],
        [0.5203],
        [0.5207],
        [0.5203],
        [0.5207],
        [0.5191],
        [0.5203],
        [0.5207],
        [0.5191],
        [0.5204],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5203],
        [0.5203],
        [0.5207],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5203],
        [0.5204],
        [0.5203],
        [0.5207],
        [0.5204],
        [0.5204],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5203],
        [0.5207],
        [0.5191],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5204],
        [0.5203],
        [0.5204],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5203],
        [0.5207],
        [0.5191],
        [0.5204],
        [0.5206],
        [0.5202],
        [0.5204],
        [0.5206],
        [0.5204],
        [0.5206],
        [0.5204],
        [0.5204]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683],
        [1.4683]])
values:tensor([[0.5204],
        [0.5203],
        [0.5207],
        [0.5204],
        [0.5206],
        [0.5206],
        [0.5202],
        [0.5202],
        [0.5203],
        [0.5207],
        [0.5191],
        [0.5191]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3690, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0357, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3690, grad_fn=<MulBackward0>), tensor(0.4636, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0357, grad_fn=<MulBackward0>), tensor(0.0638, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3716, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0358, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3716, grad_fn=<MulBackward0>), tensor(0.4665, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0358, grad_fn=<MulBackward0>), tensor(0.0642, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 112.20000000000016

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 112.60000000000016

done: False
patient pred:tensor([[0.3181],
        [0.3181],
        [0.3181],
        [0.3181],
        [0.3181],
        [0.2742],
        [0.3181],
        [0.2742],
        [0.2742],
        [0.2998],
        [0.2742],
        [0.3181],
        [0.3181],
        [0.3181],
        [0.2742],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.3181],
        [0.2742],
        [0.2742],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2742],
        [0.3181],
        [0.3181],
        [0.3181],
        [0.2742],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2742],
        [0.3181],
        [0.2742],
        [0.2998],
        [0.2998],
        [0.2742],
        [0.3181],
        [0.3181],
        [0.3181],
        [0.2742],
        [0.2998],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2742],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.3181],
        [0.2742],
        [0.2998],
        [0.3181],
        [0.2742]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2468],
        [1.2468],
        [1.2468],
        [1.2468],
        [1.2468],
        [1.2468],
        [1.2468],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2468],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2468],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2468],
        [1.2468],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2468],
        [1.2468],
        [1.2698],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2468],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2468],
        [1.2468],
        [1.2698],
        [1.2468],
        [1.2468],
        [1.2468]])
values:tensor([[ 0.0179],
        [ 0.3181],
        [ 0.2742],
        [ 0.0179],
        [-0.0137],
        [-0.0137],
        [-0.0077],
        [-0.0077],
        [ 0.3181],
        [ 0.2742],
        [ 0.2998],
        [ 0.2998]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4943],
        [0.4956],
        [0.4943],
        [0.4942],
        [0.4956],
        [0.4956],
        [0.4943],
        [0.4956],
        [0.4957],
        [0.4943],
        [0.4956],
        [0.4943],
        [0.4943],
        [0.4942],
        [0.4943],
        [0.4942],
        [0.4956],
        [0.4957],
        [0.4956],
        [0.4943],
        [0.4942],
        [0.4956],
        [0.4956],
        [0.4957],
        [0.4956],
        [0.4956],
        [0.4956],
        [0.4943],
        [0.4942],
        [0.4956],
        [0.4956],
        [0.4956],
        [0.4956],
        [0.4943],
        [0.4942],
        [0.4925],
        [0.4956],
        [0.4943],
        [0.4956],
        [0.4957],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4956],
        [0.4943],
        [0.4942],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4956],
        [0.4956],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4956],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4956],
        [0.4956],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4943],
        [0.4956],
        [0.4956],
        [0.4943],
        [0.4942],
        [0.4925],
        [0.4956],
        [0.4957],
        [0.4956],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4956],
        [0.4943],
        [0.4942],
        [0.4943],
        [0.4942],
        [0.4925],
        [0.4943],
        [0.4942],
        [0.4925],
        [0.4956],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4943],
        [0.4943],
        [0.4942],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4943],
        [0.4956],
        [0.4943],
        [0.4942],
        [0.4956],
        [0.4956],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4943],
        [0.4942],
        [0.4925],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4956],
        [0.4943],
        [0.4956],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4943],
        [0.4942],
        [0.4925],
        [0.4956],
        [0.4957],
        [0.4954],
        [0.4956],
        [0.4957],
        [0.4956],
        [0.4957],
        [0.4956],
        [0.4956]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460],
        [1.4460]])
values:tensor([[0.4956],
        [0.4943],
        [0.4942],
        [0.4956],
        [0.4957],
        [0.4957],
        [0.4954],
        [0.4954],
        [0.4943],
        [0.4942],
        [0.4925],
        [0.4925]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3769, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0464, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3769, grad_fn=<MulBackward0>), tensor(0.4578, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0464, grad_fn=<MulBackward0>), tensor(0.0493, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3782, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0466, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3782, grad_fn=<MulBackward0>), tensor(0.4606, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0466, grad_fn=<MulBackward0>), tensor(0.0496, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 113.00000000000017

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 113.40000000000018

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 113.80000000000018

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 114.20000000000019

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.6561000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 114.80000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 114.80000000000018

Score (5/10): 0.2540000000000001 (recent)   0.22960000000000036 (average)
game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 115.40000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 115.40000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 115.40000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 115.40000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 115.40000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 115.40000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 115.40000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.6561000000000001, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 116.00000000000017

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.6561000000000001, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 116.60000000000016

done: False
patient pred:tensor([[0.3117],
        [0.3117],
        [0.3117],
        [0.3117],
        [0.3117],
        [0.2689],
        [0.3117],
        [0.2689],
        [0.2689],
        [0.2946],
        [0.2689],
        [0.3117],
        [0.3117],
        [0.3117],
        [0.2689],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.3117],
        [0.2689],
        [0.2689],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.2946],
        [0.2946],
        [0.2946],
        [0.2946],
        [0.2689],
        [0.3117],
        [0.3117],
        [0.3117],
        [0.2689],
        [0.2946],
        [0.2946],
        [0.2946],
        [0.2946],
        [0.2689],
        [0.3117],
        [0.2689],
        [0.2946],
        [0.2946],
        [0.2689],
        [0.3117],
        [0.3117],
        [0.3117],
        [0.2689],
        [0.2946],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.2946],
        [0.2946],
        [0.2689],
        [0.2946],
        [0.2946],
        [0.2946],
        [0.2946],
        [0.3117],
        [0.2689],
        [0.2946],
        [0.3117],
        [0.2689],
        [0.3117],
        [0.2689],
        [0.2689],
        [0.2946]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2420],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2652],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2420],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2652],
        [1.2420],
        [1.2420],
        [1.2652],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2420],
        [1.2652],
        [1.2420]])
values:tensor([[ 0.0082],
        [ 0.3117],
        [ 0.2689],
        [ 0.0082],
        [-0.0220],
        [-0.0220],
        [-0.0160],
        [-0.0160],
        [ 0.3117],
        [ 0.2689],
        [ 0.2946],
        [ 0.2946]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4999],
        [0.5032],
        [0.4999],
        [0.4996],
        [0.5032],
        [0.5032],
        [0.4999],
        [0.5032],
        [0.5033],
        [0.4999],
        [0.5032],
        [0.4999],
        [0.4999],
        [0.4996],
        [0.4999],
        [0.4996],
        [0.5032],
        [0.5033],
        [0.5032],
        [0.4999],
        [0.4996],
        [0.5032],
        [0.5032],
        [0.5033],
        [0.5032],
        [0.5032],
        [0.5032],
        [0.4999],
        [0.4996],
        [0.5032],
        [0.5032],
        [0.5032],
        [0.5032],
        [0.4999],
        [0.4996],
        [0.4975],
        [0.5032],
        [0.4999],
        [0.5032],
        [0.5033],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.5032],
        [0.4999],
        [0.4996],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.5032],
        [0.5032],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.5032],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.5032],
        [0.5032],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.4999],
        [0.5032],
        [0.5032],
        [0.4999],
        [0.4996],
        [0.4975],
        [0.5032],
        [0.5033],
        [0.5032],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.5032],
        [0.4999],
        [0.4996],
        [0.4999],
        [0.4996],
        [0.4975],
        [0.4999],
        [0.4996],
        [0.4975],
        [0.5032],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.4999],
        [0.4999],
        [0.4996],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.4999],
        [0.5032],
        [0.4999],
        [0.4996],
        [0.5032],
        [0.5032],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.4999],
        [0.4996],
        [0.4975],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.5032],
        [0.4999],
        [0.5032],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.4999],
        [0.4996],
        [0.4975],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.5032],
        [0.5033],
        [0.5032],
        [0.5033],
        [0.5032],
        [0.5032],
        [0.4999],
        [0.4996],
        [0.4975],
        [0.5032],
        [0.5033],
        [0.5032],
        [0.5033],
        [0.5031],
        [0.5032]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529],
        [1.4529]])
values:tensor([[0.5032],
        [0.4999],
        [0.4996],
        [0.5032],
        [0.5033],
        [0.5033],
        [0.5031],
        [0.5031],
        [0.4999],
        [0.4996],
        [0.4975],
        [0.4975]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3698, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0365, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3698, grad_fn=<MulBackward0>), tensor(0.4539, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0365, grad_fn=<MulBackward0>), tensor(0.0631, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3712, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0365, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3712, grad_fn=<MulBackward0>), tensor(0.4558, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0365, grad_fn=<MulBackward0>), tensor(0.0634, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 117.20000000000016

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 117.20000000000016

done: False
patient pred:tensor([[0.3157],
        [0.3157],
        [0.3157],
        [0.3157],
        [0.3157],
        [0.2758],
        [0.3157],
        [0.2758],
        [0.2758],
        [0.2998],
        [0.2758],
        [0.3157],
        [0.3157],
        [0.3157],
        [0.2758],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.3157],
        [0.2758],
        [0.2758],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2758],
        [0.3157],
        [0.3157],
        [0.3157],
        [0.2758],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2758],
        [0.3157],
        [0.2758],
        [0.2998],
        [0.2998],
        [0.2758],
        [0.3157],
        [0.3157],
        [0.3157],
        [0.2758],
        [0.2998],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2758],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.2998],
        [0.3157],
        [0.2758],
        [0.2998],
        [0.3157],
        [0.2758],
        [0.3157],
        [0.2758],
        [0.2758],
        [0.2998]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2483],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2698],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2483],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2698],
        [1.2483],
        [1.2483],
        [1.2698],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2483],
        [1.2698],
        [1.2483]])
values:tensor([[ 0.0130],
        [ 0.3157],
        [ 0.2758],
        [ 0.0130],
        [-0.0165],
        [-0.0165],
        [-0.0105],
        [-0.0105],
        [ 0.3157],
        [ 0.2758],
        [ 0.2998],
        [ 0.2998]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4796],
        [0.4858],
        [0.4796],
        [0.4789],
        [0.4858],
        [0.4858],
        [0.4796],
        [0.4858],
        [0.4858],
        [0.4796],
        [0.4858],
        [0.4796],
        [0.4796],
        [0.4789],
        [0.4796],
        [0.4789],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4796],
        [0.4789],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4796],
        [0.4789],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4796],
        [0.4789],
        [0.4764],
        [0.4858],
        [0.4796],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4858],
        [0.4796],
        [0.4789],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4796],
        [0.4858],
        [0.4858],
        [0.4796],
        [0.4789],
        [0.4764],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4858],
        [0.4796],
        [0.4789],
        [0.4796],
        [0.4789],
        [0.4764],
        [0.4796],
        [0.4789],
        [0.4764],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4796],
        [0.4796],
        [0.4789],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4796],
        [0.4858],
        [0.4796],
        [0.4789],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4796],
        [0.4789],
        [0.4764],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4858],
        [0.4796],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4796],
        [0.4789],
        [0.4764],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4796],
        [0.4789],
        [0.4764],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4858],
        [0.4796]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372],
        [1.4372]])
values:tensor([[0.4858],
        [0.4796],
        [0.4789],
        [0.4858],
        [0.4858],
        [0.4858],
        [0.4857],
        [0.4857],
        [0.4796],
        [0.4789],
        [0.4764],
        [0.4764]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3679, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0459, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3679, grad_fn=<MulBackward0>), tensor(0.4561, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0459, grad_fn=<MulBackward0>), tensor(0.0498, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3700, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0460, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3700, grad_fn=<MulBackward0>), tensor(0.4563, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0460, grad_fn=<MulBackward0>), tensor(0.0497, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 117.60000000000016

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 118.00000000000017

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 118.40000000000018

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 118.80000000000018

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 119.20000000000019

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 119.80000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 119.80000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 119.80000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 119.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 119.80000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 120.40000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 121.00000000000017

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 121.60000000000016

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 121.60000000000016

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 121.60000000000016

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 122.20000000000016

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5904900000000002, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 122.20000000000016

done: False
patient pred:tensor([[0.3118],
        [0.3118],
        [0.3118],
        [0.3118],
        [0.3118],
        [0.2730],
        [0.3118],
        [0.2730],
        [0.2730],
        [0.2969],
        [0.2730],
        [0.3118],
        [0.3118],
        [0.3118],
        [0.2730],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.3118],
        [0.2730],
        [0.2730],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.2969],
        [0.2969],
        [0.2969],
        [0.2969],
        [0.2730],
        [0.3118],
        [0.3118],
        [0.3118],
        [0.2730],
        [0.2969],
        [0.2969],
        [0.2969],
        [0.2969],
        [0.2730],
        [0.3118],
        [0.2730],
        [0.2969],
        [0.2969],
        [0.2730],
        [0.3118],
        [0.3118],
        [0.3118],
        [0.2730],
        [0.2969],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.2969],
        [0.2969],
        [0.2730],
        [0.2969],
        [0.2969],
        [0.2969],
        [0.2969],
        [0.3118],
        [0.2730],
        [0.2969],
        [0.3118],
        [0.2730],
        [0.3118],
        [0.2730],
        [0.2730],
        [0.2969],
        [0.3118],
        [0.2730],
        [0.2969],
        [0.2730],
        [0.2969]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2457],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2672],
        [1.2672],
        [1.2672],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2672],
        [1.2672],
        [1.2672],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2672],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2672],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2672],
        [1.2672],
        [1.2672],
        [1.2457],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2457],
        [1.2672],
        [1.2457],
        [1.2672],
        [1.2672]])
values:tensor([[ 0.0067],
        [ 0.3118],
        [ 0.2730],
        [ 0.0067],
        [-0.0214],
        [-0.0214],
        [-0.0154],
        [-0.0154],
        [ 0.3118],
        [ 0.2730],
        [ 0.2969],
        [ 0.2969]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4796],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4896],
        [0.4796],
        [0.4796],
        [0.4784],
        [0.4796],
        [0.4784],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4752],
        [0.4896],
        [0.4796],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4752],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4796],
        [0.4784],
        [0.4752],
        [0.4796],
        [0.4784],
        [0.4752],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4796],
        [0.4784],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4752],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4752],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4752],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4796],
        [0.4784],
        [0.4752],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406],
        [1.4406]])
values:tensor([[0.4896],
        [0.4796],
        [0.4784],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4896],
        [0.4796],
        [0.4784],
        [0.4752],
        [0.4752]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3628, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0364, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3628, grad_fn=<MulBackward0>), tensor(0.4558, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0364, grad_fn=<MulBackward0>), tensor(0.0636, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3665, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0367, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3665, grad_fn=<MulBackward0>), tensor(0.4553, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0367, grad_fn=<MulBackward0>), tensor(0.0635, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 122.60000000000016

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 123.00000000000017

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 123.40000000000018

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 123.80000000000018

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 124.20000000000019

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 124.6000000000002

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 125.0000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.47829690000000014, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 125.6000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.47829690000000014, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.20000000000019

done: False
patient pred:tensor([[0.3153],
        [0.3153],
        [0.3153],
        [0.3153],
        [0.3153],
        [0.2790],
        [0.3153],
        [0.2790],
        [0.2790],
        [0.3013],
        [0.2790],
        [0.3153],
        [0.3153],
        [0.3153],
        [0.2790],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.3153],
        [0.2790],
        [0.2790],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.2790],
        [0.3153],
        [0.3153],
        [0.3153],
        [0.2790],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.2790],
        [0.3153],
        [0.2790],
        [0.3013],
        [0.3013],
        [0.2790],
        [0.3153],
        [0.3153],
        [0.3153],
        [0.2790],
        [0.3013],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.3013],
        [0.3153],
        [0.2790],
        [0.3013],
        [0.3153],
        [0.2790],
        [0.3153],
        [0.2790],
        [0.2790],
        [0.3013],
        [0.3153],
        [0.2790],
        [0.3013],
        [0.2790],
        [0.3013],
        [0.3153],
        [0.2790],
        [0.3013],
        [0.2790],
        [0.2790],
        [0.3013],
        [0.3013]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2511],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2712],
        [1.2511],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2511],
        [1.2712],
        [1.2511],
        [1.2511],
        [1.2712],
        [1.2712],
        [1.2511]])
values:tensor([[ 0.0104],
        [ 0.3153],
        [ 0.2790],
        [ 0.0104],
        [-0.0170],
        [-0.0170],
        [-0.0109],
        [-0.0109],
        [ 0.3153],
        [ 0.2790],
        [ 0.3013],
        [ 0.3013]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4612],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4773],
        [0.4612],
        [0.4612],
        [0.4592],
        [0.4612],
        [0.4592],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4773],
        [0.4612],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4612],
        [0.4592],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4773]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295],
        [1.4295]])
values:tensor([[0.4773],
        [0.4612],
        [0.4592],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4773],
        [0.4612],
        [0.4592],
        [0.4553],
        [0.4553]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3600, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0459, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3600, grad_fn=<MulBackward0>), tensor(0.4396, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0459, grad_fn=<MulBackward0>), tensor(0.0476, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3639, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0462, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3639, grad_fn=<MulBackward0>), tensor(0.4391, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0462, grad_fn=<MulBackward0>), tensor(0.0475, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 126.6000000000002

done: False
patient pred:tensor([[0.3115],
        [0.3115],
        [0.3115],
        [0.3115],
        [0.3115],
        [0.2771],
        [0.3115],
        [0.2771],
        [0.2771],
        [0.2985],
        [0.2771],
        [0.3115],
        [0.3115],
        [0.3115],
        [0.2771],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.3115],
        [0.2771],
        [0.2771],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.2985],
        [0.2985],
        [0.2985],
        [0.2985],
        [0.2771],
        [0.3115],
        [0.3115],
        [0.3115],
        [0.2771],
        [0.2985],
        [0.2985],
        [0.2985],
        [0.2985],
        [0.2771],
        [0.3115],
        [0.2771],
        [0.2985],
        [0.2985],
        [0.2771],
        [0.3115],
        [0.3115],
        [0.3115],
        [0.2771],
        [0.2985],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.2985],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.2985],
        [0.2985],
        [0.2985],
        [0.3115],
        [0.2771],
        [0.2985],
        [0.3115],
        [0.2771],
        [0.3115],
        [0.2771],
        [0.2771],
        [0.2985],
        [0.3115],
        [0.2771],
        [0.2985],
        [0.2771],
        [0.2985],
        [0.3115],
        [0.2771],
        [0.2985],
        [0.2771],
        [0.2771],
        [0.2985],
        [0.2985],
        [0.3115]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2494],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2687],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2687],
        [1.2494],
        [1.2494],
        [1.2687],
        [1.2687],
        [1.2494],
        [1.2494]])
values:tensor([[ 0.0054],
        [ 0.3115],
        [ 0.2771],
        [ 0.0054],
        [-0.0211],
        [-0.0211],
        [-0.0150],
        [-0.0150],
        [ 0.3115],
        [ 0.2771],
        [ 0.2985],
        [ 0.2985]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4537],
        [0.4783],
        [0.4537],
        [0.4508],
        [0.4783],
        [0.4783],
        [0.4537],
        [0.4783],
        [0.4779],
        [0.4537],
        [0.4783],
        [0.4537],
        [0.4537],
        [0.4508],
        [0.4537],
        [0.4508],
        [0.4783],
        [0.4779],
        [0.4783],
        [0.4537],
        [0.4508],
        [0.4783],
        [0.4783],
        [0.4779],
        [0.4783],
        [0.4783],
        [0.4783],
        [0.4537],
        [0.4508],
        [0.4783],
        [0.4783],
        [0.4783],
        [0.4783],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4783],
        [0.4537],
        [0.4783],
        [0.4779],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4783],
        [0.4537],
        [0.4508],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4783],
        [0.4783],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4783],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4783],
        [0.4783],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4537],
        [0.4783],
        [0.4783],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4783],
        [0.4779],
        [0.4783],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4783],
        [0.4537],
        [0.4508],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4783],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4537],
        [0.4537],
        [0.4508],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4537],
        [0.4783],
        [0.4537],
        [0.4508],
        [0.4783],
        [0.4783],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4783],
        [0.4537],
        [0.4783],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4783],
        [0.4779],
        [0.4783],
        [0.4779],
        [0.4783],
        [0.4783],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4783],
        [0.4779],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4783],
        [0.4537],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4783],
        [0.4779],
        [0.4751],
        [0.4783],
        [0.4783],
        [0.4783],
        [0.4779],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4783]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305],
        [1.4305]])
values:tensor([[0.4783],
        [0.4537],
        [0.4508],
        [0.4783],
        [0.4779],
        [0.4779],
        [0.4751],
        [0.4751],
        [0.4537],
        [0.4508],
        [0.4457],
        [0.4457]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3613, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0365, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3613, grad_fn=<MulBackward0>), tensor(0.4417, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0365, grad_fn=<MulBackward0>), tensor(0.0596, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3650, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0367, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3650, grad_fn=<MulBackward0>), tensor(0.4413, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0367, grad_fn=<MulBackward0>), tensor(0.0596, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 127.20000000000019

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 127.20000000000019

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 127.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 127.20000000000019

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 127.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 127.20000000000019

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 127.20000000000019

done: False
patient pred:tensor([[0.3132],
        [0.3132],
        [0.3132],
        [0.3132],
        [0.3132],
        [0.2809],
        [0.3132],
        [0.2809],
        [0.2809],
        [0.3011],
        [0.2809],
        [0.3132],
        [0.3132],
        [0.3132],
        [0.2809],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.3132],
        [0.2809],
        [0.2809],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.3011],
        [0.3011],
        [0.3011],
        [0.3011],
        [0.2809],
        [0.3132],
        [0.3132],
        [0.3132],
        [0.2809],
        [0.3011],
        [0.3011],
        [0.3011],
        [0.3011],
        [0.2809],
        [0.3132],
        [0.2809],
        [0.3011],
        [0.3011],
        [0.2809],
        [0.3132],
        [0.3132],
        [0.3132],
        [0.2809],
        [0.3011],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.3011],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.3011],
        [0.3011],
        [0.3011],
        [0.3132],
        [0.2809],
        [0.3011],
        [0.3132],
        [0.2809],
        [0.3132],
        [0.2809],
        [0.2809],
        [0.3011],
        [0.3132],
        [0.2809],
        [0.3011],
        [0.2809],
        [0.3011],
        [0.3132],
        [0.2809],
        [0.3011],
        [0.2809],
        [0.2809],
        [0.3011],
        [0.3011],
        [0.3132]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2528],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2710],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2710],
        [1.2528],
        [1.2528],
        [1.2710],
        [1.2710],
        [1.2528],
        [1.2528]])
values:tensor([[ 0.0081],
        [ 0.3132],
        [ 0.2809],
        [ 0.0081],
        [-0.0180],
        [-0.0180],
        [-0.0118],
        [-0.0118],
        [ 0.3132],
        [ 0.2809],
        [ 0.3011],
        [ 0.3011]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4507],
        [0.4860],
        [0.4507],
        [0.4465],
        [0.4860],
        [0.4860],
        [0.4507],
        [0.4860],
        [0.4823],
        [0.4507],
        [0.4860],
        [0.4507],
        [0.4507],
        [0.4465],
        [0.4507],
        [0.4465],
        [0.4860],
        [0.4823],
        [0.4860],
        [0.4507],
        [0.4465],
        [0.4860],
        [0.4860],
        [0.4823],
        [0.4860],
        [0.4860],
        [0.4860],
        [0.4507],
        [0.4465],
        [0.4860],
        [0.4860],
        [0.4860],
        [0.4860],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4860],
        [0.4507],
        [0.4860],
        [0.4823],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4860],
        [0.4507],
        [0.4465],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4860],
        [0.4860],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4860],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4860],
        [0.4860],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4507],
        [0.4860],
        [0.4860],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4860],
        [0.4823],
        [0.4860],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4860],
        [0.4507],
        [0.4465],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4860],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4507],
        [0.4507],
        [0.4465],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4507],
        [0.4860],
        [0.4507],
        [0.4465],
        [0.4860],
        [0.4860],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4860],
        [0.4507],
        [0.4860],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4860],
        [0.4823],
        [0.4860],
        [0.4823],
        [0.4860],
        [0.4860],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4860],
        [0.4823],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4860],
        [0.4507],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4860],
        [0.4823],
        [0.4783],
        [0.4860],
        [0.4860],
        [0.4860],
        [0.4823],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4860],
        [0.4507]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374],
        [1.4374]])
values:tensor([[0.4860],
        [0.4507],
        [0.4465],
        [0.4860],
        [0.4823],
        [0.4823],
        [0.4783],
        [0.4783],
        [0.4507],
        [0.4465],
        [0.4399],
        [0.4399]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3523, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0449, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3523, grad_fn=<MulBackward0>), tensor(0.4391, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0449, grad_fn=<MulBackward0>), tensor(0.0473, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3556, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0452, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3556, grad_fn=<MulBackward0>), tensor(0.4393, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0452, grad_fn=<MulBackward0>), tensor(0.0473, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 127.6000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.2000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.80000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.80000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.80000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.80000000000018

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.80000000000018

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 128.80000000000018

done: False
patient pred:tensor([[0.3104],
        [0.3104],
        [0.3104],
        [0.3104],
        [0.3104],
        [0.2779],
        [0.3104],
        [0.2779],
        [0.2779],
        [0.2990],
        [0.2779],
        [0.3104],
        [0.3104],
        [0.3104],
        [0.2779],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.3104],
        [0.2779],
        [0.2779],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2779],
        [0.3104],
        [0.3104],
        [0.3104],
        [0.2779],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2779],
        [0.3104],
        [0.2779],
        [0.2990],
        [0.2990],
        [0.2779],
        [0.3104],
        [0.3104],
        [0.3104],
        [0.2779],
        [0.2990],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.3104],
        [0.2779],
        [0.2990],
        [0.3104],
        [0.2779],
        [0.3104],
        [0.2779],
        [0.2779],
        [0.2990],
        [0.3104],
        [0.2779],
        [0.2990],
        [0.2779],
        [0.2990],
        [0.3104],
        [0.2779],
        [0.2990],
        [0.2779],
        [0.2779],
        [0.2990],
        [0.2990],
        [0.3104],
        [0.3104]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2501],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2691],
        [1.2501],
        [1.2501],
        [1.2691],
        [1.2691],
        [1.2501],
        [1.2501],
        [1.2501]])
values:tensor([[ 0.0030],
        [ 0.3104],
        [ 0.2779],
        [ 0.0030],
        [-0.0218],
        [-0.0218],
        [-0.0157],
        [-0.0157],
        [ 0.3104],
        [ 0.2779],
        [ 0.2990],
        [ 0.2990]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4423],
        [0.4902],
        [0.4423],
        [0.4363],
        [0.4902],
        [0.4902],
        [0.4423],
        [0.4902],
        [0.4838],
        [0.4423],
        [0.4902],
        [0.4423],
        [0.4423],
        [0.4363],
        [0.4423],
        [0.4363],
        [0.4902],
        [0.4838],
        [0.4902],
        [0.4423],
        [0.4363],
        [0.4902],
        [0.4902],
        [0.4838],
        [0.4902],
        [0.4902],
        [0.4902],
        [0.4423],
        [0.4363],
        [0.4902],
        [0.4902],
        [0.4902],
        [0.4902],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4902],
        [0.4423],
        [0.4902],
        [0.4838],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4902],
        [0.4423],
        [0.4363],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4902],
        [0.4902],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4902],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4902],
        [0.4902],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4423],
        [0.4902],
        [0.4902],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4902],
        [0.4838],
        [0.4902],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4902],
        [0.4423],
        [0.4363],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4902],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4423],
        [0.4423],
        [0.4363],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4423],
        [0.4902],
        [0.4423],
        [0.4363],
        [0.4902],
        [0.4902],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4902],
        [0.4423],
        [0.4902],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4902],
        [0.4838],
        [0.4902],
        [0.4838],
        [0.4902],
        [0.4902],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4902],
        [0.4838],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4902],
        [0.4423],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4902],
        [0.4838],
        [0.4776],
        [0.4902],
        [0.4902],
        [0.4902],
        [0.4838],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4902],
        [0.4423],
        [0.4423],
        [0.4363],
        [0.4902]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412],
        [1.4412]])
values:tensor([[0.4902],
        [0.4423],
        [0.4363],
        [0.4902],
        [0.4838],
        [0.4838],
        [0.4776],
        [0.4776],
        [0.4423],
        [0.4363],
        [0.4261],
        [0.4261]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3418, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0355, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3418, grad_fn=<MulBackward0>), tensor(0.4356, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0355, grad_fn=<MulBackward0>), tensor(0.0590, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3442, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0356, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3442, grad_fn=<MulBackward0>), tensor(0.4355, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0356, grad_fn=<MulBackward0>), tensor(0.0591, grad_fn=<MulBackward0>)]
Natural gradient 0 converged!
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 129.2000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 129.6000000000002

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 130.0000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 130.4000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 130.8000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 131.20000000000022

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 131.60000000000022

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.43046721000000016, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 132.00000000000023

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.38742048900000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 132.40000000000023

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.34867844010000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 132.80000000000024

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.31381059609000017, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 133.20000000000024

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.28242953648100017, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 133.60000000000025

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.25418658283290013, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 134.00000000000026

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.22876792454961012, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 134.40000000000026

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.2058911320946491, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 134.80000000000027

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.1853020188851842, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 135.20000000000027

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.16677181699666577, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 135.60000000000028

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.16677181699666577, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 136.20000000000027

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.16677181699666577, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 136.20000000000027

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.16677181699666577, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 136.80000000000027

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.16677181699666577, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 137.40000000000026

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.16677181699666577, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 137.40000000000026

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.16677181699666577, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 137.40000000000026

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.16677181699666577, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 137.40000000000026

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.16677181699666577, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 137.40000000000026

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.16677181699666577, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 137.40000000000026

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.16677181699666577, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 137.40000000000026

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.16677181699666577, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 137.40000000000026

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.16677181699666577, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 137.40000000000026

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.16677181699666577, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 138.00000000000026

Score (6/10): 0.23199999999999987 (recent)   0.23000000000000043 (average)
game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.16677181699666577, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 138.60000000000025

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.16677181699666577, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 139.20000000000024

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.16677181699666577, 0.47829690000000014]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 139.80000000000024

done: False
patient pred:tensor([[0.3138],
        [0.2825],
        [0.3033],
        [0.2825],
        [0.2825],
        [0.2825],
        [0.2825],
        [0.2825],
        [0.2825],
        [0.3033],
        [0.3033],
        [0.3033],
        [0.2825],
        [0.2825],
        [0.3033],
        [0.3033],
        [0.3033]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2543],
        [1.2729],
        [1.2543],
        [1.2543],
        [1.2543],
        [1.2543],
        [1.2543],
        [1.2543],
        [1.2729],
        [1.2729],
        [1.2729],
        [1.2543],
        [1.2543],
        [1.2729],
        [1.2729],
        [1.2729],
        [1.2543]])
values:tensor([[ 0.2825],
        [ 0.2825],
        [ 0.3138],
        [ 0.3033],
        [ 0.3033],
        [-0.0169],
        [ 0.0076],
        [ 0.0076],
        [-0.0108],
        [-0.0169],
        [-0.0108]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[0.4362],
        [0.4275],
        [0.4133],
        [0.4993],
        [0.4919],
        [0.4993],
        [0.4993],
        [0.4919],
        [0.4830],
        [0.4993],
        [0.4993],
        [0.4993]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.4494],
        [1.4494],
        [1.4494],
        [1.4494],
        [1.4494],
        [1.4494],
        [1.4494],
        [1.4494],
        [1.4494],
        [1.4494],
        [1.4494],
        [1.4494]])
values:tensor([[0.4275],
        [0.4275],
        [0.4362],
        [0.4133],
        [0.4133],
        [0.4919],
        [0.4993],
        [0.4993],
        [0.4830],
        [0.4919],
        [0.4830]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3281, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0578, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3281, grad_fn=<MulBackward0>), tensor(0.5339, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0578, grad_fn=<MulBackward0>), tensor(0.0283, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3178, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0560, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3178, grad_fn=<MulBackward0>), tensor(0.5296, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0560, grad_fn=<MulBackward0>), tensor(0.0282, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 140.20000000000024

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 140.60000000000025

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 141.00000000000026

done: False
patient pred:tensor([[0.3496],
        [0.3181],
        [0.3394],
        [0.3181],
        [0.3181],
        [0.3181],
        [0.3181],
        [0.3181],
        [0.3181],
        [0.3394],
        [0.3394],
        [0.3394],
        [0.3181],
        [0.3181],
        [0.3394],
        [0.3394],
        [0.3394],
        [0.3496],
        [0.3181],
        [0.3394]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2863],
        [1.3055],
        [1.2863],
        [1.2863],
        [1.2863],
        [1.2863],
        [1.2863],
        [1.2863],
        [1.3055],
        [1.3055],
        [1.3055],
        [1.2863],
        [1.2863],
        [1.3055],
        [1.3055],
        [1.3055],
        [1.2863],
        [1.2863],
        [1.3055],
        [1.2863]])
values:tensor([[0.3181],
        [0.3181],
        [0.3496],
        [0.3394],
        [0.3394],
        [0.0120],
        [0.0378],
        [0.0378],
        [0.0181],
        [0.0120],
        [0.0181]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.6019],
        [1.5944],
        [1.5819],
        [1.6405],
        [1.6407],
        [1.6405],
        [1.6405],
        [1.6407],
        [1.6405],
        [1.6405],
        [1.6405],
        [1.6405]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.4765],
        [2.4765],
        [2.4765],
        [2.4765],
        [2.4765],
        [2.4765],
        [2.4765],
        [2.4765],
        [2.4765],
        [2.4765],
        [2.4765],
        [2.4765]])
values:tensor([[1.5944],
        [1.5944],
        [1.6019],
        [1.5819],
        [1.5819],
        [1.6407],
        [1.6405],
        [1.6405],
        [1.6405],
        [1.6407],
        [1.6405]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(0.3328, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0574, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3328, grad_fn=<MulBackward0>), tensor(0.5295, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0574, grad_fn=<MulBackward0>), tensor(0.0382, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3336, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0572, grad_fn=<MulBackward0>)]
patient losses: [tensor(0.3336, grad_fn=<MulBackward0>), tensor(0.5124, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0572, grad_fn=<MulBackward0>), tensor(0.0374, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 141.40000000000026

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 142.00000000000026

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 142.60000000000025

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 143.20000000000024

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 143.80000000000024

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 144.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.47829690000000014]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 145.60000000000022

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.43046721000000016]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 146.20000000000022

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 146.8000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 146.8000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 146.8000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 146.8000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 146.8000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 146.8000000000002

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.38742048900000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 146.8000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.34867844010000015]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 147.4000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.31381059609000017]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 148.0000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.31381059609000017]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 148.0000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.28242953648100017]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 148.6000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.28242953648100017]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 148.6000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.25418658283290013]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 149.2000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.25418658283290013]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 149.2000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.22876792454961012]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 149.80000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.2058911320946491]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 150.40000000000018

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.1853020188851842]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.00000000000017

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.1853020188851842]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.00000000000017

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.1853020188851842]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.00000000000017

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.1853020188851842]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.00000000000017

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.1853020188851842]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.00000000000017

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.1853020188851842]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.00000000000017

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.1853020188851842]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.00000000000017

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.1853020188851842]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.00000000000017

done: False
patient pred:tensor([[0.3419],
        [0.3036],
        [0.3317],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.3317],
        [0.3317],
        [0.3317],
        [0.3036],
        [0.3036],
        [0.3317],
        [0.3317],
        [0.3317],
        [0.3419],
        [0.3036],
        [0.3317],
        [0.3419]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2732],
        [1.2986],
        [1.2732],
        [1.2732],
        [1.2732],
        [1.2732],
        [1.2732],
        [1.2732],
        [1.2986],
        [1.2986],
        [1.2986],
        [1.2732],
        [1.2732],
        [1.2986],
        [1.2986],
        [1.2986],
        [1.2732],
        [1.2732],
        [1.2986],
        [1.2732],
        [1.2732]])
values:tensor([[ 0.3036],
        [ 0.3036],
        [ 0.3419],
        [ 0.3317],
        [ 0.3317],
        [-0.0124],
        [ 0.0098],
        [ 0.0098],
        [-0.0068],
        [-0.0124],
        [-0.0068],
        [ 0.3419]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.1342],
        [1.1060],
        [1.0764],
        [1.2824],
        [1.2610],
        [1.2824],
        [1.2824],
        [1.2610],
        [1.2381],
        [1.2824],
        [1.2824],
        [1.2824],
        [1.1342],
        [1.1060],
        [1.2824],
        [1.2824],
        [1.2824],
        [1.2824],
        [1.2824],
        [1.2610],
        [1.2381],
        [1.2824],
        [1.2610],
        [1.2381],
        [1.2824],
        [1.2824],
        [1.2824],
        [1.2610],
        [1.2381],
        [1.2824],
        [1.2824],
        [1.2610],
        [1.2824],
        [1.2610],
        [1.2824],
        [1.2610],
        [1.2824],
        [1.2824]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542],
        [2.1542]])
values:tensor([[1.1060],
        [1.1060],
        [1.1342],
        [1.0764],
        [1.0764],
        [1.2610],
        [1.2824],
        [1.2824],
        [1.2381],
        [1.2610],
        [1.2381],
        [1.1342]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(7.7887, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0164, grad_fn=<MulBackward0>)]
patient losses: [tensor(7.7887, grad_fn=<MulBackward0>), tensor(0.6148, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0164, grad_fn=<MulBackward0>), tensor(0.0214, grad_fn=<MulBackward0>)]
patient losses: [tensor(8.0022, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0167, grad_fn=<MulBackward0>)]
patient losses: [tensor(8.0022, grad_fn=<MulBackward0>), tensor(0.6263, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0167, grad_fn=<MulBackward0>), tensor(0.0208, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.40000000000018

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 151.80000000000018

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 152.2000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 152.6000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 153.0000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 153.4000000000002

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 153.8000000000002

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.43046721000000016, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 154.20000000000022

done: False
patient pred:tensor([[0.3155],
        [0.2880],
        [0.3073],
        [0.2880],
        [0.2880],
        [0.2880],
        [0.2880],
        [0.2880],
        [0.2880],
        [0.3073],
        [0.3073],
        [0.3073],
        [0.2880],
        [0.2880],
        [0.3073],
        [0.3073],
        [0.3073],
        [0.3155],
        [0.2880],
        [0.3073],
        [0.3155],
        [0.3155],
        [0.2880],
        [0.2880],
        [0.2880],
        [0.2880],
        [0.2880],
        [0.3073],
        [0.2880]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2592],
        [1.2766],
        [1.2592],
        [1.2592],
        [1.2592],
        [1.2592],
        [1.2592],
        [1.2592],
        [1.2766],
        [1.2766],
        [1.2766],
        [1.2592],
        [1.2592],
        [1.2766],
        [1.2766],
        [1.2766],
        [1.2592],
        [1.2592],
        [1.2766],
        [1.2592],
        [1.2592],
        [1.2592],
        [1.2592],
        [1.2592],
        [1.2592],
        [1.2592],
        [1.2766],
        [1.2592],
        [1.2766]])
values:tensor([[ 0.2880],
        [ 0.2880],
        [ 0.3155],
        [ 0.3073],
        [ 0.3073],
        [-0.0266],
        [-0.0052],
        [-0.0052],
        [-0.0213],
        [-0.0266],
        [-0.0213],
        [ 0.3155]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[5.9280],
        [5.9238],
        [5.9141],
        [5.8774],
        [5.8853],
        [5.8774],
        [5.8774],
        [5.8853],
        [5.8896],
        [5.8774],
        [5.8774],
        [5.8774],
        [5.9280],
        [5.9238],
        [5.8774],
        [5.8774],
        [5.8774],
        [5.8774],
        [5.8774],
        [5.8853],
        [5.8896],
        [5.8774],
        [5.8853],
        [5.8896],
        [5.8774],
        [5.8774],
        [5.8774],
        [5.8853],
        [5.8896],
        [5.8774],
        [5.8774],
        [5.8853],
        [5.8774],
        [5.8853],
        [5.8774],
        [5.8853],
        [5.8774],
        [5.8774]], grad_fn=<AddmmBackward0>)
patient target:tensor([[6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897],
        [6.2897]])
values:tensor([[5.9238],
        [5.9238],
        [5.9280],
        [5.9141],
        [5.9141],
        [5.8853],
        [5.8774],
        [5.8774],
        [5.8896],
        [5.8853],
        [5.8896],
        [5.9280]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(20.9289, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0502, grad_fn=<MulBackward0>)]
patient losses: [tensor(20.9289, grad_fn=<MulBackward0>), tensor(10.7989, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0502, grad_fn=<MulBackward0>), tensor(0.0943, grad_fn=<MulBackward0>)]
patient losses: [tensor(27.8460, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0645, grad_fn=<MulBackward0>)]
patient losses: [tensor(27.8460, grad_fn=<MulBackward0>), tensor(13.1242, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0645, grad_fn=<MulBackward0>), tensor(0.1192, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 154.8000000000002

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 154.8000000000002

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 154.8000000000002

done: False
patient pred:tensor([[0.3145],
        [0.2890],
        [0.3070],
        [0.2890],
        [0.2890],
        [0.2890],
        [0.2890],
        [0.2890],
        [0.2890],
        [0.3070],
        [0.3070],
        [0.3070],
        [0.2890],
        [0.2890],
        [0.3070],
        [0.3070],
        [0.3070],
        [0.3145],
        [0.2890],
        [0.3070],
        [0.3145],
        [0.3145],
        [0.2890],
        [0.2890],
        [0.2890],
        [0.2890],
        [0.2890],
        [0.3070],
        [0.2890]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2601],
        [1.2763],
        [1.2601],
        [1.2601],
        [1.2601],
        [1.2601],
        [1.2601],
        [1.2601],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2601],
        [1.2601],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2601],
        [1.2601],
        [1.2763],
        [1.2601],
        [1.2601],
        [1.2601],
        [1.2601],
        [1.2601],
        [1.2601],
        [1.2601],
        [1.2763],
        [1.2601],
        [1.2763]])
values:tensor([[ 0.2890],
        [ 0.2890],
        [ 0.3145],
        [ 0.3070],
        [ 0.3070],
        [-0.0218],
        [-0.0017],
        [-0.0017],
        [-0.0168],
        [-0.0218],
        [-0.0168],
        [ 0.3145]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[ 0.5180],
        [ 0.5947],
        [ 0.6766],
        [-0.5471],
        [-0.3852],
        [-0.5471],
        [-0.5471],
        [-0.3852],
        [-0.2913],
        [-0.5471],
        [-0.5471],
        [-0.5471],
        [ 0.5180],
        [ 0.5947],
        [-0.5471],
        [-0.5471],
        [-0.5471],
        [-0.5471],
        [-0.5471],
        [-0.3852],
        [-0.2913],
        [-0.5471],
        [-0.3852],
        [-0.2913],
        [-0.5471],
        [-0.5471],
        [-0.5471],
        [-0.3852],
        [-0.2913],
        [-0.5471],
        [-0.5471],
        [-0.3852],
        [-0.5471],
        [-0.3852],
        [-0.5471],
        [-0.3852],
        [-0.5471],
        [-0.5471],
        [ 0.5180]], grad_fn=<AddmmBackward0>)
patient target:tensor([[0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076],
        [0.5076]])
values:tensor([[ 0.5947],
        [ 0.5947],
        [ 0.5180],
        [ 0.6766],
        [ 0.6766],
        [-0.3852],
        [-0.5471],
        [-0.5471],
        [-0.2913],
        [-0.3852],
        [-0.2913],
        [ 0.5180]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(3410.7395, grad_fn=<MulBackward0>)]
hasty losses: [tensor(9.2865, grad_fn=<MulBackward0>)]
patient losses: [tensor(3410.7395, grad_fn=<MulBackward0>), tensor(1496.1947, grad_fn=<MulBackward0>)]
hasty losses: [tensor(9.2865, grad_fn=<MulBackward0>), tensor(13.5850, grad_fn=<MulBackward0>)]
patient losses: [tensor(2314.7778, grad_fn=<MulBackward0>)]
hasty losses: [tensor(6.2968, grad_fn=<MulBackward0>)]
patient losses: [tensor(2314.7778, grad_fn=<MulBackward0>), tensor(1021.4028, grad_fn=<MulBackward0>)]
hasty losses: [tensor(6.2968, grad_fn=<MulBackward0>), tensor(9.2634, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 155.20000000000022

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 155.60000000000022

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 156.00000000000023

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 156.40000000000023

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 156.80000000000024

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 157.20000000000024

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 157.60000000000025

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.43046721000000016, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 158.00000000000026

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.43046721000000016, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 158.60000000000025

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.43046721000000016, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 158.60000000000025

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.43046721000000016, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 158.60000000000025

done: False
patient pred:tensor([[0.3112],
        [0.2875],
        [0.3044],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.3044],
        [0.3044],
        [0.3044],
        [0.2875],
        [0.2875],
        [0.3044],
        [0.3044],
        [0.3044],
        [0.3112],
        [0.2875],
        [0.3044],
        [0.3112],
        [0.3112],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.3044],
        [0.2875],
        [0.3112],
        [0.2875],
        [0.3044],
        [0.3044],
        [0.3044],
        [0.2875],
        [0.3044],
        [0.3044]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2587],
        [1.2740],
        [1.2587],
        [1.2587],
        [1.2587],
        [1.2587],
        [1.2587],
        [1.2587],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2587],
        [1.2587],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2587],
        [1.2587],
        [1.2740],
        [1.2587],
        [1.2587],
        [1.2587],
        [1.2587],
        [1.2587],
        [1.2587],
        [1.2587],
        [1.2740],
        [1.2587],
        [1.2740],
        [1.2587],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2587],
        [1.2740],
        [1.2740],
        [1.2587]])
values:tensor([[ 0.2875],
        [ 0.2875],
        [ 0.3112],
        [ 0.3044],
        [ 0.3044],
        [-0.0217],
        [-0.0029],
        [-0.0029],
        [-0.0170],
        [-0.0217],
        [-0.0170],
        [ 0.3112]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[3.7929],
        [3.7943],
        [3.7954],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7943],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7929],
        [3.7943],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7943],
        [3.7926],
        [3.7926],
        [3.7943],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7943],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7929],
        [3.7929],
        [3.7943],
        [3.7954]], grad_fn=<AddmmBackward0>)
patient target:tensor([[4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134],
        [4.4134]])
values:tensor([[3.7943],
        [3.7943],
        [3.7929],
        [3.7954],
        [3.7954],
        [3.7926],
        [3.7926],
        [3.7926],
        [3.7943],
        [3.7926],
        [3.7943],
        [3.7929]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(20.7127, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0782, grad_fn=<MulBackward0>)]
patient losses: [tensor(20.7127, grad_fn=<MulBackward0>), tensor(8.3648, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0782, grad_fn=<MulBackward0>), tensor(0.1143, grad_fn=<MulBackward0>)]
patient losses: [tensor(24.8140, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0955, grad_fn=<MulBackward0>)]
patient losses: [tensor(24.8140, grad_fn=<MulBackward0>), tensor(10.2222, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.0955, grad_fn=<MulBackward0>), tensor(0.1406, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 159.20000000000024

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 159.80000000000024

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 159.80000000000024

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 160.40000000000023

Score (7/10): 0.22399999999999992 (recent)   0.22914285714285748 (average)
game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 160.40000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 160.40000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 160.40000000000023

done: False
patient pred:tensor([[0.3109],
        [0.2884],
        [0.3052],
        [0.2884],
        [0.2884],
        [0.2884],
        [0.2884],
        [0.2884],
        [0.2884],
        [0.3052],
        [0.3052],
        [0.3052],
        [0.2884],
        [0.2884],
        [0.3052],
        [0.3052],
        [0.3052],
        [0.3109],
        [0.2884],
        [0.3052],
        [0.3109],
        [0.3109],
        [0.2884],
        [0.2884],
        [0.2884],
        [0.2884],
        [0.2884],
        [0.3052],
        [0.2884],
        [0.3109],
        [0.2884],
        [0.3052],
        [0.3052],
        [0.3052],
        [0.2884],
        [0.3052],
        [0.3052]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2596],
        [1.2747],
        [1.2596],
        [1.2596],
        [1.2596],
        [1.2596],
        [1.2596],
        [1.2596],
        [1.2747],
        [1.2747],
        [1.2747],
        [1.2596],
        [1.2596],
        [1.2747],
        [1.2747],
        [1.2747],
        [1.2596],
        [1.2596],
        [1.2747],
        [1.2596],
        [1.2596],
        [1.2596],
        [1.2596],
        [1.2596],
        [1.2596],
        [1.2596],
        [1.2747],
        [1.2596],
        [1.2747],
        [1.2596],
        [1.2747],
        [1.2747],
        [1.2747],
        [1.2596],
        [1.2747],
        [1.2747],
        [1.2596]])
values:tensor([[ 0.2884],
        [ 0.2884],
        [ 0.3109],
        [ 0.3052],
        [ 0.3052],
        [-0.0194],
        [-0.0015],
        [-0.0015],
        [-0.0147],
        [-0.0194],
        [-0.0147],
        [ 0.3109]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[3.0875],
        [3.0879],
        [3.0883],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0889],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0875],
        [3.0879],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0889],
        [3.0885],
        [3.0885],
        [3.0889],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0889],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0875],
        [3.0875],
        [3.0879],
        [3.0883],
        [3.0875],
        [3.0885],
        [3.0885],
        [3.0885]], grad_fn=<AddmmBackward0>)
patient target:tensor([[3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796],
        [3.7796]])
values:tensor([[3.0879],
        [3.0879],
        [3.0875],
        [3.0883],
        [3.0883],
        [3.0885],
        [3.0885],
        [3.0885],
        [3.0889],
        [3.0885],
        [3.0889],
        [3.0875]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(1046.6425, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.9934, grad_fn=<MulBackward0>)]
patient losses: [tensor(1046.6425, grad_fn=<MulBackward0>), tensor(456.7729, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.9934, grad_fn=<MulBackward0>), tensor(5.7710, grad_fn=<MulBackward0>)]
patient losses: [tensor(642.4095, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.4464, grad_fn=<MulBackward0>)]
patient losses: [tensor(642.4095, grad_fn=<MulBackward0>), tensor(274.6061, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.4464, grad_fn=<MulBackward0>), tensor(3.4564, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 161.00000000000023

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 161.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 161.00000000000023

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 161.00000000000023

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 161.00000000000023

done: False
patient pred:tensor([[0.3087],
        [0.2875],
        [0.3030],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.3030],
        [0.3030],
        [0.3030],
        [0.2875],
        [0.2875],
        [0.3030],
        [0.3030],
        [0.3030],
        [0.3087],
        [0.2875],
        [0.3030],
        [0.3087],
        [0.3087],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.2875],
        [0.3030],
        [0.2875],
        [0.3087],
        [0.2875],
        [0.3030],
        [0.3030],
        [0.3030],
        [0.2875],
        [0.3030],
        [0.3030]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2588],
        [1.2727],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2727],
        [1.2727],
        [1.2727],
        [1.2588],
        [1.2588],
        [1.2727],
        [1.2727],
        [1.2727],
        [1.2588],
        [1.2588],
        [1.2727],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2588],
        [1.2727],
        [1.2588],
        [1.2727],
        [1.2588],
        [1.2727],
        [1.2727],
        [1.2727],
        [1.2588],
        [1.2727],
        [1.2727],
        [1.2588]])
values:tensor([[ 0.2875],
        [ 0.2875],
        [ 0.3087],
        [ 0.3030],
        [ 0.3030],
        [-0.0197],
        [-0.0031],
        [-0.0031],
        [-0.0152],
        [-0.0197],
        [-0.0152],
        [ 0.3087]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[3.3031],
        [3.3034],
        [3.3034],
        [3.3058],
        [3.3059],
        [3.3058],
        [3.3058],
        [3.3059],
        [3.3060],
        [3.3058],
        [3.3058],
        [3.3058],
        [3.3031],
        [3.3034],
        [3.3058],
        [3.3058],
        [3.3058],
        [3.3058],
        [3.3058],
        [3.3059],
        [3.3060],
        [3.3058],
        [3.3059],
        [3.3060],
        [3.3058],
        [3.3058],
        [3.3058],
        [3.3059],
        [3.3060],
        [3.3058],
        [3.3058],
        [3.3059],
        [3.3058],
        [3.3059],
        [3.3058],
        [3.3059],
        [3.3058],
        [3.3058],
        [3.3031],
        [3.3031],
        [3.3034],
        [3.3034],
        [3.3031],
        [3.3058],
        [3.3058],
        [3.3059],
        [3.3031]], grad_fn=<AddmmBackward0>)
patient target:tensor([[3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752],
        [3.9752]])
values:tensor([[3.3034],
        [3.3034],
        [3.3031],
        [3.3034],
        [3.3034],
        [3.3059],
        [3.3058],
        [3.3058],
        [3.3060],
        [3.3059],
        [3.3060],
        [3.3031]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(631.9717, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.6503, grad_fn=<MulBackward0>)]
patient losses: [tensor(631.9717, grad_fn=<MulBackward0>), tensor(293.5134, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.6503, grad_fn=<MulBackward0>), tensor(4.1328, grad_fn=<MulBackward0>)]
patient losses: [tensor(537.1422, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.2812, grad_fn=<MulBackward0>)]
patient losses: [tensor(537.1422, grad_fn=<MulBackward0>), tensor(252.3874, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.2812, grad_fn=<MulBackward0>), tensor(3.6031, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 161.40000000000023

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 161.80000000000024

done: False
patient pred:tensor([[0.3089],
        [0.2888],
        [0.3042],
        [0.2888],
        [0.2888],
        [0.2888],
        [0.2888],
        [0.2888],
        [0.2888],
        [0.3042],
        [0.3042],
        [0.3042],
        [0.2888],
        [0.2888],
        [0.3042],
        [0.3042],
        [0.3042],
        [0.3089],
        [0.2888],
        [0.3042],
        [0.3089],
        [0.3089],
        [0.2888],
        [0.2888],
        [0.2888],
        [0.2888],
        [0.2888],
        [0.3042],
        [0.2888],
        [0.3089],
        [0.2888],
        [0.3042],
        [0.3042],
        [0.3042],
        [0.2888],
        [0.3042],
        [0.3042],
        [0.3089],
        [0.2888]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2599],
        [1.2738],
        [1.2599],
        [1.2599],
        [1.2599],
        [1.2599],
        [1.2599],
        [1.2599],
        [1.2738],
        [1.2738],
        [1.2738],
        [1.2599],
        [1.2599],
        [1.2738],
        [1.2738],
        [1.2738],
        [1.2599],
        [1.2599],
        [1.2738],
        [1.2599],
        [1.2599],
        [1.2599],
        [1.2599],
        [1.2599],
        [1.2599],
        [1.2599],
        [1.2738],
        [1.2599],
        [1.2738],
        [1.2599],
        [1.2738],
        [1.2738],
        [1.2738],
        [1.2599],
        [1.2738],
        [1.2738],
        [1.2599],
        [1.2599],
        [1.2738]])
values:tensor([[ 0.2888],
        [ 0.2888],
        [ 0.3089],
        [ 0.3042],
        [ 0.3042],
        [-0.0178],
        [-0.0021],
        [-0.0021],
        [-0.0133],
        [-0.0178],
        [-0.0133],
        [ 0.3089]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[3.0399],
        [3.0394],
        [3.0362],
        [3.0542],
        [3.0545],
        [3.0542],
        [3.0542],
        [3.0545],
        [3.0527],
        [3.0542],
        [3.0542],
        [3.0542],
        [3.0399],
        [3.0394],
        [3.0542],
        [3.0542],
        [3.0542],
        [3.0542],
        [3.0542],
        [3.0545],
        [3.0527],
        [3.0542],
        [3.0545],
        [3.0527],
        [3.0542],
        [3.0542],
        [3.0542],
        [3.0545],
        [3.0527],
        [3.0542],
        [3.0542],
        [3.0545],
        [3.0542],
        [3.0545],
        [3.0542],
        [3.0545],
        [3.0542],
        [3.0542],
        [3.0399],
        [3.0399],
        [3.0394],
        [3.0362],
        [3.0399],
        [3.0542],
        [3.0542],
        [3.0545],
        [3.0399]], grad_fn=<AddmmBackward0>)
patient target:tensor([[3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488],
        [3.7488]])
values:tensor([[3.0394],
        [3.0394],
        [3.0399],
        [3.0362],
        [3.0362],
        [3.0545],
        [3.0542],
        [3.0542],
        [3.0527],
        [3.0545],
        [3.0527],
        [3.0399]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(1000.6386, grad_fn=<MulBackward0>)]
hasty losses: [tensor(4.3670, grad_fn=<MulBackward0>)]
patient losses: [tensor(1000.6386, grad_fn=<MulBackward0>), tensor(435.1230, grad_fn=<MulBackward0>)]
hasty losses: [tensor(4.3670, grad_fn=<MulBackward0>), tensor(6.2763, grad_fn=<MulBackward0>)]
patient losses: [tensor(609.4275, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.6564, grad_fn=<MulBackward0>)]
patient losses: [tensor(609.4275, grad_fn=<MulBackward0>), tensor(260.1120, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.6564, grad_fn=<MulBackward0>), tensor(3.7493, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 162.20000000000024

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 162.60000000000025

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 163.20000000000024

done: False
patient pred:tensor([[0.3075],
        [0.2885],
        [0.3036],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.2885],
        [0.2885],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.3075],
        [0.2885],
        [0.3036],
        [0.3075],
        [0.3075],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.3036],
        [0.2885],
        [0.3075],
        [0.2885],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.2885],
        [0.3036],
        [0.3036],
        [0.3075],
        [0.2885],
        [0.3075],
        [0.2885]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2597],
        [1.2733],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2733],
        [1.2733],
        [1.2733],
        [1.2597],
        [1.2597],
        [1.2733],
        [1.2733],
        [1.2733],
        [1.2597],
        [1.2597],
        [1.2733],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2733],
        [1.2597],
        [1.2733],
        [1.2597],
        [1.2733],
        [1.2733],
        [1.2733],
        [1.2597],
        [1.2733],
        [1.2733],
        [1.2597],
        [1.2597],
        [1.2733],
        [1.2597],
        [1.2597]])
values:tensor([[ 0.2885],
        [ 0.2885],
        [ 0.3075],
        [ 0.3036],
        [ 0.3036],
        [-0.0182],
        [-0.0034],
        [-0.0034],
        [-0.0139],
        [-0.0182],
        [-0.0139],
        [ 0.3075]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[3.1811],
        [3.1725],
        [3.1504],
        [3.2536],
        [3.2556],
        [3.2536],
        [3.2536],
        [3.2556],
        [3.2366],
        [3.2536],
        [3.2536],
        [3.2536],
        [3.1811],
        [3.1725],
        [3.2536],
        [3.2536],
        [3.2536],
        [3.2536],
        [3.2536],
        [3.2556],
        [3.2366],
        [3.2536],
        [3.2556],
        [3.2366],
        [3.2536],
        [3.2536],
        [3.2536],
        [3.2556],
        [3.2366],
        [3.2536],
        [3.2536],
        [3.2556],
        [3.2536],
        [3.2556],
        [3.2536],
        [3.2556],
        [3.2536],
        [3.2536],
        [3.1811],
        [3.1811],
        [3.1725],
        [3.1504],
        [3.1811],
        [3.2536],
        [3.2536],
        [3.2556],
        [3.1811],
        [3.1811],
        [3.1725]], grad_fn=<AddmmBackward0>)
patient target:tensor([[3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282],
        [3.9282]])
values:tensor([[3.1725],
        [3.1725],
        [3.1811],
        [3.1504],
        [3.1504],
        [3.2556],
        [3.2536],
        [3.2536],
        [3.2366],
        [3.2556],
        [3.2366],
        [3.1811]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(603.6738, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.7922, grad_fn=<MulBackward0>)]
patient losses: [tensor(603.6738, grad_fn=<MulBackward0>), tensor(284.9678, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.7922, grad_fn=<MulBackward0>), tensor(4.4129, grad_fn=<MulBackward0>)]
patient losses: [tensor(522.7754, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.4501, grad_fn=<MulBackward0>)]
patient losses: [tensor(522.7754, grad_fn=<MulBackward0>), tensor(253.5420, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.4501, grad_fn=<MulBackward0>), tensor(3.8439, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 163.60000000000025

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 164.00000000000026

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 164.40000000000026

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 164.80000000000027

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 165.20000000000027

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 165.60000000000028

done: False
patient pred:tensor([[0.3073],
        [0.2893],
        [0.3040],
        [0.2893],
        [0.2893],
        [0.2893],
        [0.2893],
        [0.2893],
        [0.2893],
        [0.3040],
        [0.3040],
        [0.3040],
        [0.2893],
        [0.2893],
        [0.3040],
        [0.3040],
        [0.3040],
        [0.3073],
        [0.2893],
        [0.3040],
        [0.3073],
        [0.3073],
        [0.2893],
        [0.2893],
        [0.2893],
        [0.2893],
        [0.2893],
        [0.3040],
        [0.2893],
        [0.3073],
        [0.2893],
        [0.3040],
        [0.3040],
        [0.3040],
        [0.2893],
        [0.3040],
        [0.3040],
        [0.3073],
        [0.2893],
        [0.3073],
        [0.2893],
        [0.3073],
        [0.2893],
        [0.2893],
        [0.2893],
        [0.2893],
        [0.3040]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2603],
        [1.2736],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2736],
        [1.2736],
        [1.2736],
        [1.2603],
        [1.2603],
        [1.2736],
        [1.2736],
        [1.2736],
        [1.2603],
        [1.2603],
        [1.2736],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2736],
        [1.2603],
        [1.2736],
        [1.2603],
        [1.2736],
        [1.2736],
        [1.2736],
        [1.2603],
        [1.2736],
        [1.2736],
        [1.2603],
        [1.2603],
        [1.2736],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2603],
        [1.2736],
        [1.2603]])
values:tensor([[ 0.2893],
        [ 0.2893],
        [ 0.3073],
        [ 0.3040],
        [ 0.3040],
        [-0.0174],
        [-0.0033],
        [-0.0033],
        [-0.0132],
        [-0.0174],
        [-0.0132],
        [ 0.3073]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.9165],
        [1.8043],
        [1.5837],
        [2.7695],
        [2.7124],
        [2.7695],
        [2.7695],
        [2.7124],
        [2.4565],
        [2.7695],
        [2.7695],
        [2.7695],
        [1.9165],
        [1.8043],
        [2.7695],
        [2.7695],
        [2.7695],
        [2.7695],
        [2.7695],
        [2.7124],
        [2.4565],
        [2.7695],
        [2.7124],
        [2.4565],
        [2.7695],
        [2.7695],
        [2.7695],
        [2.7124],
        [2.4565],
        [2.7695],
        [2.7695],
        [2.7124],
        [2.7695],
        [2.7124],
        [2.7695],
        [2.7124],
        [2.7695],
        [2.7695],
        [1.9165],
        [1.9165],
        [1.8043],
        [1.5837],
        [1.9165],
        [2.7695],
        [2.7695],
        [2.7124],
        [1.9165],
        [1.9165],
        [1.8043]], grad_fn=<AddmmBackward0>)
patient target:tensor([[3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926],
        [3.4926]])
values:tensor([[1.8043],
        [1.8043],
        [1.9165],
        [1.5837],
        [1.5837],
        [2.7124],
        [2.7695],
        [2.7695],
        [2.4565],
        [2.7124],
        [2.4565],
        [1.9165]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(953.4565, grad_fn=<MulBackward0>)]
hasty losses: [tensor(4.8026, grad_fn=<MulBackward0>)]
patient losses: [tensor(953.4565, grad_fn=<MulBackward0>), tensor(408.2962, grad_fn=<MulBackward0>)]
hasty losses: [tensor(4.8026, grad_fn=<MulBackward0>), tensor(6.7703, grad_fn=<MulBackward0>)]
patient losses: [tensor(565.3591, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8480, grad_fn=<MulBackward0>)]
patient losses: [tensor(565.3591, grad_fn=<MulBackward0>), tensor(247.6234, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8480, grad_fn=<MulBackward0>), tensor(4.0936, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 166.00000000000028

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 166.4000000000003

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 166.8000000000003

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 167.2000000000003

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.6561000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 167.8000000000003

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.6561000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 168.4000000000003

done: False
patient pred:tensor([[0.3064],
        [0.2894],
        [0.3036],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.2894],
        [0.2894],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.3064],
        [0.2894],
        [0.3036],
        [0.3064],
        [0.3064],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.3036],
        [0.2894],
        [0.3064],
        [0.2894],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.2894],
        [0.3036],
        [0.3036],
        [0.3064],
        [0.2894],
        [0.3064],
        [0.2894],
        [0.3064],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.3036],
        [0.3064],
        [0.2894],
        [0.2894],
        [0.3036]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2605],
        [1.2732],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2732],
        [1.2732],
        [1.2732],
        [1.2605],
        [1.2605],
        [1.2732],
        [1.2732],
        [1.2732],
        [1.2605],
        [1.2605],
        [1.2732],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2732],
        [1.2605],
        [1.2732],
        [1.2605],
        [1.2732],
        [1.2732],
        [1.2732],
        [1.2605],
        [1.2732],
        [1.2732],
        [1.2605],
        [1.2605],
        [1.2732],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2732],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2732],
        [1.2605]])
values:tensor([[ 0.2894],
        [ 0.2894],
        [ 0.3064],
        [ 0.3036],
        [ 0.3036],
        [-0.0174],
        [-0.0041],
        [-0.0041],
        [-0.0134],
        [-0.0174],
        [-0.0134],
        [ 0.3064]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[4.5904],
        [4.5922],
        [4.5864],
        [4.5922],
        [4.5940],
        [4.5922],
        [4.5922],
        [4.5940],
        [4.5911],
        [4.5922],
        [4.5922],
        [4.5922],
        [4.5904],
        [4.5922],
        [4.5922],
        [4.5922],
        [4.5922],
        [4.5922],
        [4.5922],
        [4.5940],
        [4.5911],
        [4.5922],
        [4.5940],
        [4.5911],
        [4.5922],
        [4.5922],
        [4.5922],
        [4.5940],
        [4.5911],
        [4.5922],
        [4.5922],
        [4.5940],
        [4.5922],
        [4.5940],
        [4.5922],
        [4.5940],
        [4.5922],
        [4.5922],
        [4.5904],
        [4.5904],
        [4.5922],
        [4.5864],
        [4.5904],
        [4.5922],
        [4.5922],
        [4.5940],
        [4.5904],
        [4.5904],
        [4.5922],
        [4.5904],
        [4.5922],
        [4.5864],
        [4.5922]], grad_fn=<AddmmBackward0>)
patient target:tensor([[5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330],
        [5.1330]])
values:tensor([[4.5922],
        [4.5922],
        [4.5904],
        [4.5864],
        [4.5864],
        [4.5940],
        [4.5922],
        [4.5922],
        [4.5911],
        [4.5940],
        [4.5911],
        [4.5904]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(514.6918, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.9557, grad_fn=<MulBackward0>)]
patient losses: [tensor(514.6918, grad_fn=<MulBackward0>), tensor(251.3495, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.9557, grad_fn=<MulBackward0>), tensor(4.7882, grad_fn=<MulBackward0>)]
patient losses: [tensor(460.6255, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.6798, grad_fn=<MulBackward0>)]
patient losses: [tensor(460.6255, grad_fn=<MulBackward0>), tensor(217.1307, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.6798, grad_fn=<MulBackward0>), tensor(4.1463, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 169.00000000000028

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 169.60000000000028

done: False
patient pred:tensor([[0.3062],
        [0.2901],
        [0.3036],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.2901],
        [0.2901],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.3062],
        [0.2901],
        [0.3036],
        [0.3062],
        [0.3062],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.3036],
        [0.2901],
        [0.3062],
        [0.2901],
        [0.3036],
        [0.3036],
        [0.3036],
        [0.2901],
        [0.3036],
        [0.3036],
        [0.3062],
        [0.2901],
        [0.3062],
        [0.2901],
        [0.3062],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.2901],
        [0.3036],
        [0.3062],
        [0.2901],
        [0.2901],
        [0.3036]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2611],
        [1.2733],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2733],
        [1.2733],
        [1.2733],
        [1.2611],
        [1.2611],
        [1.2733],
        [1.2733],
        [1.2733],
        [1.2611],
        [1.2611],
        [1.2733],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2733],
        [1.2611],
        [1.2733],
        [1.2611],
        [1.2733],
        [1.2733],
        [1.2733],
        [1.2611],
        [1.2733],
        [1.2733],
        [1.2611],
        [1.2611],
        [1.2733],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2733],
        [1.2611],
        [1.2611],
        [1.2611],
        [1.2733],
        [1.2611]])
values:tensor([[ 0.2901],
        [ 0.2901],
        [ 0.3062],
        [ 0.3036],
        [ 0.3036],
        [-0.0167],
        [-0.0043],
        [-0.0043],
        [-0.0130],
        [-0.0167],
        [-0.0130],
        [ 0.3062]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.4809],
        [1.4858],
        [1.4003],
        [1.4877],
        [1.4937],
        [1.4877],
        [1.4877],
        [1.4937],
        [1.4826],
        [1.4877],
        [1.4877],
        [1.4877],
        [1.4809],
        [1.4858],
        [1.4877],
        [1.4877],
        [1.4877],
        [1.4877],
        [1.4877],
        [1.4937],
        [1.4826],
        [1.4877],
        [1.4937],
        [1.4826],
        [1.4877],
        [1.4877],
        [1.4877],
        [1.4937],
        [1.4826],
        [1.4877],
        [1.4877],
        [1.4937],
        [1.4877],
        [1.4937],
        [1.4877],
        [1.4937],
        [1.4877],
        [1.4877],
        [1.4809],
        [1.4809],
        [1.4858],
        [1.4003],
        [1.4809],
        [1.4877],
        [1.4877],
        [1.4937],
        [1.4809],
        [1.4809],
        [1.4858],
        [1.4809],
        [1.4858],
        [1.4003],
        [1.4877],
        [1.4809],
        [1.4877]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390],
        [2.3390]])
values:tensor([[1.4858],
        [1.4858],
        [1.4809],
        [1.4003],
        [1.4003],
        [1.4937],
        [1.4877],
        [1.4877],
        [1.4826],
        [1.4937],
        [1.4826],
        [1.4809]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(861.2729, grad_fn=<MulBackward0>)]
hasty losses: [tensor(5.0739, grad_fn=<MulBackward0>)]
patient losses: [tensor(861.2729, grad_fn=<MulBackward0>), tensor(371.6846, grad_fn=<MulBackward0>)]
hasty losses: [tensor(5.0739, grad_fn=<MulBackward0>), tensor(7.1087, grad_fn=<MulBackward0>)]
patient losses: [tensor(506.2492, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.9847, grad_fn=<MulBackward0>)]
patient losses: [tensor(506.2492, grad_fn=<MulBackward0>), tensor(220.2692, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.9847, grad_fn=<MulBackward0>), tensor(4.2794, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 170.00000000000028

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 170.4000000000003

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 170.8000000000003

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 171.2000000000003

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 171.6000000000003

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 172.0000000000003

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 172.6000000000003

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 172.6000000000003

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 172.6000000000003

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 172.6000000000003

done: False
patient pred:tensor([[0.3058],
        [0.2904],
        [0.3035],
        [0.2904],
        [0.2904],
        [0.2904],
        [0.2904],
        [0.2904],
        [0.2904],
        [0.3035],
        [0.3035],
        [0.3035],
        [0.2904],
        [0.2904],
        [0.3035],
        [0.3035],
        [0.3035],
        [0.3058],
        [0.2904],
        [0.3035],
        [0.3058],
        [0.3058],
        [0.2904],
        [0.2904],
        [0.2904],
        [0.2904],
        [0.2904],
        [0.3035],
        [0.2904],
        [0.3058],
        [0.2904],
        [0.3035],
        [0.3035],
        [0.3035],
        [0.2904],
        [0.3035],
        [0.3035],
        [0.3058],
        [0.2904],
        [0.3058],
        [0.2904],
        [0.3058],
        [0.2904],
        [0.2904],
        [0.2904],
        [0.2904],
        [0.3035],
        [0.3058],
        [0.2904],
        [0.2904],
        [0.3035],
        [0.3058],
        [0.2904],
        [0.2904],
        [0.3035],
        [0.2904],
        [0.3035]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2614],
        [1.2731],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2731],
        [1.2731],
        [1.2731],
        [1.2614],
        [1.2614],
        [1.2731],
        [1.2731],
        [1.2731],
        [1.2614],
        [1.2614],
        [1.2731],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2731],
        [1.2614],
        [1.2731],
        [1.2614],
        [1.2731],
        [1.2731],
        [1.2731],
        [1.2614],
        [1.2731],
        [1.2731],
        [1.2614],
        [1.2614],
        [1.2731],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2731],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2731],
        [1.2614],
        [1.2614],
        [1.2614],
        [1.2731],
        [1.2614],
        [1.2731],
        [1.2614]])
values:tensor([[ 0.2904],
        [ 0.2904],
        [ 0.3058],
        [ 0.3035],
        [ 0.3035],
        [-0.0165],
        [-0.0048],
        [-0.0048],
        [-0.0130],
        [-0.0165],
        [-0.0130],
        [ 0.3058]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[4.0774],
        [4.0774],
        [3.5716],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [3.5716],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [3.5716],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [3.5716]], grad_fn=<AddmmBackward0>)
patient target:tensor([[4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697],
        [4.6697]])
values:tensor([[4.0774],
        [4.0774],
        [4.0774],
        [3.5716],
        [3.5716],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774],
        [4.0774]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(475.4839, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.0959, grad_fn=<MulBackward0>)]
patient losses: [tensor(475.4839, grad_fn=<MulBackward0>), tensor(2440.5850, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.0959, grad_fn=<MulBackward0>), tensor(5.0745, grad_fn=<MulBackward0>)]
patient losses: [tensor(425.7006, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8012, grad_fn=<MulBackward0>)]
patient losses: [tensor(425.7006, grad_fn=<MulBackward0>), tensor(2884.1873, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8012, grad_fn=<MulBackward0>), tensor(4.3595, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 173.0000000000003

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 173.6000000000003

done: False
patient pred:tensor([[0.3060],
        [0.2914],
        [0.3043],
        [0.2914],
        [0.2914],
        [0.2914],
        [0.2914],
        [0.2914],
        [0.2914],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.2914],
        [0.2914],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.3060],
        [0.2914],
        [0.3043],
        [0.3060],
        [0.3060],
        [0.2914],
        [0.2914],
        [0.2914],
        [0.2914],
        [0.2914],
        [0.3043],
        [0.2914],
        [0.3060],
        [0.2914],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.2914],
        [0.3043],
        [0.3043],
        [0.3060],
        [0.2914],
        [0.3060],
        [0.2914],
        [0.3060],
        [0.2914],
        [0.2914],
        [0.2914],
        [0.2914],
        [0.3043],
        [0.3060],
        [0.2914],
        [0.2914],
        [0.3043],
        [0.3060],
        [0.2914],
        [0.2914],
        [0.3043],
        [0.2914],
        [0.3043],
        [0.3060]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2623],
        [1.2738],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2738],
        [1.2738],
        [1.2738],
        [1.2623],
        [1.2623],
        [1.2738],
        [1.2738],
        [1.2738],
        [1.2623],
        [1.2623],
        [1.2738],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2738],
        [1.2623],
        [1.2738],
        [1.2623],
        [1.2738],
        [1.2738],
        [1.2738],
        [1.2623],
        [1.2738],
        [1.2738],
        [1.2623],
        [1.2623],
        [1.2738],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2738],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2738],
        [1.2623],
        [1.2623],
        [1.2623],
        [1.2738],
        [1.2623],
        [1.2738],
        [1.2623],
        [1.2623]])
values:tensor([[ 0.2914],
        [ 0.2914],
        [ 0.3060],
        [ 0.3043],
        [ 0.3043],
        [-0.0132],
        [-0.0016],
        [-0.0016],
        [-0.0097],
        [-0.0132],
        [-0.0097],
        [ 0.3060]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[-39.9690],
        [-44.2747],
        [-63.1176],
        [ -7.1063],
        [-11.1531],
        [ -7.1063],
        [ -7.1063],
        [-11.1531],
        [-29.8681],
        [ -7.1063],
        [ -7.1063],
        [ -7.1063],
        [-39.9690],
        [-44.2747],
        [ -7.1063],
        [ -7.1063],
        [ -7.1063],
        [ -7.1063],
        [ -7.1063],
        [-11.1531],
        [-29.8681],
        [ -7.1063],
        [-11.1531],
        [-29.8681],
        [ -7.1063],
        [ -7.1063],
        [ -7.1063],
        [-11.1531],
        [-29.8681],
        [ -7.1063],
        [ -7.1063],
        [-11.1531],
        [ -7.1063],
        [-11.1531],
        [ -7.1063],
        [-11.1531],
        [ -7.1063],
        [ -7.1063],
        [-39.9690],
        [-39.9690],
        [-44.2747],
        [-63.1176],
        [-39.9690],
        [ -7.1063],
        [ -7.1063],
        [-11.1531],
        [-39.9690],
        [-39.9690],
        [-44.2747],
        [-39.9690],
        [-44.2747],
        [-63.1176],
        [ -7.1063],
        [-39.9690],
        [ -7.1063],
        [-39.9690],
        [-44.2747],
        [-63.1176],
        [-39.9690],
        [-44.2747]], grad_fn=<AddmmBackward0>)
patient target:tensor([[-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956],
        [-5.3956]])
values:tensor([[-44.2747],
        [-44.2747],
        [-39.9690],
        [-63.1176],
        [-63.1176],
        [-11.1531],
        [ -7.1063],
        [ -7.1063],
        [-29.8680],
        [-11.1531],
        [-29.8680],
        [-39.9690]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(811.0261, grad_fn=<MulBackward0>)]
hasty losses: [tensor(5.3788, grad_fn=<MulBackward0>)]
patient losses: [tensor(811.0261, grad_fn=<MulBackward0>), tensor(2193297., grad_fn=<MulBackward0>)]
hasty losses: [tensor(5.3788, grad_fn=<MulBackward0>), tensor(7.4385, grad_fn=<MulBackward0>)]
patient losses: [tensor(472.3035, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.1371, grad_fn=<MulBackward0>)]
patient losses: [tensor(472.3035, grad_fn=<MulBackward0>), tensor(2209662.5000, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.1371, grad_fn=<MulBackward0>), tensor(4.4716, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 174.2000000000003

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 174.2000000000003

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 174.2000000000003

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 174.2000000000003

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 174.2000000000003

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 174.2000000000003

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 174.8000000000003

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 174.8000000000003

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 174.8000000000003

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 175.4000000000003

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.00000000000028

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.00000000000028

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.00000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.00000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.00000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.00000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.00000000000028

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.00000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.00000000000028

done: False
patient pred:tensor([[0.3032],
        [0.2894],
        [0.3016],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.3016],
        [0.3016],
        [0.3016],
        [0.2894],
        [0.2894],
        [0.3016],
        [0.3016],
        [0.3016],
        [0.3032],
        [0.2894],
        [0.3016],
        [0.3032],
        [0.3032],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.3016],
        [0.2894],
        [0.3032],
        [0.2894],
        [0.3016],
        [0.3016],
        [0.3016],
        [0.2894],
        [0.3016],
        [0.3016],
        [0.3032],
        [0.2894],
        [0.3032],
        [0.2894],
        [0.3032],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.2894],
        [0.3016],
        [0.3032],
        [0.2894],
        [0.2894],
        [0.3016],
        [0.3032],
        [0.2894],
        [0.2894],
        [0.3016],
        [0.2894],
        [0.3016],
        [0.3032]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2605],
        [1.2714],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2714],
        [1.2714],
        [1.2714],
        [1.2605],
        [1.2605],
        [1.2714],
        [1.2714],
        [1.2714],
        [1.2605],
        [1.2605],
        [1.2714],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2714],
        [1.2605],
        [1.2714],
        [1.2605],
        [1.2714],
        [1.2714],
        [1.2714],
        [1.2605],
        [1.2714],
        [1.2714],
        [1.2605],
        [1.2605],
        [1.2714],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2714],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2714],
        [1.2605],
        [1.2605],
        [1.2605],
        [1.2714],
        [1.2605],
        [1.2714],
        [1.2605],
        [1.2605]])
values:tensor([[ 0.2894],
        [ 0.2894],
        [ 0.3032],
        [ 0.3016],
        [ 0.3016],
        [-0.0168],
        [-0.0060],
        [-0.0060],
        [-0.0136],
        [-0.0168],
        [-0.0136],
        [ 0.3032]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1017.0563],
        [1147.3982],
        [1753.9451],
        [  28.7706],
        [  76.6909],
        [  28.7706],
        [  28.7706],
        [  76.6909],
        [ 683.3148],
        [  28.7706],
        [  28.7706],
        [  28.7706],
        [1017.0563],
        [1147.3982],
        [  28.7706],
        [  28.7706],
        [  28.7706],
        [  28.7706],
        [  28.7706],
        [  76.6909],
        [ 683.3148],
        [  28.7706],
        [  76.6909],
        [ 683.3148],
        [  28.7706],
        [  28.7706],
        [  28.7706],
        [  76.6909],
        [ 683.3148],
        [  28.7706],
        [  28.7706],
        [  76.6909],
        [  28.7706],
        [  76.6909],
        [  28.7706],
        [  76.6909],
        [  28.7706],
        [  28.7706],
        [1017.0563],
        [1017.0563],
        [1147.3982],
        [1753.9451],
        [1017.0563],
        [  28.7706],
        [  28.7706],
        [  76.6909],
        [1017.0563],
        [1017.0563],
        [1147.3982],
        [1017.0563],
        [1147.3982],
        [1753.9451],
        [  28.7706],
        [1017.0563],
        [  28.7706],
        [1017.0563],
        [1147.3982],
        [1753.9451],
        [1017.0563],
        [1147.3982],
        [1017.0563],
        [  28.7706],
        [  76.6909],
        [ 683.3148],
        [  28.7706],
        [  76.6909],
        [  28.7706]], grad_fn=<AddmmBackward0>)
patient target:tensor([[26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935],
        [26.8935]])
values:tensor([[1147.3982],
        [1147.3982],
        [1017.0563],
        [1753.9449],
        [1753.9449],
        [  76.6909],
        [  28.7706],
        [  28.7706],
        [ 683.3147],
        [  76.6909],
        [ 683.3147],
        [1017.0563]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(3406.9133, grad_fn=<MulBackward0>)]
hasty losses: [tensor(25.2189, grad_fn=<MulBackward0>)]
patient losses: [tensor(3406.9133, grad_fn=<MulBackward0>), tensor(1526.5458, grad_fn=<MulBackward0>)]
hasty losses: [tensor(25.2189, grad_fn=<MulBackward0>), tensor(36.6978, grad_fn=<MulBackward0>)]
patient losses: [tensor(368.5020, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.7579, grad_fn=<MulBackward0>)]
patient losses: [tensor(368.5020, grad_fn=<MulBackward0>), tensor(176.1951, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.7579, grad_fn=<MulBackward0>), tensor(4.3096, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 176.60000000000028

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.20000000000027

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.20000000000027

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.20000000000027

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.20000000000027

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.20000000000027

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.20000000000027

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.20000000000027

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.20000000000027

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.20000000000027

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.80000000000027

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 177.80000000000027

done: False
patient pred:tensor([[0.3049],
        [0.2919],
        [0.3035],
        [0.2919],
        [0.2919],
        [0.2919],
        [0.2919],
        [0.2919],
        [0.2919],
        [0.3035],
        [0.3035],
        [0.3035],
        [0.2919],
        [0.2919],
        [0.3035],
        [0.3035],
        [0.3035],
        [0.3049],
        [0.2919],
        [0.3035],
        [0.3049],
        [0.3049],
        [0.2919],
        [0.2919],
        [0.2919],
        [0.2919],
        [0.2919],
        [0.3035],
        [0.2919],
        [0.3049],
        [0.2919],
        [0.3035],
        [0.3035],
        [0.3035],
        [0.2919],
        [0.3035],
        [0.3035],
        [0.3049],
        [0.2919],
        [0.3049],
        [0.2919],
        [0.3049],
        [0.2919],
        [0.2919],
        [0.2919],
        [0.2919],
        [0.3035],
        [0.3049],
        [0.2919],
        [0.2919],
        [0.3035],
        [0.3049],
        [0.2919],
        [0.2919],
        [0.3035],
        [0.2919],
        [0.3035],
        [0.3049]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2627],
        [1.2731],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2731],
        [1.2731],
        [1.2731],
        [1.2627],
        [1.2627],
        [1.2731],
        [1.2731],
        [1.2731],
        [1.2627],
        [1.2627],
        [1.2731],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2731],
        [1.2627],
        [1.2731],
        [1.2627],
        [1.2731],
        [1.2731],
        [1.2731],
        [1.2627],
        [1.2731],
        [1.2731],
        [1.2627],
        [1.2627],
        [1.2731],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2731],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2731],
        [1.2627],
        [1.2627],
        [1.2627],
        [1.2731],
        [1.2627],
        [1.2731],
        [1.2627],
        [1.2627]])
values:tensor([[ 0.2919],
        [ 0.2919],
        [ 0.3049],
        [ 0.3035],
        [ 0.3035],
        [-0.0143],
        [-0.0042],
        [-0.0042],
        [-0.0114],
        [-0.0143],
        [-0.0114],
        [ 0.3049]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377],
        [2.8377]])
values:tensor([[2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419],
        [2.0419]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(120.0657, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.9613, grad_fn=<MulBackward0>)]
patient losses: [tensor(120.0657, grad_fn=<MulBackward0>), tensor(50.7322, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.9613, grad_fn=<MulBackward0>), tensor(1.2961, grad_fn=<MulBackward0>)]
patient losses: [tensor(393.0115, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.1662, grad_fn=<MulBackward0>)]
patient losses: [tensor(393.0115, grad_fn=<MulBackward0>), tensor(177.9929, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.1662, grad_fn=<MulBackward0>), tensor(4.5554, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 178.40000000000026

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 179.00000000000026

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 179.60000000000025

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 179.60000000000025

done: False
patient pred:tensor([[0.3039],
        [0.2913],
        [0.3026],
        [0.2913],
        [0.2913],
        [0.2913],
        [0.2913],
        [0.2913],
        [0.2913],
        [0.3026],
        [0.3026],
        [0.3026],
        [0.2913],
        [0.2913],
        [0.3026],
        [0.3026],
        [0.3026],
        [0.3039],
        [0.2913],
        [0.3026],
        [0.3039],
        [0.3039],
        [0.2913],
        [0.2913],
        [0.2913],
        [0.2913],
        [0.2913],
        [0.3026],
        [0.2913],
        [0.3039],
        [0.2913],
        [0.3026],
        [0.3026],
        [0.3026],
        [0.2913],
        [0.3026],
        [0.3026],
        [0.3039],
        [0.2913],
        [0.3039],
        [0.2913],
        [0.3039],
        [0.2913],
        [0.2913],
        [0.2913],
        [0.2913],
        [0.3026],
        [0.3039],
        [0.2913],
        [0.2913],
        [0.3026],
        [0.3039],
        [0.2913],
        [0.2913],
        [0.3026],
        [0.2913],
        [0.3026],
        [0.3039]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2621],
        [1.2724],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2724],
        [1.2724],
        [1.2724],
        [1.2621],
        [1.2621],
        [1.2724],
        [1.2724],
        [1.2724],
        [1.2621],
        [1.2621],
        [1.2724],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2724],
        [1.2621],
        [1.2724],
        [1.2621],
        [1.2724],
        [1.2724],
        [1.2724],
        [1.2621],
        [1.2724],
        [1.2724],
        [1.2621],
        [1.2621],
        [1.2724],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2724],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2724],
        [1.2621],
        [1.2621],
        [1.2621],
        [1.2724],
        [1.2621],
        [1.2724],
        [1.2621],
        [1.2621]])
values:tensor([[ 0.2913],
        [ 0.2913],
        [ 0.3039],
        [ 0.3026],
        [ 0.3026],
        [-0.0157],
        [-0.0063],
        [-0.0063],
        [-0.0129],
        [-0.0157],
        [-0.0129],
        [ 0.3039]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250]], grad_fn=<AddmmBackward0>)
patient target:tensor([[3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725],
        [3.2725]])
values:tensor([[2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250],
        [2.5250]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(1183.3096, grad_fn=<MulBackward0>)]
hasty losses: [tensor(9.9449, grad_fn=<MulBackward0>)]
patient losses: [tensor(1183.3096, grad_fn=<MulBackward0>), tensor(578.5963, grad_fn=<MulBackward0>)]
hasty losses: [tensor(9.9449, grad_fn=<MulBackward0>), tensor(15.4990, grad_fn=<MulBackward0>)]
patient losses: [tensor(319.7147, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.7116, grad_fn=<MulBackward0>)]
patient losses: [tensor(319.7147, grad_fn=<MulBackward0>), tensor(155.8104, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.7116, grad_fn=<MulBackward0>), tensor(4.2288, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 180.00000000000026

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 180.40000000000026

Score (8/10): 0.20000000000000007 (recent)   0.22550000000000034 (average)
game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 180.80000000000027

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 181.20000000000027

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 181.60000000000028

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 182.00000000000028

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 182.60000000000028

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5314410000000002, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 183.20000000000027

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5314410000000002, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 183.80000000000027

done: False
patient pred:tensor([[0.3056],
        [0.2940],
        [0.3050],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.3050],
        [0.3050],
        [0.3050],
        [0.2940],
        [0.2940],
        [0.3050],
        [0.3050],
        [0.3050],
        [0.3056],
        [0.2940],
        [0.3050],
        [0.3056],
        [0.3056],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.3050],
        [0.2940],
        [0.3056],
        [0.2940],
        [0.3050],
        [0.3050],
        [0.3050],
        [0.2940],
        [0.3050],
        [0.3050],
        [0.3056],
        [0.2940],
        [0.3056],
        [0.2940],
        [0.3056],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.3050],
        [0.3056],
        [0.2940],
        [0.2940],
        [0.3050],
        [0.3056],
        [0.2940],
        [0.2940],
        [0.3050],
        [0.2940],
        [0.3050],
        [0.3056],
        [0.3056],
        [0.2940],
        [0.3050],
        [0.2940],
        [0.2940],
        [0.3050]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2646],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2745],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2745],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2646],
        [1.2745],
        [1.2646],
        [1.2745],
        [1.2745],
        [1.2745],
        [1.2646],
        [1.2745],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2646],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2646],
        [1.2646],
        [1.2745],
        [1.2646]])
values:tensor([[ 0.2940],
        [ 0.2940],
        [ 0.3056],
        [ 0.3050],
        [ 0.3050],
        [-0.0077],
        [ 0.0023],
        [ 0.0023],
        [-0.0051],
        [-0.0077],
        [-0.0051],
        [ 0.3056]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328],
        [2.9328]])
values:tensor([[2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475],
        [2.1475]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(109.6211, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.9663, grad_fn=<MulBackward0>)]
patient losses: [tensor(109.6211, grad_fn=<MulBackward0>), tensor(46.5370, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.9663, grad_fn=<MulBackward0>), tensor(1.3584, grad_fn=<MulBackward0>)]
patient losses: [tensor(373.2444, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.3168, grad_fn=<MulBackward0>)]
patient losses: [tensor(373.2444, grad_fn=<MulBackward0>), tensor(169.0068, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.3168, grad_fn=<MulBackward0>), tensor(4.7644, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 184.20000000000027

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 184.60000000000028

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 185.00000000000028

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 185.4000000000003

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 185.8000000000003

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 186.2000000000003

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 186.6000000000003

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.43046721000000016, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 187.0000000000003

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.38742048900000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 187.40000000000032

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.34867844010000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 187.80000000000032

done: False
patient pred:tensor([[0.2995],
        [0.2885],
        [0.2990],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2885],
        [0.2885],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2995],
        [0.2885],
        [0.2990],
        [0.2995],
        [0.2995],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2990],
        [0.2885],
        [0.2995],
        [0.2885],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2885],
        [0.2990],
        [0.2990],
        [0.2995],
        [0.2885],
        [0.2995],
        [0.2885],
        [0.2995],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2885],
        [0.2990],
        [0.2995],
        [0.2885],
        [0.2885],
        [0.2990],
        [0.2995],
        [0.2885],
        [0.2885],
        [0.2990],
        [0.2885],
        [0.2990],
        [0.2995],
        [0.2995],
        [0.2885],
        [0.2990],
        [0.2885],
        [0.2885],
        [0.2990],
        [0.2995],
        [0.2885],
        [0.2990],
        [0.2990],
        [0.2990],
        [0.2885],
        [0.2885],
        [0.2990],
        [0.2990],
        [0.2990]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2597],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2597],
        [1.2691],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2597],
        [1.2597],
        [1.2691],
        [1.2691],
        [1.2691],
        [1.2691]])
values:tensor([[ 0.2885],
        [ 0.2885],
        [ 0.2995],
        [ 0.2990],
        [ 0.2990],
        [-0.0171],
        [-0.0080],
        [-0.0080],
        [-0.0148],
        [-0.0171],
        [-0.0148],
        [ 0.2995]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816],
        [2.9816]])
values:tensor([[2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018],
        [2.2018]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(1105.3535, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.5200, grad_fn=<MulBackward0>)]
patient losses: [tensor(1105.3535, grad_fn=<MulBackward0>), tensor(542.6215, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.5200, grad_fn=<MulBackward0>), tensor(16.3363, grad_fn=<MulBackward0>)]
patient losses: [tensor(294.3380, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8227, grad_fn=<MulBackward0>)]
patient losses: [tensor(294.3380, grad_fn=<MulBackward0>), tensor(143.9704, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8227, grad_fn=<MulBackward0>), tensor(4.3835, grad_fn=<MulBackward0>)]
done: False
patient pred:tensor([[0.3043],
        [0.2938],
        [0.3043],
        [0.2938],
        [0.2938],
        [0.2938],
        [0.2938],
        [0.2938],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.2938],
        [0.2938],
        [0.2938],
        [0.2938],
        [0.3043],
        [0.2938],
        [0.3043],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.3043],
        [0.2938],
        [0.3043],
        [0.2938],
        [0.2938],
        [0.2938],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.2938],
        [0.3043],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.3043],
        [0.2938],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.3043],
        [0.2938],
        [0.2938],
        [0.3043],
        [0.3043],
        [0.3043]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2644],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2739],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2739],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2739],
        [1.2739],
        [1.2739],
        [1.2644],
        [1.2739],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2739],
        [1.2739],
        [1.2644],
        [1.2644],
        [1.2739],
        [1.2739],
        [1.2739],
        [1.2739]])
values:tensor([[ 0.2938],
        [ 0.2938],
        [ 0.3043],
        [ 0.3043],
        [ 0.3043],
        [-0.0116],
        [-0.0030],
        [-0.0030],
        [-0.0094],
        [-0.0116],
        [-0.0094],
        [ 0.3043]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554],
        [2.9554]])
values:tensor([[2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727],
        [2.1727]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(103.5537, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.9681, grad_fn=<MulBackward0>)]
patient losses: [tensor(103.5537, grad_fn=<MulBackward0>), tensor(44.1412, grad_fn=<MulBackward0>)]
hasty losses: [tensor(0.9681, grad_fn=<MulBackward0>), tensor(1.3620, grad_fn=<MulBackward0>)]
patient losses: [tensor(357.9653, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.3828, grad_fn=<MulBackward0>)]
patient losses: [tensor(357.9653, grad_fn=<MulBackward0>), tensor(162.7860, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.3828, grad_fn=<MulBackward0>), tensor(4.8610, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 188.20000000000033

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 188.60000000000034

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 189.00000000000034

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 189.60000000000034

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.7290000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 190.20000000000033

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 190.20000000000033

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 190.20000000000033

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 190.20000000000033

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 190.20000000000033

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.7290000000000001, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 190.20000000000033

done: False
patient pred:tensor([[0.3018],
        [0.2920],
        [0.3023],
        [0.2920],
        [0.2920],
        [0.2920],
        [0.2920],
        [0.2920],
        [0.2920],
        [0.3023],
        [0.3023],
        [0.3023],
        [0.2920],
        [0.2920],
        [0.3023],
        [0.3023],
        [0.3023],
        [0.3018],
        [0.2920],
        [0.3023],
        [0.3018],
        [0.3018],
        [0.2920],
        [0.2920],
        [0.2920],
        [0.2920],
        [0.2920],
        [0.3023],
        [0.2920],
        [0.3018],
        [0.2920],
        [0.3023],
        [0.3023],
        [0.3023],
        [0.2920],
        [0.3023],
        [0.3023],
        [0.3018],
        [0.2920],
        [0.3018],
        [0.2920],
        [0.3018],
        [0.2920],
        [0.2920],
        [0.2920],
        [0.2920],
        [0.3023],
        [0.3018],
        [0.2920],
        [0.2920],
        [0.3023],
        [0.3018],
        [0.2920],
        [0.2920],
        [0.3023],
        [0.2920],
        [0.3023],
        [0.3018],
        [0.3018],
        [0.2920],
        [0.3023],
        [0.2920],
        [0.2920],
        [0.3023],
        [0.3018],
        [0.2920],
        [0.3023],
        [0.3023],
        [0.3023],
        [0.2920],
        [0.2920],
        [0.3023],
        [0.3023],
        [0.3023],
        [0.3018],
        [0.2920],
        [0.3023]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2628],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2721],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2721],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2721],
        [1.2721],
        [1.2721],
        [1.2628],
        [1.2721],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2721],
        [1.2721],
        [1.2628],
        [1.2628],
        [1.2721],
        [1.2721],
        [1.2721],
        [1.2721],
        [1.2628],
        [1.2721],
        [1.2628]])
values:tensor([[ 0.2920],
        [ 0.2920],
        [ 0.3018],
        [ 0.3023],
        [ 0.3023],
        [-0.0155],
        [-0.0075],
        [-0.0075],
        [-0.0134],
        [-0.0155],
        [-0.0134],
        [ 0.3018]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694],
        [2.9694]])
values:tensor([[2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883],
        [2.1883]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(1060.8236, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.7016, grad_fn=<MulBackward0>)]
patient losses: [tensor(1060.8236, grad_fn=<MulBackward0>), tensor(523.2466, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.7016, grad_fn=<MulBackward0>), tensor(16.6455, grad_fn=<MulBackward0>)]
patient losses: [tensor(281.2745, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8558, grad_fn=<MulBackward0>)]
patient losses: [tensor(281.2745, grad_fn=<MulBackward0>), tensor(139.1395, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8558, grad_fn=<MulBackward0>), tensor(4.4715, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 190.60000000000034

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 191.00000000000034

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 191.40000000000035

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 191.80000000000035

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 192.20000000000036

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 192.60000000000036

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.47829690000000014, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 193.00000000000037

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.43046721000000016, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 193.40000000000038

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.38742048900000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 193.80000000000038

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.34867844010000015, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 194.2000000000004

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.31381059609000017, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 194.6000000000004

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.28242953648100017, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 195.0000000000004

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.25418658283290013, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 195.4000000000004

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.22876792454961012, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 195.8000000000004

done: False
patient pred:tensor([[0.3036],
        [0.2944],
        [0.3046],
        [0.2944],
        [0.2944],
        [0.2944],
        [0.2944],
        [0.2944],
        [0.2944],
        [0.3046],
        [0.3046],
        [0.3046],
        [0.2944],
        [0.2944],
        [0.3046],
        [0.3046],
        [0.3046],
        [0.3036],
        [0.2944],
        [0.3046],
        [0.3036],
        [0.3036],
        [0.2944],
        [0.2944],
        [0.2944],
        [0.2944],
        [0.2944],
        [0.3046],
        [0.2944],
        [0.3036],
        [0.2944],
        [0.3046],
        [0.3046],
        [0.3046],
        [0.2944],
        [0.3046],
        [0.3046],
        [0.3036],
        [0.2944],
        [0.3036],
        [0.2944],
        [0.3036],
        [0.2944],
        [0.2944],
        [0.2944],
        [0.2944],
        [0.3046],
        [0.3036],
        [0.2944],
        [0.2944],
        [0.3046],
        [0.3036],
        [0.2944],
        [0.2944],
        [0.3046],
        [0.2944],
        [0.3046],
        [0.3036],
        [0.3036],
        [0.2944],
        [0.3046],
        [0.2944],
        [0.2944],
        [0.3046],
        [0.3036],
        [0.2944],
        [0.3046],
        [0.3046],
        [0.3046],
        [0.2944],
        [0.2944],
        [0.3046],
        [0.3046],
        [0.3046],
        [0.3036],
        [0.2944],
        [0.3046],
        [0.3036],
        [0.2944],
        [0.3046],
        [0.3046],
        [0.2944],
        [0.3046],
        [0.3046],
        [0.3046],
        [0.2944],
        [0.3046],
        [0.2944],
        [0.2944],
        [0.3046],
        [0.3046]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2742],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2742],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2742],
        [1.2742],
        [1.2742],
        [1.2649],
        [1.2742],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2742],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2742],
        [1.2742],
        [1.2742],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2742],
        [1.2649],
        [1.2742],
        [1.2742],
        [1.2742],
        [1.2649],
        [1.2742],
        [1.2649],
        [1.2649],
        [1.2742],
        [1.2742],
        [1.2649]])
values:tensor([[ 0.2944],
        [ 0.2944],
        [ 0.3036],
        [ 0.3046],
        [ 0.3046],
        [-0.0134],
        [-0.0059],
        [-0.0059],
        [-0.0113],
        [-0.0134],
        [-0.0113],
        [ 0.3036]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596],
        [2.8596]])
values:tensor([[2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662],
        [2.0662]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(94.0161, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.0324, grad_fn=<MulBackward0>)]
patient losses: [tensor(94.0161, grad_fn=<MulBackward0>), tensor(40.0418, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.0324, grad_fn=<MulBackward0>), tensor(1.3766, grad_fn=<MulBackward0>)]
patient losses: [tensor(329.4982, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.5279, grad_fn=<MulBackward0>)]
patient losses: [tensor(329.4982, grad_fn=<MulBackward0>), tensor(149.5749, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.5279, grad_fn=<MulBackward0>), tensor(4.9924, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 196.20000000000041

done: False
patient pred:tensor([[0.3027],
        [0.2940],
        [0.3045],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.3045],
        [0.3045],
        [0.3045],
        [0.2940],
        [0.2940],
        [0.3045],
        [0.3045],
        [0.3045],
        [0.3027],
        [0.2940],
        [0.3045],
        [0.3027],
        [0.3027],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.3045],
        [0.2940],
        [0.3027],
        [0.2940],
        [0.3045],
        [0.3045],
        [0.3045],
        [0.2940],
        [0.3045],
        [0.3045],
        [0.3027],
        [0.2940],
        [0.3027],
        [0.2940],
        [0.3027],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.2940],
        [0.3045],
        [0.3027],
        [0.2940],
        [0.2940],
        [0.3045],
        [0.3027],
        [0.2940],
        [0.2940],
        [0.3045],
        [0.2940],
        [0.3045],
        [0.3027],
        [0.3027],
        [0.2940],
        [0.3045],
        [0.2940],
        [0.2940],
        [0.3045],
        [0.3027],
        [0.2940],
        [0.3045],
        [0.3045],
        [0.3045],
        [0.2940],
        [0.2940],
        [0.3045],
        [0.3045],
        [0.3045],
        [0.3027],
        [0.2940],
        [0.3045],
        [0.3027],
        [0.2940],
        [0.3045],
        [0.3045],
        [0.2940],
        [0.3045],
        [0.3045],
        [0.3045],
        [0.2940],
        [0.3045],
        [0.2940],
        [0.2940],
        [0.3045],
        [0.3045],
        [0.3027]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2646],
        [1.2740],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2740],
        [1.2646],
        [1.2740],
        [1.2740],
        [1.2740],
        [1.2646],
        [1.2740],
        [1.2646],
        [1.2646],
        [1.2740],
        [1.2740],
        [1.2646],
        [1.2646]])
values:tensor([[ 0.2940],
        [ 0.2940],
        [ 0.3027],
        [ 0.3045],
        [ 0.3045],
        [-0.0148],
        [-0.0078],
        [-0.0078],
        [-0.0128],
        [-0.0148],
        [-0.0128],
        [ 0.3027]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169],
        [2.9169]])
values:tensor([[2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299],
        [2.1299]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(1004.1541, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.8881, grad_fn=<MulBackward0>)]
patient losses: [tensor(1004.1541, grad_fn=<MulBackward0>), tensor(498.9473, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.8881, grad_fn=<MulBackward0>), tensor(16.9229, grad_fn=<MulBackward0>)]
patient losses: [tensor(263.9109, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8753, grad_fn=<MulBackward0>)]
patient losses: [tensor(263.9109, grad_fn=<MulBackward0>), tensor(131.9270, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8753, grad_fn=<MulBackward0>), tensor(4.5172, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 196.60000000000042

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 197.00000000000043

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 197.40000000000043

done: False
patient pred:tensor([[0.3037],
        [0.2954],
        [0.3060],
        [0.2954],
        [0.2954],
        [0.2954],
        [0.2954],
        [0.2954],
        [0.2954],
        [0.3060],
        [0.3060],
        [0.3060],
        [0.2954],
        [0.2954],
        [0.3060],
        [0.3060],
        [0.3060],
        [0.3037],
        [0.2954],
        [0.3060],
        [0.3037],
        [0.3037],
        [0.2954],
        [0.2954],
        [0.2954],
        [0.2954],
        [0.2954],
        [0.3060],
        [0.2954],
        [0.3037],
        [0.2954],
        [0.3060],
        [0.3060],
        [0.3060],
        [0.2954],
        [0.3060],
        [0.3060],
        [0.3037],
        [0.2954],
        [0.3037],
        [0.2954],
        [0.3037],
        [0.2954],
        [0.2954],
        [0.2954],
        [0.2954],
        [0.3060],
        [0.3037],
        [0.2954],
        [0.2954],
        [0.3060],
        [0.3037],
        [0.2954],
        [0.2954],
        [0.3060],
        [0.2954],
        [0.3060],
        [0.3037],
        [0.3037],
        [0.2954],
        [0.3060],
        [0.2954],
        [0.2954],
        [0.3060],
        [0.3037],
        [0.2954],
        [0.3060],
        [0.3060],
        [0.3060],
        [0.2954],
        [0.2954],
        [0.3060],
        [0.3060],
        [0.3060],
        [0.3037],
        [0.2954],
        [0.3060],
        [0.3037],
        [0.2954],
        [0.3060],
        [0.3060],
        [0.2954],
        [0.3060],
        [0.3060],
        [0.3060],
        [0.2954],
        [0.3060],
        [0.2954],
        [0.2954],
        [0.3060],
        [0.3060],
        [0.3037],
        [0.3037],
        [0.2954],
        [0.3060]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2754],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2754],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2754],
        [1.2754],
        [1.2754],
        [1.2659],
        [1.2754],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2754],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2754],
        [1.2754],
        [1.2754],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2754],
        [1.2659],
        [1.2754],
        [1.2754],
        [1.2754],
        [1.2659],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2754],
        [1.2659],
        [1.2659],
        [1.2659],
        [1.2754],
        [1.2754]])
values:tensor([[ 0.2954],
        [ 0.2954],
        [ 0.3037],
        [ 0.3060],
        [ 0.3060],
        [-0.0127],
        [-0.0062],
        [-0.0062],
        [-0.0108],
        [-0.0127],
        [-0.0108],
        [ 0.3037]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870],
        [2.8870]])
values:tensor([[2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967],
        [2.0967]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(92.5085, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.0435, grad_fn=<MulBackward0>)]
patient losses: [tensor(92.5085, grad_fn=<MulBackward0>), tensor(39.3718, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.0435, grad_fn=<MulBackward0>), tensor(1.3927, grad_fn=<MulBackward0>)]
patient losses: [tensor(325.5287, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.5936, grad_fn=<MulBackward0>)]
patient losses: [tensor(325.5287, grad_fn=<MulBackward0>), tensor(147.4848, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.5936, grad_fn=<MulBackward0>), tensor(5.0728, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.00000000000043

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.00000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.00000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 198.60000000000042

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 199.20000000000041

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 199.8000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 200.4000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 200.4000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 200.4000000000004

done: False
patient pred:tensor([[0.3019],
        [0.2942],
        [0.3041],
        [0.2942],
        [0.2942],
        [0.2942],
        [0.2942],
        [0.2942],
        [0.2942],
        [0.3041],
        [0.3041],
        [0.3041],
        [0.2942],
        [0.2942],
        [0.3041],
        [0.3041],
        [0.3041],
        [0.3019],
        [0.2942],
        [0.3041],
        [0.3019],
        [0.3019],
        [0.2942],
        [0.2942],
        [0.2942],
        [0.2942],
        [0.2942],
        [0.3041],
        [0.2942],
        [0.3019],
        [0.2942],
        [0.3041],
        [0.3041],
        [0.3041],
        [0.2942],
        [0.3041],
        [0.3041],
        [0.3019],
        [0.2942],
        [0.3019],
        [0.2942],
        [0.3019],
        [0.2942],
        [0.2942],
        [0.2942],
        [0.2942],
        [0.3041],
        [0.3019],
        [0.2942],
        [0.2942],
        [0.3041],
        [0.3019],
        [0.2942],
        [0.2942],
        [0.3041],
        [0.2942],
        [0.3041],
        [0.3019],
        [0.3019],
        [0.2942],
        [0.3041],
        [0.2942],
        [0.2942],
        [0.3041],
        [0.3019],
        [0.2942],
        [0.3041],
        [0.3041],
        [0.3041],
        [0.2942],
        [0.2942],
        [0.3041],
        [0.3041],
        [0.3041],
        [0.3019],
        [0.2942],
        [0.3041],
        [0.3019],
        [0.2942],
        [0.3041],
        [0.3041],
        [0.2942],
        [0.3041],
        [0.3041],
        [0.3041],
        [0.2942],
        [0.3041],
        [0.2942],
        [0.2942],
        [0.3041],
        [0.3041],
        [0.3019],
        [0.3019],
        [0.2942],
        [0.3041]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2737],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2737],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2737],
        [1.2737],
        [1.2737],
        [1.2648],
        [1.2737],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2737],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2737],
        [1.2737],
        [1.2737],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2737],
        [1.2648],
        [1.2737],
        [1.2737],
        [1.2737],
        [1.2648],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2737],
        [1.2648],
        [1.2648],
        [1.2648],
        [1.2737],
        [1.2737]])
values:tensor([[ 0.2942],
        [ 0.2942],
        [ 0.3019],
        [ 0.3041],
        [ 0.3041],
        [-0.0152],
        [-0.0094],
        [-0.0094],
        [-0.0133],
        [-0.0152],
        [-0.0133],
        [ 0.3019]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026],
        [2.9026]])
values:tensor([[2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140],
        [2.1140]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(932.6007, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.9825, grad_fn=<MulBackward0>)]
patient losses: [tensor(932.6007, grad_fn=<MulBackward0>), tensor(465.9472, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.9825, grad_fn=<MulBackward0>), tensor(17.0258, grad_fn=<MulBackward0>)]
patient losses: [tensor(245.1343, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8937, grad_fn=<MulBackward0>)]
patient losses: [tensor(245.1343, grad_fn=<MulBackward0>), tensor(123.2794, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8937, grad_fn=<MulBackward0>), tensor(4.5375, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 200.8000000000004

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 201.4000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 201.4000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 201.4000000000004

done: False
patient pred:tensor([[0.3034],
        [0.2962],
        [0.3062],
        [0.2962],
        [0.2962],
        [0.2962],
        [0.2962],
        [0.2962],
        [0.2962],
        [0.3062],
        [0.3062],
        [0.3062],
        [0.2962],
        [0.2962],
        [0.3062],
        [0.3062],
        [0.3062],
        [0.3034],
        [0.2962],
        [0.3062],
        [0.3034],
        [0.3034],
        [0.2962],
        [0.2962],
        [0.2962],
        [0.2962],
        [0.2962],
        [0.3062],
        [0.2962],
        [0.3034],
        [0.2962],
        [0.3062],
        [0.3062],
        [0.3062],
        [0.2962],
        [0.3062],
        [0.3062],
        [0.3034],
        [0.2962],
        [0.3034],
        [0.2962],
        [0.3034],
        [0.2962],
        [0.2962],
        [0.2962],
        [0.2962],
        [0.3062],
        [0.3034],
        [0.2962],
        [0.2962],
        [0.3062],
        [0.3034],
        [0.2962],
        [0.2962],
        [0.3062],
        [0.2962],
        [0.3062],
        [0.3034],
        [0.3034],
        [0.2962],
        [0.3062],
        [0.2962],
        [0.2962],
        [0.3062],
        [0.3034],
        [0.2962],
        [0.3062],
        [0.3062],
        [0.3062],
        [0.2962],
        [0.2962],
        [0.3062],
        [0.3062],
        [0.3062],
        [0.3034],
        [0.2962],
        [0.3062],
        [0.3034],
        [0.2962],
        [0.3062],
        [0.3062],
        [0.2962],
        [0.3062],
        [0.3062],
        [0.3062],
        [0.2962],
        [0.3062],
        [0.2962],
        [0.2962],
        [0.3062],
        [0.3062],
        [0.3034],
        [0.3034],
        [0.2962],
        [0.3062],
        [0.3034]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2756],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2756],
        [1.2756],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2756],
        [1.2666],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2666],
        [1.2666],
        [1.2666],
        [1.2756],
        [1.2756],
        [1.2666]])
values:tensor([[ 0.2962],
        [ 0.2962],
        [ 0.3034],
        [ 0.3062],
        [ 0.3062],
        [-0.0133],
        [-0.0079],
        [-0.0079],
        [-0.0115],
        [-0.0133],
        [-0.0115],
        [ 0.3034]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037],
        [2.7037]])
values:tensor([[1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930],
        [1.8930]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(85.9313, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.0496, grad_fn=<MulBackward0>)]
patient losses: [tensor(85.9313, grad_fn=<MulBackward0>), tensor(36.9826, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.0496, grad_fn=<MulBackward0>), tensor(1.4116, grad_fn=<MulBackward0>)]
patient losses: [tensor(301.7459, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.6269, grad_fn=<MulBackward0>)]
patient losses: [tensor(301.7459, grad_fn=<MulBackward0>), tensor(138.1237, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.6269, grad_fn=<MulBackward0>), tensor(5.1416, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 201.8000000000004

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 202.20000000000041

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 202.60000000000042

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.6561000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 203.00000000000043

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5904900000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 203.40000000000043

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.5314410000000002, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 203.80000000000044

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.5314410000000002, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.40000000000043

done: False
patient pred:tensor([[0.3024],
        [0.2957],
        [0.3058],
        [0.2957],
        [0.2957],
        [0.2957],
        [0.2957],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.3058],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.3058],
        [0.3024],
        [0.2957],
        [0.3058],
        [0.3024],
        [0.3024],
        [0.2957],
        [0.2957],
        [0.2957],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.2957],
        [0.3024],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.3058],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.3024],
        [0.2957],
        [0.3024],
        [0.2957],
        [0.3024],
        [0.2957],
        [0.2957],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.3024],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.3024],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.2957],
        [0.3058],
        [0.3024],
        [0.3024],
        [0.2957],
        [0.3058],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.3024],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.3058],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.3058],
        [0.3024],
        [0.2957],
        [0.3058],
        [0.3024],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.3058],
        [0.2957],
        [0.3058],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.3024],
        [0.3024],
        [0.2957],
        [0.3058],
        [0.3024],
        [0.3024],
        [0.2957],
        [0.2957],
        [0.3058],
        [0.3058],
        [0.3058]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2661],
        [1.2661],
        [1.2661],
        [1.2752],
        [1.2752],
        [1.2752],
        [1.2661]])
values:tensor([[ 0.2957],
        [ 0.2957],
        [ 0.3024],
        [ 0.3058],
        [ 0.3058],
        [-0.0146],
        [-0.0096],
        [-0.0096],
        [-0.0128],
        [-0.0146],
        [-0.0128],
        [ 0.3024]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608],
        [2.7608]])
values:tensor([[1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564],
        [1.9564]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(842.4788, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.7787, grad_fn=<MulBackward0>)]
patient losses: [tensor(842.4788, grad_fn=<MulBackward0>), tensor(434.4182, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.7787, grad_fn=<MulBackward0>), tensor(16.7197, grad_fn=<MulBackward0>)]
patient losses: [tensor(222.3956, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8493, grad_fn=<MulBackward0>)]
patient losses: [tensor(222.3956, grad_fn=<MulBackward0>), tensor(115.6492, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8493, grad_fn=<MulBackward0>), tensor(4.4793, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 204.80000000000044

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 205.20000000000044

game_state: 0
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.7290000000000001, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 205.60000000000045

done: False
patient pred:tensor([[0.3031],
        [0.2966],
        [0.3069],
        [0.2966],
        [0.2966],
        [0.2966],
        [0.2966],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.3069],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.3069],
        [0.3031],
        [0.2966],
        [0.3069],
        [0.3031],
        [0.3031],
        [0.2966],
        [0.2966],
        [0.2966],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.2966],
        [0.3031],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.3069],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.3031],
        [0.2966],
        [0.3031],
        [0.2966],
        [0.3031],
        [0.2966],
        [0.2966],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.3031],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.3031],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.2966],
        [0.3069],
        [0.3031],
        [0.3031],
        [0.2966],
        [0.3069],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.3031],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.3069],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.3069],
        [0.3031],
        [0.2966],
        [0.3069],
        [0.3031],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.3069],
        [0.2966],
        [0.3069],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.3031],
        [0.3031],
        [0.2966],
        [0.3069],
        [0.3031],
        [0.3031],
        [0.2966],
        [0.2966],
        [0.3069],
        [0.3069],
        [0.3069],
        [0.3031],
        [0.2966],
        [0.3069]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2762],
        [1.2762],
        [1.2669],
        [1.2669],
        [1.2762],
        [1.2669]])
values:tensor([[ 0.2966],
        [ 0.2966],
        [ 0.3031],
        [ 0.3069],
        [ 0.3069],
        [-0.0137],
        [-0.0092],
        [-0.0092],
        [-0.0121],
        [-0.0137],
        [-0.0121],
        [ 0.3031]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762],
        [2.6762]])
values:tensor([[1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624],
        [1.8624]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(79.2055, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.0388, grad_fn=<MulBackward0>)]
patient losses: [tensor(79.2055, grad_fn=<MulBackward0>), tensor(35.2698, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.0388, grad_fn=<MulBackward0>), tensor(1.4043, grad_fn=<MulBackward0>)]
patient losses: [tensor(276.5161, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.5805, grad_fn=<MulBackward0>)]
patient losses: [tensor(276.5161, grad_fn=<MulBackward0>), tensor(130.3203, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.5805, grad_fn=<MulBackward0>), tensor(5.0732, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 206.00000000000045

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 206.60000000000045

Score (9/10): 0.262 (recent)   0.22955555555555607 (average)
game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 207.20000000000044

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 207.20000000000044

done: False
patient pred:tensor([[0.3022],
        [0.2963],
        [0.3061],
        [0.2963],
        [0.2963],
        [0.2963],
        [0.2963],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.3061],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.3061],
        [0.3022],
        [0.2963],
        [0.3061],
        [0.3022],
        [0.3022],
        [0.2963],
        [0.2963],
        [0.2963],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.2963],
        [0.3022],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.3061],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.3022],
        [0.2963],
        [0.3022],
        [0.2963],
        [0.3022],
        [0.2963],
        [0.2963],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.3022],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.3022],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.2963],
        [0.3061],
        [0.3022],
        [0.3022],
        [0.2963],
        [0.3061],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.3022],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.3061],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.3061],
        [0.3022],
        [0.2963],
        [0.3061],
        [0.3022],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.3061],
        [0.2963],
        [0.3061],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.3022],
        [0.3022],
        [0.2963],
        [0.3061],
        [0.3022],
        [0.3022],
        [0.2963],
        [0.2963],
        [0.3061],
        [0.3061],
        [0.3061],
        [0.3022],
        [0.2963],
        [0.3061],
        [0.3022]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2755],
        [1.2755],
        [1.2667],
        [1.2667],
        [1.2755],
        [1.2667],
        [1.2667]])
values:tensor([[ 0.2963],
        [ 0.2963],
        [ 0.3022],
        [ 0.3061],
        [ 0.3061],
        [-0.0145],
        [-0.0105],
        [-0.0105],
        [-0.0128],
        [-0.0145],
        [-0.0128],
        [ 0.3022]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169],
        [2.7169]])
values:tensor([[1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077],
        [1.9077]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(762.7938, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.1821, grad_fn=<MulBackward0>)]
patient losses: [tensor(762.7938, grad_fn=<MulBackward0>), tensor(394.6384, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.1821, grad_fn=<MulBackward0>), tensor(15.8218, grad_fn=<MulBackward0>)]
patient losses: [tensor(217.9120, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.9105, grad_fn=<MulBackward0>)]
patient losses: [tensor(217.9120, grad_fn=<MulBackward0>), tensor(113.4035, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.9105, grad_fn=<MulBackward0>), tensor(4.5711, grad_fn=<MulBackward0>)]
done: False
patient pred:tensor([[0.3027],
        [0.2973],
        [0.3072],
        [0.2973],
        [0.2973],
        [0.2973],
        [0.2973],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.3027],
        [0.2973],
        [0.3072],
        [0.3027],
        [0.3027],
        [0.2973],
        [0.2973],
        [0.2973],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.2973],
        [0.3027],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.3027],
        [0.2973],
        [0.3027],
        [0.2973],
        [0.3027],
        [0.2973],
        [0.2973],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.3027],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.3027],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.2973],
        [0.3072],
        [0.3027],
        [0.3027],
        [0.2973],
        [0.3072],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.3027],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.3027],
        [0.2973],
        [0.3072],
        [0.3027],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.2973],
        [0.3072],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.3027],
        [0.3027],
        [0.2973],
        [0.3072],
        [0.3027],
        [0.3027],
        [0.2973],
        [0.2973],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.3027],
        [0.2973],
        [0.3072],
        [0.3027]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2676],
        [1.2676],
        [1.2765],
        [1.2676],
        [1.2676]])
values:tensor([[ 0.2973],
        [ 0.2973],
        [ 0.3027],
        [ 0.3072],
        [ 0.3072],
        [-0.0135],
        [-0.0099],
        [-0.0099],
        [-0.0119],
        [-0.0135],
        [-0.0119],
        [ 0.3027]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419],
        [2.6419]])
values:tensor([[1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243],
        [1.8243]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(99.3728, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.3263, grad_fn=<MulBackward0>)]
patient losses: [tensor(99.3728, grad_fn=<MulBackward0>), tensor(44.6492, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.3263, grad_fn=<MulBackward0>), tensor(1.8076, grad_fn=<MulBackward0>)]
patient losses: [tensor(272.9597, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.6128, grad_fn=<MulBackward0>)]
patient losses: [tensor(272.9597, grad_fn=<MulBackward0>), tensor(128.9253, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.6128, grad_fn=<MulBackward0>), tensor(5.1321, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 207.80000000000044

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 207.80000000000044

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 207.80000000000044

done: False
patient pred:tensor([[0.3022],
        [0.2971],
        [0.3072],
        [0.2971],
        [0.2971],
        [0.2971],
        [0.2971],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.3022],
        [0.2971],
        [0.3072],
        [0.3022],
        [0.3022],
        [0.2971],
        [0.2971],
        [0.2971],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.2971],
        [0.3022],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.3022],
        [0.2971],
        [0.3022],
        [0.2971],
        [0.3022],
        [0.2971],
        [0.2971],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.3022],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.3022],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.2971],
        [0.3072],
        [0.3022],
        [0.3022],
        [0.2971],
        [0.3072],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.3022],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.3022],
        [0.2971],
        [0.3072],
        [0.3022],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.2971],
        [0.3072],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.3022],
        [0.3022],
        [0.2971],
        [0.3072],
        [0.3022],
        [0.3022],
        [0.2971],
        [0.2971],
        [0.3072],
        [0.3072],
        [0.3072],
        [0.3022],
        [0.2971],
        [0.3072],
        [0.3022]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2765],
        [1.2765],
        [1.2674],
        [1.2674],
        [1.2765],
        [1.2674],
        [1.2674]])
values:tensor([[ 0.2971],
        [ 0.2971],
        [ 0.3022],
        [ 0.3072],
        [ 0.3072],
        [-0.0141],
        [-0.0109],
        [-0.0109],
        [-0.0126],
        [-0.0141],
        [-0.0126],
        [ 0.3022]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774],
        [2.6774]])
values:tensor([[1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638],
        [1.8638]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(755.6225, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.2747, grad_fn=<MulBackward0>)]
patient losses: [tensor(755.6225, grad_fn=<MulBackward0>), tensor(391.3957, grad_fn=<MulBackward0>)]
hasty losses: [tensor(10.2747, grad_fn=<MulBackward0>), tensor(15.9709, grad_fn=<MulBackward0>)]
patient losses: [tensor(215.8766, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.9357, grad_fn=<MulBackward0>)]
patient losses: [tensor(215.8766, grad_fn=<MulBackward0>), tensor(112.5641, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.9357, grad_fn=<MulBackward0>), tensor(4.6174, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 208.20000000000044

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.81, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 208.60000000000045

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 209.20000000000044

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 209.80000000000044

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 210.40000000000043

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.00000000000043

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.00000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.00000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.00000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.00000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.00000000000043

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.00000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.00000000000043

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.60000000000042

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.60000000000042

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.60000000000042

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 211.60000000000042

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.81, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.20000000000041

done: False
patient pred:tensor([[0.3021],
        [0.2974],
        [0.3070],
        [0.2974],
        [0.2974],
        [0.2974],
        [0.2974],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.3070],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.3070],
        [0.3021],
        [0.2974],
        [0.3070],
        [0.3021],
        [0.3021],
        [0.2974],
        [0.2974],
        [0.2974],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.2974],
        [0.3021],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.3070],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.3021],
        [0.2974],
        [0.3021],
        [0.2974],
        [0.3021],
        [0.2974],
        [0.2974],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.3021],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.3021],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.2974],
        [0.3070],
        [0.3021],
        [0.3021],
        [0.2974],
        [0.3070],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.3021],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.3070],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.3070],
        [0.3021],
        [0.2974],
        [0.3070],
        [0.3021],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.3070],
        [0.2974],
        [0.3070],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.3021],
        [0.3021],
        [0.2974],
        [0.3070],
        [0.3021],
        [0.3021],
        [0.2974],
        [0.2974],
        [0.3070],
        [0.3070],
        [0.3070],
        [0.3021],
        [0.2974],
        [0.3070],
        [0.3021],
        [0.3021],
        [0.2974]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2763],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2763],
        [1.2677],
        [1.2677],
        [1.2677],
        [1.2677]])
values:tensor([[ 0.2974],
        [ 0.2974],
        [ 0.3021],
        [ 0.3070],
        [ 0.3070],
        [-0.0139],
        [-0.0112],
        [-0.0112],
        [-0.0123],
        [-0.0139],
        [-0.0123],
        [ 0.3021]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427],
        [2.6427]])
values:tensor([[1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252],
        [1.8252]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(92.4097, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.2750, grad_fn=<MulBackward0>)]
patient losses: [tensor(92.4097, grad_fn=<MulBackward0>), tensor(43.3436, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.2750, grad_fn=<MulBackward0>), tensor(1.7480, grad_fn=<MulBackward0>)]
patient losses: [tensor(250.5755, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.4393, grad_fn=<MulBackward0>)]
patient losses: [tensor(250.5755, grad_fn=<MulBackward0>), tensor(123.2050, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.4393, grad_fn=<MulBackward0>), tensor(4.9026, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.8000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.8000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.8000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.8000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.8000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 212.8000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 213.4000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 213.4000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 213.4000000000004

done: False
patient pred:tensor([[0.3022],
        [0.2979],
        [0.3076],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.3076],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.3076],
        [0.3022],
        [0.2979],
        [0.3076],
        [0.3022],
        [0.3022],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.2979],
        [0.3022],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.3076],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.3022],
        [0.2979],
        [0.3022],
        [0.2979],
        [0.3022],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.3022],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.3022],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.2979],
        [0.3076],
        [0.3022],
        [0.3022],
        [0.2979],
        [0.3076],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.3022],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.3076],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.3076],
        [0.3022],
        [0.2979],
        [0.3076],
        [0.3022],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.3076],
        [0.2979],
        [0.3076],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.3022],
        [0.3022],
        [0.2979],
        [0.3076],
        [0.3022],
        [0.3022],
        [0.2979],
        [0.2979],
        [0.3076],
        [0.3076],
        [0.3076],
        [0.3022],
        [0.2979],
        [0.3076],
        [0.3022],
        [0.3022],
        [0.2979]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2768],
        [1.2681],
        [1.2681],
        [1.2681],
        [1.2681]])
values:tensor([[ 0.2979],
        [ 0.2979],
        [ 0.3022],
        [ 0.3076],
        [ 0.3076],
        [-0.0135],
        [-0.0111],
        [-0.0111],
        [-0.0120],
        [-0.0135],
        [-0.0120],
        [ 0.3022]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928],
        [2.4928]])
values:tensor([[1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586],
        [1.6586]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(682.6877, grad_fn=<MulBackward0>)]
hasty losses: [tensor(9.8050, grad_fn=<MulBackward0>)]
patient losses: [tensor(682.6877, grad_fn=<MulBackward0>), tensor(367.4818, grad_fn=<MulBackward0>)]
hasty losses: [tensor(9.8050, grad_fn=<MulBackward0>), tensor(15.2204, grad_fn=<MulBackward0>)]
patient losses: [tensor(196.1100, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8161, grad_fn=<MulBackward0>)]
patient losses: [tensor(196.1100, grad_fn=<MulBackward0>), tensor(106.2482, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8161, grad_fn=<MulBackward0>), tensor(4.4198, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(0, 1.0), (0, 0.0)]
unweighted_rewards: [1.0, 0.0]
gammas: [0.9, 1.0]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 213.8000000000004

game_state: 2
spec_states_rewards: [(0, 1.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 214.4000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 214.4000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 214.4000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 214.4000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 214.4000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 214.4000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 214.4000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 214.4000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.0000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.6000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [0.9, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 215.6000000000004

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.6561000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 216.2000000000004

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.5904900000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 216.80000000000038

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [0.9, 0.5314410000000002]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 217.40000000000038

done: False
patient pred:tensor([[0.3018],
        [0.2979],
        [0.3077],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.3077],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.3077],
        [0.3018],
        [0.2979],
        [0.3077],
        [0.3018],
        [0.3018],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.2979],
        [0.3018],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.3077],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.3018],
        [0.2979],
        [0.3018],
        [0.2979],
        [0.3018],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.3018],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.3018],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.2979],
        [0.3077],
        [0.3018],
        [0.3018],
        [0.2979],
        [0.3077],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.3018],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.3077],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.3077],
        [0.3018],
        [0.2979],
        [0.3077],
        [0.3018],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.3077],
        [0.2979],
        [0.3077],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.3018],
        [0.3018],
        [0.2979],
        [0.3077],
        [0.3018],
        [0.3018],
        [0.2979],
        [0.2979],
        [0.3077],
        [0.3077],
        [0.3077],
        [0.3018],
        [0.2979],
        [0.3077],
        [0.3018],
        [0.3018],
        [0.2979],
        [0.3018]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2769],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2769],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682],
        [1.2682]])
values:tensor([[ 0.2979],
        [ 0.2979],
        [ 0.3018],
        [ 0.3077],
        [ 0.3077],
        [-0.0135],
        [-0.0115],
        [-0.0115],
        [-0.0122],
        [-0.0135],
        [-0.0122],
        [ 0.3018]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033],
        [2.5033]])
values:tensor([[1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703],
        [1.6703]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(85.9114, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.2778, grad_fn=<MulBackward0>)]
patient losses: [tensor(85.9114, grad_fn=<MulBackward0>), tensor(40.9675, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.2778, grad_fn=<MulBackward0>), tensor(1.7552, grad_fn=<MulBackward0>)]
patient losses: [tensor(232.0601, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.4395, grad_fn=<MulBackward0>)]
patient losses: [tensor(232.0601, grad_fn=<MulBackward0>), tensor(115.7120, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.4395, grad_fn=<MulBackward0>), tensor(4.8974, grad_fn=<MulBackward0>)]
done: False
patient pred:tensor([[0.3018],
        [0.2982],
        [0.3080],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.3080],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.3080],
        [0.3018],
        [0.2982],
        [0.3080],
        [0.3018],
        [0.3018],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.2982],
        [0.3018],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.3080],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.3018],
        [0.2982],
        [0.3018],
        [0.2982],
        [0.3018],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.3018],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.3018],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.2982],
        [0.3080],
        [0.3018],
        [0.3018],
        [0.2982],
        [0.3080],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.3018],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.3080],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.3080],
        [0.3018],
        [0.2982],
        [0.3080],
        [0.3018],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.3080],
        [0.2982],
        [0.3080],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.3018],
        [0.3018],
        [0.2982],
        [0.3080],
        [0.3018],
        [0.3018],
        [0.2982],
        [0.2982],
        [0.3080],
        [0.3080],
        [0.3080],
        [0.3018],
        [0.2982],
        [0.3080],
        [0.3018],
        [0.3018],
        [0.2982],
        [0.3018]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2772],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2772],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684],
        [1.2684]])
values:tensor([[ 0.2982],
        [ 0.2982],
        [ 0.3018],
        [ 0.3080],
        [ 0.3080],
        [-0.0133],
        [-0.0116],
        [-0.0116],
        [-0.0121],
        [-0.0133],
        [-0.0121],
        [ 0.3018]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865],
        [2.3865]])
values:tensor([[1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406],
        [1.5406]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(579.0328, grad_fn=<MulBackward0>)]
hasty losses: [tensor(8.6388, grad_fn=<MulBackward0>)]
patient losses: [tensor(579.0328, grad_fn=<MulBackward0>), tensor(316.6368, grad_fn=<MulBackward0>)]
hasty losses: [tensor(8.6388, grad_fn=<MulBackward0>), tensor(13.5077, grad_fn=<MulBackward0>)]
patient losses: [tensor(186.2230, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.7964, grad_fn=<MulBackward0>)]
patient losses: [tensor(186.2230, grad_fn=<MulBackward0>), tensor(102.5612, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.7964, grad_fn=<MulBackward0>), tensor(4.3924, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 218.00000000000037

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 218.00000000000037

done: False
patient pred:tensor([[0.3014],
        [0.2982],
        [0.3075],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.3075],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.3075],
        [0.3014],
        [0.2982],
        [0.3075],
        [0.3014],
        [0.3014],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.2982],
        [0.3014],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.3075],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.3014],
        [0.2982],
        [0.3014],
        [0.2982],
        [0.3014],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.3014],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.3014],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.2982],
        [0.3075],
        [0.3014],
        [0.3014],
        [0.2982],
        [0.3075],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.3014],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.3075],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.3075],
        [0.3014],
        [0.2982],
        [0.3075],
        [0.3014],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.3075],
        [0.2982],
        [0.3075],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.3014],
        [0.3014],
        [0.2982],
        [0.3075],
        [0.3014],
        [0.3014],
        [0.2982],
        [0.2982],
        [0.3075],
        [0.3075],
        [0.3075],
        [0.3014],
        [0.2982],
        [0.3075],
        [0.3014],
        [0.3014],
        [0.2982],
        [0.3014]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2768],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2768],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683],
        [1.2683]])
values:tensor([[ 0.2982],
        [ 0.2982],
        [ 0.3014],
        [ 0.3075],
        [ 0.3075],
        [-0.0137],
        [-0.0124],
        [-0.0124],
        [-0.0124],
        [-0.0137],
        [-0.0124],
        [ 0.3014]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363],
        [2.4363]])
values:tensor([[1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959],
        [1.5959]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(111.7828, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.6638, grad_fn=<MulBackward0>)]
patient losses: [tensor(111.7828, grad_fn=<MulBackward0>), tensor(54.0801, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.6638, grad_fn=<MulBackward0>), tensor(2.3344, grad_fn=<MulBackward0>)]
patient losses: [tensor(230.9994, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.4513, grad_fn=<MulBackward0>)]
patient losses: [tensor(230.9994, grad_fn=<MulBackward0>), tensor(115.1043, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.4513, grad_fn=<MulBackward0>), tensor(4.9210, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 218.60000000000036

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 219.20000000000036

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 219.80000000000035

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 219.80000000000035

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 219.80000000000035

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 219.80000000000035

done: False
patient pred:tensor([[0.3017],
        [0.2988],
        [0.3083],
        [0.2988],
        [0.2988],
        [0.2988],
        [0.2988],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.3083],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.3083],
        [0.3017],
        [0.2988],
        [0.3083],
        [0.3017],
        [0.3017],
        [0.2988],
        [0.2988],
        [0.2988],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.2988],
        [0.3017],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.3083],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.3017],
        [0.2988],
        [0.3017],
        [0.2988],
        [0.3017],
        [0.2988],
        [0.2988],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.3017],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.3017],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.2988],
        [0.3083],
        [0.3017],
        [0.3017],
        [0.2988],
        [0.3083],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.3017],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.3083],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.3083],
        [0.3017],
        [0.2988],
        [0.3083],
        [0.3017],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.3083],
        [0.2988],
        [0.3083],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.3017],
        [0.3017],
        [0.2988],
        [0.3083],
        [0.3017],
        [0.3017],
        [0.2988],
        [0.2988],
        [0.3083],
        [0.3083],
        [0.3083],
        [0.3017],
        [0.2988],
        [0.3083],
        [0.3017],
        [0.3017],
        [0.2988],
        [0.3017]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2774],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2774],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689],
        [1.2689]])
values:tensor([[ 0.2988],
        [ 0.2988],
        [ 0.3017],
        [ 0.3083],
        [ 0.3083],
        [-0.0128],
        [-0.0119],
        [-0.0119],
        [-0.0116],
        [-0.0128],
        [-0.0116],
        [ 0.3017]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032],
        [2.4032]])
values:tensor([[1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591],
        [1.5591]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(569.6887, grad_fn=<MulBackward0>)]
hasty losses: [tensor(8.8129, grad_fn=<MulBackward0>)]
patient losses: [tensor(569.6887, grad_fn=<MulBackward0>), tensor(311.7177, grad_fn=<MulBackward0>)]
hasty losses: [tensor(8.8129, grad_fn=<MulBackward0>), tensor(13.7653, grad_fn=<MulBackward0>)]
patient losses: [tensor(182.7472, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8427, grad_fn=<MulBackward0>)]
patient losses: [tensor(182.7472, grad_fn=<MulBackward0>), tensor(100.5730, grad_fn=<MulBackward0>)]
hasty losses: [tensor(2.8427, grad_fn=<MulBackward0>), tensor(4.4567, grad_fn=<MulBackward0>)]
game_state: 1
spec_states_rewards: [(0, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([1, 0, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.9]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 220.40000000000035

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.00000000000034

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.00000000000034

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.00000000000034

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.00000000000034

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.00000000000034

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(0)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.00000000000034

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(0), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.00000000000034

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.00000000000034

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.81]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.00000000000034

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
('chi', 'phi')
new_spec_states_rewards:[(1, 0.0), (0, 1.0)]
unweighted_rewards: [0.0, 1.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.60000000000034

game_state: 1
spec_states_rewards: [(1, 0.0), (0, 1.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.60000000000034

game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.60000000000034

game_state: 0
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
actions: [Categorical(probs: torch.Size([2])), Categorical(probs: torch.Size([2]))]
joint_action: [tensor(1), tensor(0)]
()
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.60000000000034

Score (10/10): 0.14999999999999994 (recent)   0.22160000000000032 (average)
game_state: 2
spec_states_rewards: [(1, 0.0), (0, 0.0)]
spec_state_vectors: [tensor([0, 1, 0]), tensor([1, 0])]
joint_action: [tensor(1), tensor(1)]
psi
new_spec_states_rewards:[(1, 0.0), (0, 0.0)]
unweighted_rewards: [0.0, 0.0]
gammas: [1.0, 0.7290000000000001]
G (chi -> F psi)
0.4
G F phi
0.6
game score: 221.60000000000034

done: False
patient pred:tensor([[0.3011],
        [0.2986],
        [0.3081],
        [0.2986],
        [0.2986],
        [0.2986],
        [0.2986],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.3081],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.3081],
        [0.3011],
        [0.2986],
        [0.3081],
        [0.3011],
        [0.3011],
        [0.2986],
        [0.2986],
        [0.2986],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.2986],
        [0.3011],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.3081],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.3011],
        [0.2986],
        [0.3011],
        [0.2986],
        [0.3011],
        [0.2986],
        [0.2986],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.3011],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.3011],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.2986],
        [0.3081],
        [0.3011],
        [0.3011],
        [0.2986],
        [0.3081],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.3011],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.3081],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.3081],
        [0.3011],
        [0.2986],
        [0.3081],
        [0.3011],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.3081],
        [0.2986],
        [0.3081],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.3011],
        [0.3011],
        [0.2986],
        [0.3081],
        [0.3011],
        [0.3011],
        [0.2986],
        [0.2986],
        [0.3081],
        [0.3081],
        [0.3081],
        [0.3011],
        [0.2986],
        [0.3081],
        [0.3011],
        [0.3011],
        [0.2986],
        [0.3011]], grad_fn=<AddmmBackward0>)
patient target:tensor([[1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2773],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2773],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688],
        [1.2688]])
values:tensor([[ 0.2986],
        [ 0.2986],
        [ 0.3011],
        [ 0.3081],
        [ 0.3081],
        [-0.0132],
        [-0.0126],
        [-0.0126],
        [-0.0121],
        [-0.0132],
        [-0.0121],
        [ 0.3011]], grad_fn=<AddmmBackward0>)
patient pred:tensor([[1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361]], grad_fn=<AddmmBackward0>)
patient target:tensor([[2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825],
        [2.3825]])
values:tensor([[1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361],
        [1.5361]], grad_fn=<AddmmBackward0>)
patient losses: [tensor(107.1537, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.6970, grad_fn=<MulBackward0>)]
patient losses: [tensor(107.1537, grad_fn=<MulBackward0>), tensor(52.1420, grad_fn=<MulBackward0>)]
hasty losses: [tensor(1.6970, grad_fn=<MulBackward0>), tensor(2.3835, grad_fn=<MulBackward0>)]
patient losses: [tensor(220.0277, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.5032, grad_fn=<MulBackward0>)]
patient losses: [tensor(220.0277, grad_fn=<MulBackward0>), tensor(110.6879, grad_fn=<MulBackward0>)]
hasty losses: [tensor(3.5032, grad_fn=<MulBackward0>), tensor(5.0222, grad_fn=<MulBackward0>)]
Score: 0.22159999999999996
completed
done
